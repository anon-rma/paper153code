{"conversation_history": ["turn 1: Select documents for me: I want both text and PDF files, and I prefer to select several at once. -> Okay, opening the document selector. You can choose multiple text or PDF files.", "turn 2: Then create a text file named 'Combined Notes' with mime type text/plain. -> Okay, creating 'Combined Notes' as a plain text file."], "query": "Email that file to test@example.com.", "rewrited_query": "Email the text file named 'Combined Notes' with mime type text/plain to test@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "test@example.com", "attachments": ["Combined Notes.txt"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-122-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I have a requirement to open a file in XML format. Can you help me choose one? -> Certainly, I'll present you with options to select an XML file.", "turn 2: Create an XML file called 'New Configuration' with mime type application/xml. -> Creating 'New Configuration' as an XML file for you now."], "query": "Send that to john.doe@example.com.", "rewrited_query": "Send the XML file called 'New Configuration' with mime type application/xml to john.doe@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "john.doe@example.com", "attachments": ["New Configuration.xml"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-123-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I require to open multiple documents. Could you allow me to pick files from both images and spreadsheets at once? -> Alright, you can now select multiple images and spreadsheet files.", "turn 2: How about creating a JPEG image file called 'Collage' with mime type image/jpeg? -> Creating a JPEG image named 'Collage' now."], "query": "Email it with the subject 'New Image' to team@example.com.", "rewrited_query": "Email the JPEG image file called 'Collage' with mime type image/jpeg with the subject 'New Image' to team@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "team@example.com", "subject": "New Image", "attachments": ["Collage.jpeg"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-125-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I want to browse and open a plain text document from my storage. -> No problem, opening the file selector to choose a plain text file.", "turn 2: Then make a new text file and call it 'My Diary' with mime type text/plain. -> Creating a new text file titled 'My Diary'."], "query": "Email it to info@example.com.", "rewrited_query": "Email the new text file titled 'My Diary' to info@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "info@example.com", "subject": "My Diary", "attachments": ["My Diary.txt"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-127-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please provide me with an option to select a single video file from my device. -> Sure, I'm opening a file selector for you to choose a single video file.", "turn 2: Can you create a video file with the name 'New Recording' with mime type video/mp4? -> I'm now creating a new video file called 'New Recording' with the format video/mp4."], "query": "Text it to Mom with a message saying, 'Check out this new recording!'", "rewrited_query": "Text the 'New Recording' to Mom with a message saying, 'Check out this new recording!'", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "Check out this new recording!", "attachments": ["New Recording"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-121-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Select documents for me: I want both text and PDF files, and I prefer to select several at once. -> Okay, opening the document selector. You can choose multiple text or PDF files.", "turn 2: Then create a text file named 'Combined Notes' with mime type text/plain. -> Okay, creating 'Combined Notes' as a plain text file."], "query": "Can you send it to my email group with the message: 'Please review these notes'?", "rewrited_query": "Can you send the 'Combined Notes' to my email group with the message: 'Please review these notes'?", "answer": {"plan": "send_message", "arguments": {"to": "my email group", "message": "Please review these notes", "attachments": ["Combined Notes"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-122-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I have a requirement to open a file in XML format. Can you help me choose one? -> Certainly, I'll present you with options to select an XML file.", "turn 2: Create an XML file called 'New Configuration' with mime type application/xml. -> Creating 'New Configuration' as an XML file for you now."], "query": "Send it to David, asking 'Can you validate this new configuration file?'", "rewrited_query": "Send the 'New Configuration' to David, asking 'Can you validate this new configuration file?'", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "Can you validate this new configuration file?", "attachments": ["New Configuration"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-123-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Access document: I need to open a single file with application JSON format. -> I will now open the file selector for you to choose a JSON file.", "turn 2: Okay, create a new JSON file called 'Data Export' with mime type application/json. -> Alright, creating a new JSON file named 'Data Export'."], "query": "Send it to the dev team with the content 'Here is the latest data export.'", "rewrited_query": "Send the 'Data Export' to the dev team with the content 'Here is the latest data export.'", "answer": {"plan": "send_message", "arguments": {"to": "the dev team", "message": "Here is the latest data export.", "attachments": ["Data Export"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-124-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I require to open multiple documents. Could you allow me to pick files from both images and spreadsheets at once? -> Alright, you can now select multiple images and spreadsheet files.", "turn 2: How about creating a JPEG image file called 'Collage' with mime type image/jpeg? -> Creating a JPEG image named 'Collage' now."], "query": "Send it to my friend Sarah with the message 'I made this collage for you!'", "rewrited_query": "Send the 'Collage' to my friend Sarah with the message 'I made this collage for you!'", "answer": {"plan": "send_message", "arguments": {"to": "my friend Sarah", "message": "I made this collage for you!", "attachments": ["Collage"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-125-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Choose one PNG image file from my device. -> Okay, here's a file selector for you to pick a PNG image.", "turn 2: Create a PNG image called 'Screenshot' with mime type image/png. -> Okay, creating a PNG image named 'Screenshot'."], "query": "Text it to my QA team with a note saying, 'Please check this screenshot.'", "rewrited_query": "Text the 'Screenshot' to my QA team with a note saying, 'Please check this screenshot.'", "answer": {"plan": "send_message", "arguments": {"to": "my QA team", "message": "Please check this screenshot.", "attachments": ["Screenshot"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-126-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to browse and open a plain text document from my storage. -> No problem, opening the file selector to choose a plain text file.", "turn 2: Then make a new text file and call it 'My Diary' with mime type text/plain. -> Creating a new text file titled 'My Diary'."], "query": "Send it to myself as a reminder with the content 'My diary entry for today.'", "rewrited_query": "Send the 'My Diary' to myself as a reminder with the content 'My diary entry for today.'", "answer": {"plan": "send_message", "arguments": {"to": "myself", "message": "My diary entry for today.", "attachments": ["My Diary"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-127-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Select a video file from my local storage, please. -> Sure, I'm opening the file selector to find your video.", "turn 2: Can you create a new video called 'Vacation Clip' with mime type video/mp4? -> I'm creating a new video file named 'Vacation Clip' with the format video/mp4."], "query": "Send the video to my travel group with a message saying, 'Here's a clip from my vacation!'", "rewrited_query": "Send the 'Vacation Clip' to my travel group with a message saying, 'Here's a clip from my vacation!'", "answer": {"plan": "send_message", "arguments": {"to": "my travel group", "message": "Here's a clip from my vacation!", "attachments": ["Vacation Clip"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-128-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Access a Word document; I need it for some editing work. -> Okay, opening the file selector to pick a Word document.", "turn 2: Then create a new Word document named 'Draft' with mime type application/msword. -> Creating a new Word document called 'Draft'."], "query": "Text it to my editor with the content 'Draft document for review.'", "rewrited_query": "Text the 'Draft' to my editor with the content 'Draft document for review.'", "answer": {"plan": "send_message", "arguments": {"to": "my editor", "message": "Draft document for review.", "attachments": ["Draft"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-129-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Pick an XML file so I can review its contents. -> Sure, I'm ready. Just select the XML file you'd like to review.", "turn 2: What if I want to create a new XML document instead of selecting an existing XML file? -> No problem. I will create a new XML document for you. The URI for the new document is: content://documents/new.xml."], "query": "Open it immediately, please.", "rewrited_query": "Open content://documents/new.xml immediately, please.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/new.xml"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-132-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I need a log file in plain text format; please open one for me. -> Alright, opening the file selector for plain text log files now.", "turn 2: Can we make a new plain text document if I don't see what I need? -> Understood. Creating a new plain text document. The URI for the new document is: content://documents/new.txt."], "query": "Could you open it for me?", "rewrited_query": "Could you open content://documents/new.txt for me?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/new.txt"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-133-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please enable me to select both image and PDF files at once. -> No problem. You can now select multiple files that are either images or PDFs.", "turn 2: If I wanted to create a new image file, could I? -> Yes, I can create a new image file. The URI for the new file is content://images/new.png."], "query": "Open that new image file, please.", "rewrited_query": "Open content://images/new.png, please.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://images/new.png"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-134-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Choose an audio file from my collection. -> Okay, please choose an audio file from the file selector.", "turn 2: How do I generate a new audio file here? -> You can create a new audio file. The URI is: content://audio/new.mp3"], "query": "Can you go ahead and open it?", "rewrited_query": "Can you go ahead and open content://audio/new.mp3?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://audio/new.mp3"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-135-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Let me select a colorful image file for editing purposes. -> Okay, I'm opening the image selector for you now.", "turn 2: Can I create a new image file with a default name? -> Sure, a new image file named 'image.png' is created. Its URI is content://images/image.png."], "query": "Open that image.", "rewrited_query": "Open content://images/image.png.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://images/image.png"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-136-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to open a PDF document for a quick read. -> Got it. Please select the PDF you'd like to open.", "turn 2: If I don't have a PDF document, how do I create it? -> No problem! I'm creating a new PDF document for you. You can find it at content://documents/new.pdf."], "query": "Could you please open it?", "rewrited_query": "Could you please open content://documents/new.pdf?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/new.pdf"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-137-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Allow me to pick multiple plain text documents for review. -> Affirmative, you can select multiple plain text files now.", "turn 2: And what if I want to create a new plain text file? -> Okay, creating a new plain text file now. The URI for the new file is content://documents/new.txt."], "query": "Please open it.", "rewrited_query": "Please open content://documents/new.txt.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/new.txt"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-138-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Help me open a .doc file stored on my device. -> Alright, I'm opening the file selector for .doc files.", "turn 2: If there isn't any .doc file, then create a new .doc document -> Alright, I'm creating a new .doc document for you. The URI for the new document is: content://documents/new.doc"], "query": "Can you open that?", "rewrited_query": "Can you open content://documents/new.doc?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/new.doc"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-139-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I require opening several spreadsheets for analysis. Allow multiple selections. -> Understood. I am now opening the file selector to allow you to pick multiple spreadsheets.", "turn 2: How about creating a spreadsheet named 'Consolidated Data' with mime type application/vnd.ms-excel? -> Creating a spreadsheet named 'Consolidated Data' with MIME type 'application/vnd.ms-excel'. The URI for the new document is: content://documents/Consolidated Data.xls"], "query": "Can you email that to support@example.com?", "rewrited_query": "Can you email content://documents/Consolidated Data.xls to support@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "support@example.com", "attachments": ["content://documents/Consolidated Data.xls"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-130-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you let me open a JSON file from my archive? -> Okay, I'm opening the file selector for JSON files. Please choose the file you want to open.", "turn 2: If there isn't a JSON file, go ahead and create a new JSON document. -> Sure, I'll create a new JSON document for you. The URI for the new document is: content://documents/new.json."], "query": "Send it with the subject 'New JSON' to test@example.com.", "rewrited_query": "Send content://documents/new.json with the subject 'New JSON' to test@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "test@example.com", "subject": "New JSON", "attachments": ["content://documents/new.json"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-131-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Pick an XML file so I can review its contents. -> Sure, I'm ready. Just select the XML file you'd like to review.", "turn 2: What if I want to create a new XML document instead of selecting an existing XML file? -> No problem. I will create a new XML document for you. The URI for the new document is: content://documents/new.xml."], "query": "Email it to devteam@example.com with 'XML file' as the subject.", "rewrited_query": "Email content://documents/new.xml to devteam@example.com with 'XML file' as the subject.", "answer": {"plan": "send_email", "arguments": {"to": "devteam@example.com", "subject": "XML file", "attachments": ["content://documents/new.xml"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-132-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need a log file in plain text format; please open one for me. -> Alright, opening the file selector for plain text log files now.", "turn 2: Can we make a new plain text document if I don't see what I need? -> Understood. Creating a new plain text document. The URI for the new document is: content://documents/new.txt."], "query": "Can you email it to qa@example.com with the subject 'New Log'?", "rewrited_query": "Can you email content://documents/new.txt to qa@example.com with the subject 'New Log'?", "answer": {"plan": "send_email", "arguments": {"to": "qa@example.com", "subject": "New Log", "attachments": ["content://documents/new.txt"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-133-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please enable me to select both image and PDF files at once. -> No problem. You can now select multiple files that are either images or PDFs.", "turn 2: If I wanted to create a new image file, could I? -> Yes, I can create a new image file. The URI for the new file is content://images/new.png."], "query": "Email that to marketing@example.com.", "rewrited_query": "Email content://images/new.png to marketing@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "marketing@example.com", "attachments": ["content://images/new.png"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-134-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Choose an audio file from my collection. -> Okay, please choose an audio file from the file selector.", "turn 2: How do I generate a new audio file here? -> You can create a new audio file. The URI is: content://audio/new.mp3"], "query": "Send that file to my music teacher at music@example.com.", "rewrited_query": "Send content://audio/new.mp3 file to my music teacher at music@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "music@example.com", "attachments": ["content://audio/new.mp3"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-135-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Let me select a colorful image file for editing purposes. -> Okay, I'm opening the image selector for you now.", "turn 2: Can I create a new image file with a default name? -> Sure, a new image file named 'image.png' is created. Its URI is content://images/image.png."], "query": "Email that image to artclass@example.com.", "rewrited_query": "Email content://images/image.png to artclass@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "artclass@example.com", "attachments": ["content://images/image.png"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-136-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I want to open a PDF document for a quick read. -> Got it. Please select the PDF you'd like to open.", "turn 2: If I don't have a PDF document, how do I create it? -> No problem! I'm creating a new PDF document for you. You can find it at content://documents/new.pdf."], "query": "Email that PDF to my colleague at john.doe@example.com.", "rewrited_query": "Email content://documents/new.pdf to my colleague at john.doe@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "john.doe@example.com", "attachments": ["content://documents/new.pdf"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-137-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Allow me to pick multiple plain text documents for review. -> Affirmative, you can select multiple plain text files now.", "turn 2: And what if I want to create a new plain text file? -> Okay, creating a new plain text file now. The URI for the new file is content://documents/new.txt."], "query": "Email it to info@example.com with the subject 'New Text File'.", "rewrited_query": "Email content://documents/new.txt to info@example.com with the subject 'New Text File'.", "answer": {"plan": "send_email", "arguments": {"to": "info@example.com", "subject": "New Text File", "attachments": ["content://documents/new.txt"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-138-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Help me open a .doc file stored on my device. -> Alright, I'm opening the file selector for .doc files.", "turn 2: If there isn't any .doc file, then create a new .doc document -> Alright, I'm creating a new .doc document for you. The URI for the new document is: content://documents/new.doc"], "query": "Email that file to my supervisor at supervisor@example.com.", "rewrited_query": "Email content://documents/new.doc file to my supervisor at supervisor@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "supervisor@example.com", "attachments": ["content://documents/new.doc"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-139-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Find and open a CSV file from my documents. -> Okay, I'm displaying the CSV files for you to choose from.", "turn 2: If I need to generate a new CSV file, what do I do? -> No problem, creating a new CSV file named 'new.csv' for you."], "query": "Can you open that CSV file now?", "rewrited_query": "Can you open the new CSV file named 'new.csv' now?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/new.csv", "mime_type": "text/csv"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-140-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Could you let me select both PDF and Word files with multi-select enabled? -> Okay, please select the PDF or Word files you need. You can select multiple files at once.", "turn 2: If I don't have the PDF or Word file, create a new PDF document for me named 'MyDocument.pdf'. -> I'm on it. Creating a new PDF document named 'MyDocument.pdf' for you."], "query": "Please go ahead and open it.", "rewrited_query": "Please go ahead and open the new PDF document named 'MyDocument.pdf'.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/MyDocument.pdf", "mime_type": "application/pdf"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-151-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to open a shell script file for configuration purposes. -> No problem, select the shell script you would like to open.", "turn 2: If I don't have the shell script file, create a new shell script file named 'NewScript.sh'. -> Alright, creating a new shell script file named 'NewScript.sh' now."], "query": "Open that script for me.", "rewrited_query": "Open the new shell script file named 'NewScript.sh' for me.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/NewScript.sh", "mime_type": "application/x-sh"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-153-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Select an image file from the image category; any format is acceptable. -> Alright, you can choose any image file now.", "turn 2: If there isn't an image file, create a new JPEG image called 'NewImage.jpg'. -> Okay, creating a new JPEG image file named 'NewImage.jpg'."], "query": "Can you show it to me?", "rewrited_query": "Can you show the new JPEG image file named 'NewImage.jpg' to me?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/NewImage.jpg", "mime_type": "image/jpeg"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-154-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I require a vector graphic file, like an SVG, for design purposes. -> Understood. Please select the SVG file you'd like to open.", "turn 2: If the SVG file is not there, create a new SVG file named 'NewGraphic.svg'. -> Creating a new SVG file called 'NewGraphic.svg'."], "query": "Now, open it please.", "rewrited_query": "Now, open the new SVG file called 'NewGraphic.svg' please.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/NewGraphic.svg", "mime_type": "image/svg+xml"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-155-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Retrieve a PDF document stored on my device. -> Okay, I am ready for you to select the PDF file.", "turn 2: If there is no PDF document, create a new PDF document named 'MyNewDocument.pdf'. -> Sure, I'm creating 'MyNewDocument.pdf' for you."], "query": "Let's open it up.", "rewrited_query": "Let's open the new PDF document named 'MyNewDocument.pdf' up.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/MyNewDocument.pdf", "mime_type": "application/pdf"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-156-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I would like to open several video files; please enable multiple selections. -> Got it. Select the video files you'd like to open. Multiple selections are enabled.", "turn 2: If I don't have any video files, create a new MP4 video called 'NewVideo.mp4'. -> Creating the new MP4 video 'NewVideo.mp4' now."], "query": "Now open it.", "rewrited_query": "Now open the new MP4 video 'NewVideo.mp4'.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/NewVideo.mp4", "mime_type": "video/mp4"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-157-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I need one DOC file, preferably in the Microsoft Word format. -> Sure, please select the DOC file you need.", "turn 2: If I don't have the DOC file, then create a new DOC file named 'MyWordFile.doc'. -> Got it. Creating a new DOC file named 'MyWordFile.doc'."], "query": "Can you open it for me?", "rewrited_query": "Can you open the new DOC file named 'MyWordFile.doc' for me?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/MyWordFile.doc", "mime_type": "application/msword"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-158-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Let me select multiple ePub books to read offline. -> No problem. Please select the ePub files. Multiple selections are allowed.", "turn 2: If there aren't any ePub files, create a new ePub file called 'NewBook.epub'. -> Okay, creating 'NewBook.epub'."], "query": "Open that.", "rewrited_query": "Open the new ePub file called 'NewBook.epub'.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/NewBook.epub", "mime_type": "application/epub+zip"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-159-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to open a JSON file from my archive for processing. -> Please select the JSON file you want to open.", "turn 2: If there is no JSON file, create a new JSON file named 'MyJsonFile.json'. -> Creating a new JSON file named 'MyJsonFile.json' for you."], "query": "Can you open it?", "rewrited_query": "Can you open the new JSON file named 'MyJsonFile.json'?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://file/MyJsonFile.json", "mime_type": "application/json"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-160-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to open a JSON file from my archive for processing. -> Please select the JSON file you want to open.", "turn 2: If there is no JSON file, create a new JSON file named 'MyJsonFile.json'. -> Creating a new JSON file named 'MyJsonFile.json' for you."], "query": "Send it to test@example.com with the subject 'JSON File'.", "rewrited_query": "Send MyJsonFile.json to test@example.com with the subject 'JSON File'.", "answer": {"plan": "send_email", "arguments": {"to": "test@example.com", "subject": "JSON File", "attachments": ["MyJsonFile.json"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-160-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need an audio clip for my project; let me fetch one file. -> No problem, I'm opening the audio file picker now.", "turn 2: If I can't find the right audio file, create a new document with mime_type audio/mp3 and initial_name NewAudio.mp3 for me. -> Understood. I can create a new audio file for you. It will be saved as content://documents/NewAudio.mp3."], "query": "Can you open it now?", "rewrited_query": "Can you open content://documents/NewAudio.mp3 now?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewAudio.mp3", "mime_type": "audio/mpeg"}}, "unique_idx": "ACTION_GET_CONTENT-177-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Fetch multiple files regardless of the type available on my device. -> Alright, I've opened the file picker showing all file types. You can select multiple files.", "turn 2: What if I want to create a new document with mime_type text/plain and initial_name NewText.txt instead of selecting an existing one? -> Sure, I can create a new text document for you. It will be located at content://documents/NewText.txt."], "query": "Okay, open that location.", "rewrited_query": "Okay, open content://documents/NewText.txt.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewText.txt", "mime_type": "text/plain"}}, "unique_idx": "ACTION_GET_CONTENT-178-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Could you let me choose a single image file for an attachment? -> Okay, I'm opening the image file picker so you can select one.", "turn 2: If the file picker does not have it, create a new document with mime_type image/jpeg and initial_name NewImage.jpeg for me. -> I can definitely do that! The new image will be available at content://images/NewImage.jpeg."], "query": "Please open that for me.", "rewrited_query": "Please open content://images/NewImage.jpeg for me.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://images/NewImage.jpeg", "mime_type": "image/jpeg"}}, "unique_idx": "ACTION_GET_CONTENT-179-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Select a couple of audio recordings from my device, please. -> Got it. Opening the audio file picker, where you can select multiple recordings.", "turn 2: And if I don't see the audio I want, can I make a new document with mime_type audio/mpeg and initial_name NewAudio.mpeg? -> Of course. I can create an MPEG audio file for you at content://audio/NewAudio.mpeg."], "query": "Alright, go ahead and open that.", "rewrited_query": "Alright, go ahead and open content://audio/NewAudio.mpeg.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://audio/NewAudio.mpeg", "mime_type": "audio/mpeg"}}, "unique_idx": "ACTION_GET_CONTENT-180-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I need to pick one text document to attach to my email. -> Okay, opening the file picker for text documents.", "turn 2: If it's not there, can I generate a new document with mime_type text/plain and initial_name NewTextFile.txt? -> Sure, I can generate that for you. Look for it at content://text/NewTextFile.txt."], "query": "Can you open it for me to check?", "rewrited_query": "Can you open content://text/NewTextFile.txt for me to check?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://text/NewTextFile.txt", "mime_type": "text/plain"}}, "unique_idx": "ACTION_GET_CONTENT-181-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to find and attach a single PDF file. Could you open the file browser for PDFs? -> Sure, here is the file browser, filtered to show PDF files.", "turn 2: If I can't find that PDF, I want to create a new document with mime_type application/pdf and initial_name NewFile.pdf. -> No problem. If you want, I can create 'NewFile.pdf' with the location content://documents/NewFile.pdf."], "query": "Yes, please create it and open it.", "rewrited_query": "Yes, please create it and open content://documents/NewFile.pdf.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewFile.pdf", "mime_type": "application/pdf"}}, "unique_idx": "ACTION_GET_CONTENT-182-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Could you help me browse through all file types so I can pick something? -> I've opened the file picker, showing all available file types.", "turn 2: If I can't find the file, allow me to create a new document with mime_type text/plain and initial_name NewDocument.txt then. -> Understood. I can create that text file, and it will be saved as content://textfiles/NewDocument.txt."], "query": "Okay, go ahead and create it and open that file.", "rewrited_query": "Okay, go ahead and create it and open content://textfiles/NewDocument.txt.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://textfiles/NewDocument.txt", "mime_type": "text/plain"}}, "unique_idx": "ACTION_GET_CONTENT-183-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Allow me to attach more than one PDF file for sharing with my colleagues. -> Sure, I've opened the file picker for PDF files, and you can select multiple files.", "turn 2: If I don't see the exact file I need, can I create a new document with mime_type application/pdf and initial_name NewDocument.pdf? -> Certainly! If you decide to create a new PDF, it will be available at content://documents/NewDocument.pdf."], "query": "Send that to my boss with a message 'Here is the new document'.", "rewrited_query": "Send content://documents/NewDocument.pdf to my boss with a message 'Here is the new document'.", "answer": {"plan": "send_message", "arguments": {"to": "my boss", "message": "Here is the new document", "attachments": ["content://documents/NewDocument.pdf"]}}, "unique_idx": "ACTION_GET_CONTENT-175-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Show me the interface to pick an image from my gallery for a quick upload. -> Here's the file picker, ready for you to select an image from your gallery.", "turn 2: If the image I need isn't there, can you create a new document with mime_type image/jpeg and initial_name NewImage.jpeg? -> Got it. A new JPEG image, named 'NewImage.jpeg', can be created for you at content://example/new_image."], "query": "Text it to my sister with 'Check this out!'", "rewrited_query": "Text content://example/new_image to my sister with 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "Check this out!", "attachments": ["content://example/new_image"]}}, "unique_idx": "ACTION_GET_CONTENT-176-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need an audio clip for my project; let me fetch one file. -> No problem, I'm opening the audio file picker now.", "turn 2: If I can't find the right audio file, create a new document with mime_type audio/mp3 and initial_name NewAudio.mp3 for me. -> Understood. I can create a new audio file for you. It will be saved as content://documents/NewAudio.mp3."], "query": "Send it to 555-123-4567.", "rewrited_query": "Send content://documents/NewAudio.mp3 to 555-123-4567.", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "content://documents/NewAudio.mp3"}}, "unique_idx": "ACTION_GET_CONTENT-177-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you let me choose a single image file for an attachment? -> Okay, I'm opening the image file picker so you can select one.", "turn 2: If the file picker does not have it, create a new document with mime_type image/jpeg and initial_name NewImage.jpeg for me. -> I can definitely do that! The new image will be available at content://images/NewImage.jpeg."], "query": "Send that image to 555-555-5555.", "rewrited_query": "Send content://images/NewImage.jpeg to 555-555-5555.", "answer": {"plan": "send_message", "arguments": {"to": "555-555-5555", "message": "content://images/NewImage.jpeg"}}, "unique_idx": "ACTION_GET_CONTENT-179-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Select a couple of audio recordings from my device, please. -> Got it. Opening the audio file picker, where you can select multiple recordings.", "turn 2: And if I don't see the audio I want, can I make a new document with mime_type audio/mpeg and initial_name NewAudio.mpeg? -> Of course. I can create an MPEG audio file for you at content://audio/NewAudio.mpeg."], "query": "Send it to Sarah, telling her, 'This is the audio file I promised'.", "rewrited_query": "Send content://audio/NewAudio.mpeg to Sarah, telling her, 'This is the audio file I promised'.", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "This is the audio file I promised", "attachments": ["content://audio/NewAudio.mpeg"]}}, "unique_idx": "ACTION_GET_CONTENT-180-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to pick one text document to attach to my email. -> Okay, opening the file picker for text documents.", "turn 2: If it's not there, can I generate a new document with mime_type text/plain and initial_name NewTextFile.txt? -> Sure, I can generate that for you. Look for it at content://text/NewTextFile.txt."], "query": "Send it to my mom with the message 'Here is the text file.'", "rewrited_query": "Send content://text/NewTextFile.txt to my mom with the message 'Here is the text file.'", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "Here is the text file.", "attachments": ["content://text/NewTextFile.txt"]}}, "unique_idx": "ACTION_GET_CONTENT-181-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to find and attach a single PDF file. Could you open the file browser for PDFs? -> Sure, here is the file browser, filtered to show PDF files.", "turn 2: If I can't find that PDF, I want to create a new document with mime_type application/pdf and initial_name NewFile.pdf. -> No problem. If you want, I can create 'NewFile.pdf' with the location content://documents/NewFile.pdf."], "query": "Send that file to John with the message, 'Here is the PDF you requested'.", "rewrited_query": "Send content://documents/NewFile.pdf to John with the message, 'Here is the PDF you requested'.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Here is the PDF you requested", "attachments": ["content://documents/NewFile.pdf"]}}, "unique_idx": "ACTION_GET_CONTENT-182-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you help me browse through all file types so I can pick something? -> I've opened the file picker, showing all available file types.", "turn 2: If I can't find the file, allow me to create a new document with mime_type text/plain and initial_name NewDocument.txt then. -> Understood. I can create that text file, and it will be saved as content://textfiles/NewDocument.txt."], "query": "Text it to my boss saying 'Please review this doc'.", "rewrited_query": "Text content://textfiles/NewDocument.txt to my boss saying 'Please review this doc'.", "answer": {"plan": "send_message", "arguments": {"to": "my boss", "message": "Please review this doc", "attachments": ["content://textfiles/NewDocument.txt"]}}, "unique_idx": "ACTION_GET_CONTENT-183-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to attach several images at once. Please open the selector for me. -> Okay, opening the image selector so you can choose multiple images.", "turn 2: If I want to create a JPEG file, what would be the process with mime_type as image/jpeg and initial_name as Photo.jpg? -> To create a JPEG file, I'll use the parameters you provided: mime_type as image/jpeg and initial_name as Photo.jpg. What location do you want this photo saved?"], "query": "After it's saved, send it to my friend at 555-123-4567 saying 'Check out this JPEG!'", "rewrited_query": "After the JPEG file is saved, send the JPEG file to my friend at 555-123-4567 saying 'Check out this JPEG!'", "answer": {"plan": "send_message", "arguments": {"to": "my friend at 555-123-4567", "message": "Check out this JPEG!"}}, "unique_idx": "ACTION_GET_CONTENT-184-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to quickly grab one audio snippet for my project. -> Sure, opening the audio file selector for you.", "turn 2: Can you generate a WAV file for it with mime_type as audio/wav and initial_name as NewAudio.wav? -> Understood. I will create a WAV file with the name NewAudio.wav, using audio/wav as the mime type. I need to know the directory location."], "query": "Once it's ready, text it to my producer, tell him 'Here's that audio snippet.'", "rewrited_query": "Once the WAV file is ready, text the WAV file to my producer, tell him 'Here's that audio snippet.'", "answer": {"plan": "send_message", "arguments": {"to": "my producer", "message": "Here's that audio snippet.", "attachments": ["WAV file"]}}, "unique_idx": "ACTION_GET_CONTENT-185-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Please let me select multiple video clips from my gallery for a montage. -> No problem, opening the video selector in multiple selection mode.", "turn 2: What if I wanted to create an MP4 video file with mime_type as video/mp4 and initial_name as NewVideo.mp4? -> If you wish to create a video file, I would use video/mp4 for the mime_type, and the initial name will be NewVideo.mp4. Please provide a location for the video file."], "query": "When that's done, send it to +15555555555 with the message 'New video file attached!'", "rewrited_query": "When the MP4 video file is done, send the MP4 video file to +15555555555 with the message 'New video file attached!'", "answer": {"plan": "send_message", "arguments": {"to": "+15555555555", "message": "New video file attached!", "attachments": ["MP4 video file"]}}, "unique_idx": "ACTION_GET_CONTENT-186-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to choose a file of any kind for my assignment; open the file selector. -> Okay, opening the file selector to browse all file types.", "turn 2: Then, how to make a new text file with mime_type as text/plain and initial_name as NewDocument.txt? -> I can create a text file for you. I will use text/plain as the mime_type and NewDocument.txt as the file name. Where should I save it?"], "query": "After saving it, can you text it to Sarah?", "rewrited_query": "After saving the text file, can you text the text file to Sarah?", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "attachments": ["text file"], "message": "text file"}}, "unique_idx": "ACTION_GET_CONTENT-187-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Select a single image; I don't need multiple selections, just one picture. -> Got it. Opening the image selector for a single image selection.", "turn 2: Then, how can I create a PNG image from that with mime_type as image/png and initial_name as NewImage.png? -> I'm ready to create a PNG image with mime_type as image/png and the name NewImage.png. Tell me where to save it."], "query": "Once it's created, send it to my group chat.", "rewrited_query": "Once the PNG image is created, send the PNG image to my group chat.", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "PNG image", "attachments": ["PNG image"]}}, "unique_idx": "ACTION_GET_CONTENT-188-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to attach several document files to my email. Please open the file picker for plain text files. -> Okay, opening the file picker for multiple plain text files.", "turn 2: Can you help me generate a new plain text file with mime_type as text/plain and initial_name as NewText.txt? -> Sure, I can create a new plain text file named NewText.txt. I'll use text/plain as the file type. Where would you like to save it?"], "query": "Text it to my assistant once it is saved.", "rewrited_query": "Text the plain text file to my assistant once the plain text file is saved.", "answer": {"plan": "send_message", "arguments": {"to": "my assistant", "message": "plain text file", "attachments": ["plain text file"]}}, "unique_idx": "ACTION_GET_CONTENT-189-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Fetch several PDF reports from my device for review. -> Sure, let me open the PDF selector with multiple selection enabled.", "turn 2: What is needed to generate a new PDF document with mime_type as application/pdf and initial_name as NewPDF.pdf? -> To generate a new PDF document, I will need to use application/pdf as the mime_type and NewPDF.pdf as the initial name. Where do you want it saved?"], "query": "After it is saved, text it to my supervisor with a message saying, 'Here is the PDF document.'", "rewrited_query": "After the PDF document is saved, text the PDF document to my supervisor with a message saying, 'Here is the PDF document.'", "answer": {"plan": "send_message", "arguments": {"to": "my supervisor", "message": "Here is the PDF document.", "attachments": ["PDF document"]}}, "unique_idx": "ACTION_GET_CONTENT-190-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Grab one video clip so I can forward it immediately. -> Understood, opening the video selector to choose one clip.", "turn 2: How do I create a new video file then with mime_type as video/mp4 and initial_name as NewClip.mp4? -> I can create a new video file with mime_type as video/mp4 and initial_name as NewClip.mp4. Do you have a specific location in mind to save it to?"], "query": "Can you text it to +15551234567 once it is created?", "rewrited_query": "Can you text the video file to +15551234567 once the video file is created?", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "video file", "attachments": ["video file"]}}, "unique_idx": "ACTION_GET_CONTENT-191-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you let me choose a file regardless of its type from my device? -> Yes, opening the file selector to show all file types available.", "turn 2: Show me how to create a CSV document with mime_type as text/csv and initial_name as Data.csv. -> I can create a CSV document for you. I'll set the mime_type to text/csv and the initial name to Data.csv. Please specify where you would like to save the file."], "query": "Once it's ready, text it to my teammate.", "rewrited_query": "Once the CSV document is ready, text the CSV document to my teammate.", "answer": {"plan": "send_message", "arguments": {"to": "my teammate", "message": "CSV document", "attachments": ["CSV document"]}}, "unique_idx": "ACTION_GET_CONTENT-192-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need multiple audio files for a new playlist. Please open the media selector. -> No problem, opening the audio selector to pick multiple files.", "turn 2: If I need to generate another audio file, how would I do that with mime_type as audio/mpeg and initial_name as NewTrack.mp3? -> To generate the audio file, I will set the mime_type to audio/mpeg and the file name to NewTrack.mp3. Where do you want me to save the new track?"], "query": "When it is ready, text it to my friend John.", "rewrited_query": "When the audio file is ready, text the audio file to my friend John.", "answer": {"plan": "send_message", "arguments": {"to": "my friend John", "message": "audio file", "attachments": ["audio file"]}}, "unique_idx": "ACTION_GET_CONTENT-193-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Show me the file picker for any type; I want to select random files. -> No problem, opening the file picker now to select any type of file.", "turn 2: If I can't find it, can you just make a text file with mime_type='text/plain' and initial_name='New Document.txt'? -> Okay, creating a new text file named 'New Document.txt' for you."], "query": "Can you go ahead and open that for me?", "rewrited_query": "Can you go ahead and open content://documents/New Document.txt for me?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/New Document.txt"}}, "unique_idx": "ACTION_GET_CONTENT-194-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to import one high-resolution image for editing purposes. -> Sure, I'm opening the image selector for you now.", "turn 2: If there isn't one available, make a new JPEG image with mime_type='image/jpeg' and initial_name='New Image.jpeg' for me. -> No problem, I'm generating a new JPEG image called 'New Image.jpeg'."], "query": "Now, open it.", "rewrited_query": "Now, open content://images/New Image.jpeg.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://images/New Image.jpeg", "mime_type": "image/jpeg"}}, "unique_idx": "ACTION_GET_CONTENT-195-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Let me pick multiple text documents to review later. -> Okay, here's the file picker to select multiple text documents.", "turn 2: Create a markdown document with mime_type='text/markdown' and initial_name='New Document.md' if there isn't one I can choose. -> Creating a new markdown file, named 'New Document.md', right away."], "query": "Then could you open that?", "rewrited_query": "Then could you open content://documents/New Document.md?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/New Document.md"}}, "unique_idx": "ACTION_GET_CONTENT-196-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I have to attach a single audio file; please open the selection tool for me. -> Alright, opening the audio file selector.", "turn 2: Can you create a WAV audio file with mime_type='audio/wav' and initial_name='New Recording.wav' if I don't have one to choose from? -> Understood, creating a new WAV audio file titled 'New Recording.wav'."], "query": "Can you open that new file now?", "rewrited_query": "Can you open content://audio/New Recording.wav now?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://audio/New Recording.wav", "mime_type": "audio/wav"}}, "unique_idx": "ACTION_GET_CONTENT-197-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Can you open a selector for many videos? I need to choose more than one clip. -> Affirmative, opening the video selector to choose multiple clips.", "turn 2: If I don't have anything, create a new MP4 video file with mime_type='video/mp4' and initial_name='New Video.mp4' for me. -> No problem, generating a new MP4 video file called 'New Video.mp4'."], "query": "Go ahead and open it.", "rewrited_query": "Go ahead and open content://video/New Video.mp4.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://video/New Video.mp4", "mime_type": "video/mp4"}}, "unique_idx": "ACTION_GET_CONTENT-198-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I need to quickly access any available file for reference. -> OK, opening the file selector for any available file.", "turn 2: If I can't find what I need, generate a new plain text file with mime_type='text/plain' and initial_name='New Document.txt'. -> OK, creating a new plain text file named 'New Document.txt'."], "query": "Great, please open that for me.", "rewrited_query": "Great, please open content://documents/New Document.txt for me.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/New Document.txt"}}, "unique_idx": "ACTION_GET_CONTENT-199-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Select one PDF document for me to send out. -> Right away. Here's the PDF document selector.", "turn 2: If there are no PDFs, create one PDF document with mime_type='application/pdf' and initial_name='New Document.pdf'. -> Alright, creating a new PDF document titled 'New Document.pdf'."], "query": "Please, open that new document.", "rewrited_query": "Please, open content://documents/New Document.pdf.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/New Document.pdf", "mime_type": "application/pdf"}}, "unique_idx": "ACTION_GET_CONTENT-200-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Grant me access to a list of image files because I'd like to choose more than one. -> No problem, opening the image selector so you can choose multiple files.", "turn 2: If I don't have one, can you create a PNG image with mime_type='image/png' and initial_name='New Image.png'? -> Creating a new PNG image for you, named 'New Image.png'."], "query": "Could you open that image now?", "rewrited_query": "Could you open content://images/New Image.png now?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://images/New Image.png", "mime_type": "image/png"}}, "unique_idx": "ACTION_GET_CONTENT-201-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Fetch multiple types of files so I can get an overview of what's on my device. -> Here's a selector for all file types, and you can select multiple ones.", "turn 2: If nothing is suitable, start a blank document with mime_type='text/plain' and initial_name='New Document.txt'. -> Got it, starting a blank text document titled 'New Document.txt'."], "query": "Open that blank document, please.", "rewrited_query": "Open content://documents/New Document.txt, please.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/New Document.txt"}}, "unique_idx": "ACTION_GET_CONTENT-202-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I require an audio recording; can you show me the file browser for audio files? -> Opening the audio file browser now.", "turn 2: If I have no audio files, make an M4A one with mime_type='audio/m4a' and initial_name='New Recording.m4a' for me. -> Sure, generating a new M4A audio file named 'New Recording.m4a'."], "query": "Now, could you please open it?", "rewrited_query": "Now, could you please open content://audio/New Recording.m4a?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://audio/New Recording.m4a", "mime_type": "audio/m4a"}}, "unique_idx": "ACTION_GET_CONTENT-203-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to import one high-resolution image for editing purposes. -> Sure, I'm opening the image selector for you now.", "turn 2: If there isn't one available, make a new JPEG image with mime_type='image/jpeg' and initial_name='New Image.jpeg' for me. -> No problem, I'm generating a new JPEG image called 'New Image.jpeg'."], "query": "Can you email it to jane.doe@example.com with the subject 'New Image'?", "rewrited_query": "Can you email the new JPEG image called 'New Image.jpeg' to jane.doe@example.com with the subject 'New Image'?", "answer": {"plan": "send_email", "arguments": {"to": "jane.doe@example.com", "subject": "New Image", "attachments": ["New Image.jpeg"]}}, "unique_idx": "ACTION_GET_CONTENT-195-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you open a selector for many videos? I need to choose more than one clip. -> Affirmative, opening the video selector to choose multiple clips.", "turn 2: If I don't have anything, create a new MP4 video file with mime_type='video/mp4' and initial_name='New Video.mp4' for me. -> No problem, generating a new MP4 video file called 'New Video.mp4'."], "query": "Email that to marketing@example.com with the subject line, 'Promo Video'.", "rewrited_query": "Email the new MP4 video file called 'New Video.mp4' to marketing@example.com with the subject line, 'Promo Video'.", "answer": {"plan": "send_email", "arguments": {"to": "marketing@example.com", "subject": "Promo Video", "attachments": ["New Video.mp4"]}}, "unique_idx": "ACTION_GET_CONTENT-198-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Select one PDF document for me to send out. -> Right away. Here's the PDF document selector.", "turn 2: If there are no PDFs, create one PDF document with mime_type='application/pdf' and initial_name='New Document.pdf'. -> Alright, creating a new PDF document titled 'New Document.pdf'."], "query": "Send that to client@example.com with the subject 'Contract'.", "rewrited_query": "Send the new PDF document titled 'New Document.pdf' to client@example.com with the subject 'Contract'.", "answer": {"plan": "send_email", "arguments": {"to": "client@example.com", "subject": "Contract", "attachments": ["New Document.pdf"]}}, "unique_idx": "ACTION_GET_CONTENT-200-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Grant me access to a list of image files because I'd like to choose more than one. -> No problem, opening the image selector so you can choose multiple files.", "turn 2: If I don't have one, can you create a PNG image with mime_type='image/png' and initial_name='New Image.png'? -> Creating a new PNG image for you, named 'New Image.png'."], "query": "Email it with the body 'Here is the image' to sara@example.com.", "rewrited_query": "Email the new PNG image for you, named 'New Image.png' with the body 'Here is the image' to sara@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "sara@example.com", "body": "Here is the image", "attachments": ["New Image.png"]}}, "unique_idx": "ACTION_GET_CONTENT-201-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Fetch multiple types of files so I can get an overview of what's on my device. -> Here's a selector for all file types, and you can select multiple ones.", "turn 2: If nothing is suitable, start a blank document with mime_type='text/plain' and initial_name='New Document.txt'. -> Got it, starting a blank text document titled 'New Document.txt'."], "query": "Email it to support@example.com and include 'Urgent' in the subject.", "rewrited_query": "Email the blank text document titled 'New Document.txt' to support@example.com and include 'Urgent' in the subject.", "answer": {"plan": "send_email", "arguments": {"to": "support@example.com", "subject": "Urgent", "attachments": ["New Document.txt"]}}, "unique_idx": "ACTION_GET_CONTENT-202-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Bring up the file selection tool for text files so I can browse my manuscripts. -> Okay, launching the file picker to select a text file.", "turn 2: If I can't find the text file, could you create a new document named NewText.txt? -> Sure, I can create a new text document named NewText.txt for you if you can't find your file. I'll create a URI for it."], "query": "Now, open that for me.", "rewrited_query": "Now, open content://documents/NewText.txt for me.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewText.txt"}}, "unique_idx": "ACTION_GET_CONTENT-205-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I need to browse for a picture to attach to my report; just one image is enough. -> No problem! I'm opening the image selector now.", "turn 2: If there are no images, can I make a new document named NewImage.jpg? -> No problem. I'll prepare a new image document named NewImage.jpg if needed. It will be available as a new URI."], "query": "Can you open that new URI now?", "rewrited_query": "Can you open content://documents/NewImage.jpg now?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewImage.jpg"}}, "unique_idx": "ACTION_GET_CONTENT-206-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Help me choose one manuscript file from my storage; I'm updating an article. -> OK, opening the file selector for a manuscript file.", "turn 2: If I don't have a manuscript file, make a blank document named NewManuscript.txt. -> Okay, I'll make a blank text file labeled NewManuscript.txt available as a URI if you need it."], "query": "Please open that URI.", "rewrited_query": "Please open content://documents/NewManuscript.txt.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewManuscript.txt"}}, "unique_idx": "ACTION_GET_CONTENT-208-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to attach a PDF file; please open the file selector for just one document. -> Sure, opening the PDF selector for a single document.", "turn 2: If the PDF file is not there, I'll create a new document named NewPDF.pdf. -> Got it, I can create a new PDF named NewPDF.pdf for you. You'll receive a URI for the new file."], "query": "Open the URI for that document.", "rewrited_query": "Open the URI for NewPDF.pdf document.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "NewPDF.pdf"}}, "unique_idx": "ACTION_GET_CONTENT-209-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: May I select numerous video clips to put together a montage? -> Got it. Opening the video selector, you can choose multiple clips.", "turn 2: Instead of selecting, let's generate a new document named NewVideo.mp4. -> Alright, I will create a new video document with the name NewVideo.mp4, and provide the URI for it."], "query": "Now, could you open it?", "rewrited_query": "Now, could you open content://documents/NewVideo.mp4?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewVideo.mp4"}}, "unique_idx": "ACTION_GET_CONTENT-210-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please allow me to pick a single audio snippet for a quick demo. -> Affirmative. You can now choose a single audio snippet.", "turn 2: What about creating a new document named NewAudio.mp3 instead? -> Understood, creating a new audio document named NewAudio.mp3. A URI will be generated for you."], "query": "Could you open it now?", "rewrited_query": "Could you open content://documents/NewAudio.mp3 now?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewAudio.mp3"}}, "unique_idx": "ACTION_GET_CONTENT-211-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Let me grab an image file so I can include it in my report. -> Okay, opening the image selector now to attach to your report.", "turn 2: If I can't find an image, create a new document named NewImage.jpg. -> Okay, I can create a new image named NewImage.jpg. The URI will be available shortly."], "query": "Go ahead and open it, please.", "rewrited_query": "Go ahead and open content://documents/NewImage.jpg, please.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewImage.jpg"}}, "unique_idx": "ACTION_GET_CONTENT-212-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Select and share various PDF documents for our meeting. -> Understood. Opening the file picker for multiple PDF documents.", "turn 2: Make a new document named NewPDF.pdf if the one I need isn't there. -> Okay, if you cannot find the required PDF, I will create a new document named NewPDF.pdf, and provide its URI."], "query": "Please open the URI you just made.", "rewrited_query": "Please open the URI you just made content://documents/NewPDF.pdf.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewPDF.pdf"}}, "unique_idx": "ACTION_GET_CONTENT-213-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I would like to open the file selector to pick one file of any type quickly. -> Okay, opening the file selector for you to pick any type of file.", "turn 2: If I can't find what I need, can I create a text file with mime type 'text/plain' and initial name 'NewDocument.txt'? -> Yes, if you don't find what you need, I will create a new text file called NewDocument.txt and make its URI available."], "query": "Can you open that URI?", "rewrited_query": "Can you open content://documents/NewDocument.txt?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/NewDocument.txt"}}, "unique_idx": "ACTION_GET_CONTENT-214-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Open a file browser for me so I can select a couple of images for my slideshow. -> Sure, launching the file browser to select multiple images for your slideshow.", "turn 2: What if I want to create a new image file with mime type 'image/jpeg' and initial name 'Photo.jpg' instead? -> Understood, I'll go ahead and prepare a new image file with the name Photo.jpg and provide you with its URI."], "query": "Can you go ahead and open that file?", "rewrited_query": "Can you go ahead and open content://documents/Photo.jpg file?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://documents/Photo.jpg"}}, "unique_idx": "ACTION_GET_CONTENT-215-ACTION_CREATE_DOCUMENT-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Bring up the file selection tool for text files so I can browse my manuscripts. -> Okay, launching the file picker to select a text file.", "turn 2: If I can't find the text file, could you create a new document named NewText.txt? -> Sure, I can create a new text document named NewText.txt for you if you can't find your file. I'll create a URI for it."], "query": "Can you send that to john.doe@example.com?", "rewrited_query": "Can you send the URI for NewText.txt to john.doe@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "john.doe@example.com", "attachments": ["NewText.txt"]}}, "unique_idx": "ACTION_GET_CONTENT-205-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I want to attach a PDF file; please open the file selector for just one document. -> Sure, opening the PDF selector for a single document.", "turn 2: If the PDF file is not there, I'll create a new document named NewPDF.pdf. -> Got it, I can create a new PDF named NewPDF.pdf for you. You'll receive a URI for the new file."], "query": "Can you email that to my client at client@example.com?", "rewrited_query": "Can you email the URI for NewPDF.pdf to my client at client@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "client@example.com", "attachments": ["NewPDF.pdf"]}}, "unique_idx": "ACTION_GET_CONTENT-209-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I would like to open the file selector to pick one file of any type quickly. -> Okay, opening the file selector for you to pick any type of file.", "turn 2: If I can't find what I need, can I create a text file with mime type 'text/plain' and initial name 'NewDocument.txt'? -> Yes, if you don't find what you need, I will create a new text file called NewDocument.txt and make its URI available."], "query": "Can you send that to support@example.com?", "rewrited_query": "Can you send the URI for NewDocument.txt to support@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "support@example.com", "attachments": ["NewDocument.txt"]}}, "unique_idx": "ACTION_GET_CONTENT-214-ACTION_CREATE_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need to pick one video from my gallery for a quick preview. -> No problem. Please select the video you'd like to preview from the file selector.", "turn 2: Can I make a new document with mime type 'text/plain' and initial name 'New Document.txt' then? -> Sure, please select a location to create the new text document 'New Document.txt'."], "query": "Once it's created, text John to let him know about it.", "rewrited_query": "Once the new text document 'New Document.txt' is created, text John to let him know about it.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "New Document.txt is created."}}, "unique_idx": "ACTION_GET_CONTENT-216-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you enable me to choose multiple text files? I'm updating my handwritten notes. -> Alright, you can now select multiple text files for updating your notes.", "turn 2: How do I create a new document with mime type 'text/plain' and initial name 'NewDocument.txt'? -> Okay, I'm ready. Please choose where you'd like to create the new text document named 'NewDocument.txt'."], "query": "After that, send a text to Sarah at 555-123-4567 with a message saying 'I've created a new document'.", "rewrited_query": "After that, send a text to Sarah at 555-123-4567 with a message saying 'I've created a new document'.", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "I've created a new document"}}, "unique_idx": "ACTION_GET_CONTENT-217-ACTION_CREATE_DOCUMENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to view the details of the contact whose URI is content://contacts/contacts/9876. -> I am now displaying the contact details from content://contacts/contacts/9876.", "turn 2: Edit the contact at content://contacts/contacts/9876 and set the company to Google. -> Understood. I'm now editing the contact at content://contacts/contacts/9876 to set the company to Google."], "query": "Send a message saying 'Company updated' to that contact.", "rewrited_query": "Send a message saying 'Company updated' to the contact at content://contacts/contacts/9876.", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/contacts/9876", "message": "Company updated"}}, "unique_idx": "ACTION_VIEW_CONTACT-763-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Display the contact information available at content://contacts/people/1010. -> Displaying contact information from content://contacts/people/1010.", "turn 2: Could you edit the contact information at content://contacts/people/1010 to include a phone number 123-456-7890? -> Yes, I am editing content://contacts/people/1010 to add the phone number 123-456-7890."], "query": "Send a message 'Number added' to that number.", "rewrited_query": "Send a message 'Number added' to the 123-456-7890 number.", "answer": {"plan": "send_message", "arguments": {"to": "123-456-7890", "message": "Number added"}}, "unique_idx": "ACTION_VIEW_CONTACT-764-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to access the details of the contact at content://contacts/people/1314. -> Accessing contact details at content://contacts/people/1314.", "turn 2: Now, edit the contact details at content://contacts/people/1314; the address should be 456 Elm St. -> Okay, I will update the address for the contact at content://contacts/people/1314 to 456 Elm St."], "query": "Send a message 'Address updated!' to the contact.", "rewrited_query": "Send a message 'Address updated!' to the contact at content://contacts/people/1314.", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/people/1314", "message": "Address updated!"}}, "unique_idx": "ACTION_VIEW_CONTACT-765-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Show me the complete contact info with URI content://contacts/people/1920. -> Showing complete contact information for content://contacts/people/1920.", "turn 2: Edit the contact at content://contacts/people/1920, and add a phone number of 555-123-4567. -> Got it. I'm adding the phone number 555-123-4567 to the contact at content://contacts/people/1920."], "query": "Text that new number, 'New number saved!'", "rewrited_query": "Text the 555-123-4567 number, 'New number saved!'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "New number saved!"}}, "unique_idx": "ACTION_VIEW_CONTACT-768-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to inspect the contact's details from content://contacts/contacts/2122. Can you do that? -> Yes, inspecting contact details from content://contacts/contacts/2122.", "turn 2: Now edit the contact details at content://contacts/contacts/2122 please, and set company to 'XYZ Corp'. -> Okay, setting the company for the contact at content://contacts/contacts/2122 to XYZ Corp."], "query": "Send a message to that contact saying 'Your company is now XYZ Corp'.", "rewrited_query": "Send a message to the contact at content://contacts/contacts/2122 saying 'Your company is now XYZ Corp'.", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/contacts/2122", "message": "Your company is now XYZ Corp"}}, "unique_idx": "ACTION_VIEW_CONTACT-769-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Display detailed information for the contact whose URI is content://contacts/people/2324. -> Displaying detailed contact information from content://contacts/people/2324.", "turn 2: Edit the detailed information for the contact at content://contacts/people/2324. Could you set the address as '789 Oak Ave'? -> I will update the contact at content://contacts/people/2324 to set the address to 789 Oak Ave."], "query": "Send a message to the contact saying 'Address has been updated to 789 Oak Ave.'", "rewrited_query": "Send a message to the contact at content://contacts/people/2324 saying 'Address has been updated to 789 Oak Ave.'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/people/2324", "message": "Address has been updated to 789 Oak Ave."}}, "unique_idx": "ACTION_VIEW_CONTACT-770-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Display the contact information available at content://contacts/people/1010. -> Displaying contact information from content://contacts/people/1010.", "turn 2: Could you edit the contact information at content://contacts/people/1010 to include a phone number 123-456-7890? -> Yes, I am editing content://contacts/people/1010 to add the phone number 123-456-7890."], "query": "Where is that phone number located?", "rewrited_query": "Where is the phone number 123-456-7890 located?", "answer": {"plan": "search_location", "arguments": {"query": "123-456-7890"}}, "unique_idx": "ACTION_VIEW_CONTACT-764-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I would like to access the details of the contact at content://contacts/people/1314. -> Accessing contact details at content://contacts/people/1314.", "turn 2: Now, edit the contact details at content://contacts/people/1314; the address should be 456 Elm St. -> Okay, I will update the address for the contact at content://contacts/people/1314 to 456 Elm St."], "query": "Where is that located?", "rewrited_query": "Where is 456 Elm St located?", "answer": {"plan": "search_location", "arguments": {"query": "456 Elm St"}}, "unique_idx": "ACTION_VIEW_CONTACT-765-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Retrieve the full details of the contact found at content://contacts/people/1718. -> Retrieving contact details for content://contacts/people/1718.", "turn 2: Edit the contact at content://contacts/people/1718, and set the email to 'sample@email.com'. -> Sure, setting the email for the contact at content://contacts/people/1718 to sample@email.com."], "query": "Can you find that on a map?", "rewrited_query": "Can you find sample@email.com on a map?", "answer": {"plan": "search_location", "arguments": {"query": "sample@email.com"}}, "unique_idx": "ACTION_VIEW_CONTACT-767-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show me the complete contact info with URI content://contacts/people/1920. -> Showing complete contact information for content://contacts/people/1920.", "turn 2: Edit the contact at content://contacts/people/1920, and add a phone number of 555-123-4567. -> Got it. I'm adding the phone number 555-123-4567 to the contact at content://contacts/people/1920."], "query": "Show me the location of that phone number.", "rewrited_query": "Show me the location of the phone number 555-123-4567.", "answer": {"plan": "search_location", "arguments": {"query": "555-123-4567"}}, "unique_idx": "ACTION_VIEW_CONTACT-768-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I want to inspect the contact's details from content://contacts/contacts/2122. Can you do that? -> Yes, inspecting contact details from content://contacts/contacts/2122.", "turn 2: Now edit the contact details at content://contacts/contacts/2122 please, and set company to 'XYZ Corp'. -> Okay, setting the company for the contact at content://contacts/contacts/2122 to XYZ Corp."], "query": "Show me where XYZ Corp is located.", "rewrited_query": "Show me where XYZ Corp is located.", "answer": {"plan": "search_location", "arguments": {"query": "XYZ Corp"}}, "unique_idx": "ACTION_VIEW_CONTACT-769-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Display detailed information for the contact whose URI is content://contacts/people/2324. -> Displaying detailed contact information from content://contacts/people/2324.", "turn 2: Edit the detailed information for the contact at content://contacts/people/2324. Could you set the address as '789 Oak Ave'? -> I will update the contact at content://contacts/people/2324 to set the address to 789 Oak Ave."], "query": "Can you show me where that is on a map?", "rewrited_query": "Can you show me where 789 Oak Ave is on a map?", "answer": {"plan": "search_location", "arguments": {"query": "789 Oak Ave"}}, "unique_idx": "ACTION_VIEW_CONTACT-770-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Display detailed information for the contact whose URI is content://contacts/people/2324. -> Displaying detailed contact information from content://contacts/people/2324.", "turn 2: Edit the detailed information for the contact at content://contacts/people/2324. Could you set the address as '789 Oak Ave'? -> I will update the contact at content://contacts/people/2324 to set the address to 789 Oak Ave."], "query": "Let's go there.", "rewrited_query": "Let's go to 789 Oak Ave.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "789 Oak Ave."}}, "unique_idx": "ACTION_VIEW_CONTACT-770-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please retrieve the contact info using content://contacts/contacts/2526. -> Okay, displaying contact details from content://contacts/contacts/2526.", "turn 2: Can you edit content://contacts/contacts/2526 to add an email? -> I'm ready to edit the contact at content://contacts/contacts/2526 and add an email address. What is the email address you'd like to add?"], "query": "Can you navigate to that contact?", "rewrited_query": "Can you navigate to the contact at content://contacts/contacts/2526?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2526"}}, "unique_idx": "ACTION_VIEW_CONTACT-771-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please open the contact record at content://contacts/people/1001. -> Opening contact record at content://contacts/people/1001.", "turn 2: Can I edit content://contacts/people/1001's phone number? -> Yes, I'm opening the edit form for content://contacts/people/1001 with the phone number field ready for editing."], "query": "Email him about the new phone number.", "rewrited_query": "Email the contact at content://contacts/people/1001 about the new phone number.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1001", "subject": "new phone number"}}, "unique_idx": "ACTION_VIEW_CONTACT-775-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: I need to check the information for the contact with URI content://contacts/people/1002. -> Accessing information for contact at content://contacts/people/1002.", "turn 2: Let's edit content://contacts/people/1002 to include their address. -> Okay, opening the editor for content://contacts/people/1002 with the address field ready for input."], "query": "Email that contact their updated address information.", "rewrited_query": "Email the contact at content://contacts/people/1002 their updated address information.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1002", "body": "updated address information"}}, "unique_idx": "ACTION_VIEW_CONTACT-776-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Get me the profile details from content://contacts/people/1004. -> Displaying profile details from content://contacts/people/1004.", "turn 2: Edit the contact at content://contacts/people/1004, please. -> Certainly, I'm now launching the editor for contact at content://contacts/people/1004."], "query": "Send her an email to confirm the changes.", "rewrited_query": "Send the contact at content://contacts/people/1004 an email to confirm the changes.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1004", "body": "confirm the changes"}}, "unique_idx": "ACTION_VIEW_CONTACT-777-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: I want to see the contact information from content://contacts/contacts/2001. -> Showing you the contact information from content://contacts/contacts/2001.", "turn 2: Can you edit content://contacts/contacts/2001 and add a company? -> Affirmative, I'm opening the edit view for contact at content://contacts/contacts/2001, with the company field ready for you."], "query": "Email that contact to let them know about the new company.", "rewrited_query": "Email the contact at content://contacts/contacts/2001 to let them know about the new company.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2001", "body": "let them know about the new company"}}, "unique_idx": "ACTION_VIEW_CONTACT-778-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Open contact card at content://contacts/contacts/2002. -> Contact card at content://contacts/contacts/2002 is now open.", "turn 2: I'd like to edit content://contacts/contacts/2002. -> Okay, I am now opening the contact editor for content://contacts/contacts/2002."], "query": "Send that person an email with the details of the event.", "rewrited_query": "Send the person at content://contacts/contacts/2002 an email with the details of the event.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2002", "body": "details of the event"}}, "unique_idx": "ACTION_VIEW_CONTACT-779-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you load the contact details from content://contacts/people/1005? -> Loading contact details from content://contacts/people/1005.", "turn 2: Edit content://contacts/people/1005 to change the name. -> No problem, I'm launching the contact editor for content://contacts/people/1005, with the name field ready for changes."], "query": "Email them to confirm the name change.", "rewrited_query": "Email the contact at content://contacts/people/1005 to confirm the name change.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1005", "body": "confirm the name change"}}, "unique_idx": "ACTION_VIEW_CONTACT-780-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Show me the complete profile for the contact at content://contacts/contacts/2003. -> Alright, displaying the contact details for content://contacts/contacts/2003.", "turn 2: Can you edit content://contacts/contacts/2003 to add an email address? -> Yes, I'm opening the edit form for contact at content://contacts/contacts/2003 with the email address field ready for you."], "query": "Now email them a welcome message.", "rewrited_query": "Now email the contact at content://contacts/contacts/2003 a welcome message.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2003", "body": "welcome message"}}, "unique_idx": "ACTION_VIEW_CONTACT-781-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Load and display the details for the contact at content://contacts/people/2728. -> Now showing the contact info for content://contacts/people/2728.", "turn 2: Edit the contact at content://contacts/people/2728. -> Okay, I'm opening the edit form for contact at content://contacts/people/2728."], "query": "I'm adding an address. Can you show me where it is?", "rewrited_query": "I'm adding an address. Can you show me where the address is?", "answer": {"plan": "search_location", "arguments": {"query": "address"}}, "unique_idx": "ACTION_VIEW_CONTACT-772-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Bring up the full contact information for content://contacts/contacts/2930. -> Here are the full contact details from content://contacts/contacts/2930.", "turn 2: Could you edit content://contacts/contacts/2930 and change the company name? -> Sure, I'm opening the edit form for contact at content://contacts/contacts/2930 with the company field ready for you to update."], "query": "I've added their work address. Can you show me where it is?", "rewrited_query": "I've added their work address. Can you show me where the work address is?", "answer": {"plan": "search_location", "arguments": {"query": "work address"}}, "unique_idx": "ACTION_VIEW_CONTACT-773-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Find and show the details of the contact at content://contacts/people/3132. -> Showing the details for contact at content://contacts/people/3132.", "turn 2: I want to edit content://contacts/people/3132. -> Alright, launching the editor for the contact at content://contacts/people/3132."], "query": "I'm adding a new address. Could you find it on a map for me?", "rewrited_query": "I'm adding a new address. Could you find the new address on a map for me?", "answer": {"plan": "search_location", "arguments": {"query": "new address"}}, "unique_idx": "ACTION_VIEW_CONTACT-774-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please open the contact record at content://contacts/people/1001. -> Opening contact record at content://contacts/people/1001.", "turn 2: Can I edit content://contacts/people/1001's phone number? -> Yes, I'm opening the edit form for content://contacts/people/1001 with the phone number field ready for editing."], "query": "I'm also adding an address, can you search for it?", "rewrited_query": "I'm also adding an address, can you search for the address?", "answer": {"plan": "search_location", "arguments": {"query": "address"}}, "unique_idx": "ACTION_VIEW_CONTACT-775-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to check the information for the contact with URI content://contacts/people/1002. -> Accessing information for contact at content://contacts/people/1002.", "turn 2: Let's edit content://contacts/people/1002 to include their address. -> Okay, opening the editor for content://contacts/people/1002 with the address field ready for input."], "query": "Okay, I've input the address. Can you show me where it is located?", "rewrited_query": "Okay, I've input the address. Can you show me where the address is located?", "answer": {"plan": "search_location", "arguments": {"query": "address"}}, "unique_idx": "ACTION_VIEW_CONTACT-776-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Get me the profile details from content://contacts/people/1004. -> Displaying profile details from content://contacts/people/1004.", "turn 2: Edit the contact at content://contacts/people/1004, please. -> Certainly, I'm now launching the editor for contact at content://contacts/people/1004."], "query": "I just added an address to the contact. Could you locate it for me?", "rewrited_query": "I just added an address to the contact. Could you locate the address for me?", "answer": {"plan": "search_location", "arguments": {"query": "address"}}, "unique_idx": "ACTION_VIEW_CONTACT-777-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I want to see the contact information from content://contacts/contacts/2001. -> Showing you the contact information from content://contacts/contacts/2001.", "turn 2: Can you edit content://contacts/contacts/2001 and add a company? -> Affirmative, I'm opening the edit view for contact at content://contacts/contacts/2001, with the company field ready for you."], "query": "I've added an address. Can you show me that on the map?", "rewrited_query": "I've added an address. Can you show me the address on the map?", "answer": {"plan": "search_location", "arguments": {"query": "address"}}, "unique_idx": "ACTION_VIEW_CONTACT-778-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Open contact card at content://contacts/contacts/2002. -> Contact card at content://contacts/contacts/2002 is now open.", "turn 2: I'd like to edit content://contacts/contacts/2002. -> Okay, I am now opening the contact editor for content://contacts/contacts/2002."], "query": "I'm adding a new address for them, could you show me where it is?", "rewrited_query": "I'm adding a new address for them, could you show me where the new address is?", "answer": {"plan": "search_location", "arguments": {"query": "new address"}}, "unique_idx": "ACTION_VIEW_CONTACT-779-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you load the contact details from content://contacts/people/1005? -> Loading contact details from content://contacts/people/1005.", "turn 2: Edit content://contacts/people/1005 to change the name. -> No problem, I'm launching the contact editor for content://contacts/people/1005, with the name field ready for changes."], "query": "I've added a new address. Can you pull that up on the map?", "rewrited_query": "I've added a new address. Can you pull the new address up on the map?", "answer": {"plan": "search_location", "arguments": {"query": "new address"}}, "unique_idx": "ACTION_VIEW_CONTACT-780-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show me the complete profile for the contact at content://contacts/contacts/2003. -> Alright, displaying the contact details for content://contacts/contacts/2003.", "turn 2: Can you edit content://contacts/contacts/2003 to add an email address? -> Yes, I'm opening the edit form for content://contacts/contacts/2003 with the email address field ready for you."], "query": "I'm adding their address, can you show me that address on the map?", "rewrited_query": "I'm adding their address, can you show me the address on the map?", "answer": {"plan": "search_location", "arguments": {"query": "address"}}, "unique_idx": "ACTION_VIEW_CONTACT-781-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Load and display the details for the contact at content://contacts/people/2728. -> Now showing the contact info for content://contacts/people/2728.", "turn 2: Edit the contact at content://contacts/people/2728. -> Okay, I'm opening the edit form for contact at content://contacts/people/2728."], "query": "Navigate to it once I'm done.", "rewrited_query": "Navigate to the contact at content://contacts/people/2728 once I'm done.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/2728"}}, "unique_idx": "ACTION_VIEW_CONTACT-772-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Bring up the full contact information for content://contacts/contacts/2930. -> Here are the full contact details from content://contacts/contacts/2930.", "turn 2: Could you edit content://contacts/contacts/2930 and change the company name? -> Sure, I'm opening the edit form for contact at content://contacts/contacts/2930 with the company field ready for you to update."], "query": "Once the company name is updated, navigate there.", "rewrited_query": "Once the company name is updated, navigate to the contact at content://contacts/contacts/2930.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2930"}}, "unique_idx": "ACTION_VIEW_CONTACT-773-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Find and show the details of the contact at content://contacts/people/3132. -> Showing the details for contact at content://contacts/people/3132.", "turn 2: I want to edit content://contacts/people/3132. -> Alright, launching the editor for the contact at content://contacts/people/3132."], "query": "After editing, navigate to it.", "rewrited_query": "After editing, navigate to the contact at content://contacts/people/3132.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/3132"}}, "unique_idx": "ACTION_VIEW_CONTACT-774-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please open the contact record at content://contacts/people/1001. -> Opening contact record at content://contacts/people/1001.", "turn 2: Can I edit content://contacts/people/1001's phone number? -> Yes, I'm opening the edit form for content://contacts/people/1001 with the phone number field ready for editing."], "query": "Navigate to that contact after I finish editing.", "rewrited_query": "Navigate to the contact at content://contacts/people/1001 after I finish editing.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1001"}}, "unique_idx": "ACTION_VIEW_CONTACT-775-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to check the information for the contact with URI content://contacts/people/1002. -> Accessing information for contact at content://contacts/people/1002.", "turn 2: Let's edit content://contacts/people/1002 to include their address. -> Okay, opening the editor for content://contacts/people/1002 with the address field ready for input."], "query": "Once the address is saved, navigate to it.", "rewrited_query": "Once the address is saved, navigate to the contact at content://contacts/people/1002.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1002"}}, "unique_idx": "ACTION_VIEW_CONTACT-776-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Get me the profile details from content://contacts/people/1004. -> Displaying profile details from content://contacts/people/1004.", "turn 2: Edit the contact at content://contacts/people/1004, please. -> Certainly, I'm now launching the editor for contact at content://contacts/people/1004."], "query": "Navigate there after I save the changes.", "rewrited_query": "Navigate to the contact at content://contacts/people/1004 after I save the changes.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1004"}}, "unique_idx": "ACTION_VIEW_CONTACT-777-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I want to see the contact information from content://contacts/contacts/2001. -> Showing you the contact information from content://contacts/contacts/2001.", "turn 2: Can you edit content://contacts/contacts/2001 and add a company? -> Affirmative, I'm opening the edit view for contact at content://contacts/contacts/2001, with the company field ready for you."], "query": "After adding the company, navigate to that address.", "rewrited_query": "After adding the company, navigate to the contact at content://contacts/contacts/2001.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2001"}}, "unique_idx": "ACTION_VIEW_CONTACT-778-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Open contact card at content://contacts/contacts/2002. -> Contact card at content://contacts/contacts/2002 is now open.", "turn 2: I'd like to edit content://contacts/contacts/2002. -> Okay, I am now opening the contact editor for content://contacts/contacts/2002."], "query": "Set a reminder to navigate there after 30 minutes.", "rewrited_query": "Set a reminder to navigate to the contact at content://contacts/contacts/2002 after 30 minutes.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2002"}}, "unique_idx": "ACTION_VIEW_CONTACT-779-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Can you load the contact details from content://contacts/people/1005? -> Loading contact details from content://contacts/people/1005.", "turn 2: Edit content://contacts/people/1005 to change the name. -> No problem, I'm launching the contact editor for content://contacts/people/1005, with the name field ready for changes."], "query": "After I change the name, navigate to that location.", "rewrited_query": "After I change the name, navigate to the contact at content://contacts/people/1005.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1005"}}, "unique_idx": "ACTION_VIEW_CONTACT-780-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Show me the complete profile for the contact at content://contacts/contacts/2003. -> Alright, displaying the contact details for content://contacts/contacts/2003.", "turn 2: Can you edit content://contacts/contacts/2003 to add an email address? -> Yes, I'm opening the edit form for contact at content://contacts/contacts/2003 with the email address field ready for you."], "query": "Navigate to it when the email is added.", "rewrited_query": "Navigate to the contact at content://contacts/contacts/2003 when the email is added.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2003"}}, "unique_idx": "ACTION_VIEW_CONTACT-781-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: View the complete contact details for content://contacts/people/1006. -> Now showing you the full contact details: content://contacts/people/1006.", "turn 2: Change phone number of content://contacts/people/1006. -> Okay, I'm ready for the new phone number for content://contacts/people/1006."], "query": "It's 010-4444-5555. Could you call it?", "rewrited_query": "It's 010-4444-5555. Could you call 010-4444-5555?", "answer": {"plan": "dial", "arguments": {"phone_number": "010-4444-5555"}}, "unique_idx": "ACTION_VIEW_CONTACT-782-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I would like to retrieve the contact info found at content://contacts/contacts/2004. -> Fetching the contact information at content://contacts/contacts/2004 for you.", "turn 2: Update company of content://contacts/contacts/2004. -> Sure, what would you like the new company to be for content://contacts/contacts/2004?"], "query": "It's Samsung. After updating company, dial 02-123-4567.", "rewrited_query": "It's Samsung. After updating company, dial 02-123-4567.", "answer": {"plan": "dial", "arguments": {"phone_number": "02-123-4567"}}, "unique_idx": "ACTION_VIEW_CONTACT-783-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Access contact details for the entry at content://contacts/people/1007. -> Accessing contact details at content://contacts/people/1007 now.", "turn 2: Could you edit content://contacts/people/1007 to update their address? -> No problem. What is the updated address for content://contacts/people/1007?"], "query": "It's Gangnam. After that, please call 010-2222-3333.", "rewrited_query": "It's Gangnam. After that, please call 010-2222-3333.", "answer": {"plan": "dial", "arguments": {"phone_number": "010-2222-3333"}}, "unique_idx": "ACTION_VIEW_CONTACT-784-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Could you display the detailed record of the contact at content://contacts/contacts/2005? -> Displaying detailed contact record from content://contacts/contacts/2005.", "turn 2: I want to change the name on content://contacts/contacts/2005. -> Alright, what is the new name for the contact at content://contacts/contacts/2005?"], "query": "It's Mina. And then dial 031-111-2222.", "rewrited_query": "It's Mina. And then dial 031-111-2222.", "answer": {"plan": "dial", "arguments": {"phone_number": "031-111-2222"}}, "unique_idx": "ACTION_VIEW_CONTACT-785-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Bring up the profile for content://contacts/people/1008. -> Here is the profile from content://contacts/people/1008.", "turn 2: I want to edit content://contacts/people/1008 and add a new phone number. -> Understood. What's the new phone number you'd like to add for content://contacts/people/1008?"], "query": "The number is 010-5678-9012. After adding, dial that number.", "rewrited_query": "The number is 010-5678-9012. After adding, dial 010-5678-9012.", "answer": {"plan": "dial", "arguments": {"phone_number": "010-5678-9012"}}, "unique_idx": "ACTION_VIEW_CONTACT-786-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Retrieve and show details of the contact from content://contacts/contacts/2006. -> Retrieving contact details from content://contacts/contacts/2006.", "turn 2: Edit company of the person at content://contacts/contacts/2006. -> OK. What is the updated company name for content://contacts/contacts/2006?"], "query": "It's Naver. And call 010-9876-5432 after edit.", "rewrited_query": "It's Naver. And call 010-9876-5432 after edit.", "answer": {"plan": "dial", "arguments": {"phone_number": "010-9876-5432"}}, "unique_idx": "ACTION_VIEW_CONTACT-787-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Access the contact's complete information at content://contacts/contacts/2007. -> Okay, accessing full contact information from content://contacts/contacts/2007.", "turn 2: Please edit content://contacts/contacts/2007 and add a new address. -> Got it. What address should I add for content://contacts/contacts/2007?"], "query": "It's Seoul. And then call 010-4321-8765.", "rewrited_query": "It's Seoul. And then call 010-4321-8765.", "answer": {"plan": "dial", "arguments": {"phone_number": "010-4321-8765"}}, "unique_idx": "ACTION_VIEW_CONTACT-789-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Present the details for the contact associated with content://contacts/contacts/2008. -> Displaying details from content://contacts/contacts/2008.", "turn 2: I want to change the phone number of the contact associated with content://contacts/contacts/2008. -> Understood, what is the new phone number for content://contacts/contacts/2008?"], "query": "It's 010-1357-2468. Then dial it.", "rewrited_query": "It's 010-1357-2468. Then dial 010-1357-2468.", "answer": {"plan": "dial", "arguments": {"phone_number": "010-1357-2468"}}, "unique_idx": "ACTION_VIEW_CONTACT-792-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Load the complete contact information for content://contacts/people/1013. -> Loading the complete contact information from content://contacts/people/1013.", "turn 2: Edit the company of the contact information for content://contacts/people/1013 to Google. -> OK, changing the company for content://contacts/people/1013 to Google."], "query": "After changing company, please dial 02-2222-3333.", "rewrited_query": "After changing company, please dial 02-2222-3333.", "answer": {"plan": "dial", "arguments": {"phone_number": "02-2222-3333"}}, "unique_idx": "ACTION_VIEW_CONTACT-793-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Show me this contact's info located at content://contacts/people/1017. -> Displaying contact information from content://contacts/people/1017.", "turn 2: Can you edit the name of the contact information located at content://contacts/people/1017? -> Sure, what is the new name you'd like to set for content://contacts/people/1017?"], "query": "It's Jisoo. Please call 010-1111-2222 after editing.", "rewrited_query": "It's Jisoo. Please call 010-1111-2222 after editing.", "answer": {"plan": "dial", "arguments": {"phone_number": "010-1111-2222"}}, "unique_idx": "ACTION_VIEW_CONTACT-797-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: View the complete contact details for content://contacts/people/1006. -> Now showing you the full contact details: content://contacts/people/1006.", "turn 2: Change phone number of content://contacts/people/1006. -> Okay, I'm ready for the new phone number for content://contacts/people/1006."], "query": "Email them the updated number with a reminder about the meeting.", "rewrited_query": "Email content://contacts/people/1006 the updated number with a reminder about the meeting.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1006", "body": "the updated number with a reminder about the meeting"}}, "unique_idx": "ACTION_VIEW_CONTACT-782-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: I would like to retrieve the contact info found at content://contacts/contacts/2004. -> Fetching the contact information at content://contacts/contacts/2004 for you.", "turn 2: Update company of content://contacts/contacts/2004. -> Sure, what would you like the new company to be for content://contacts/contacts/2004?"], "query": "Email the contact the new company info.", "rewrited_query": "Email the contact at content://contacts/contacts/2004 the new company info.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2004", "body": "the new company info"}}, "unique_idx": "ACTION_VIEW_CONTACT-783-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Access contact details for the entry at content://contacts/people/1007. -> Accessing contact details at content://contacts/people/1007 now.", "turn 2: Could you edit content://contacts/people/1007 to update their address? -> No problem. What is the updated address for content://contacts/people/1007?"], "query": "Send them an email with the new address.", "rewrited_query": "Send content://contacts/people/1007 an email with the new address.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1007", "body": "the new address"}}, "unique_idx": "ACTION_VIEW_CONTACT-784-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you display the detailed record of the contact at content://contacts/contacts/2005? -> Displaying detailed contact record from content://contacts/contacts/2005.", "turn 2: I want to change the name on content://contacts/contacts/2005. -> Alright, what is the new name for the contact at content://contacts/contacts/2005?"], "query": "Send them an email to confirm the name change.", "rewrited_query": "Send content://contacts/contacts/2005 an email to confirm the name change.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2005", "body": "confirm the name change"}}, "unique_idx": "ACTION_VIEW_CONTACT-785-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Bring up the profile for content://contacts/people/1008. -> Here is the profile from content://contacts/people/1008.", "turn 2: I want to edit content://contacts/people/1008 and add a new phone number. -> Understood. What's the new phone number you'd like to add for content://contacts/people/1008?"], "query": "Send an email to that person with the new number and ask them to confirm it.", "rewrited_query": "Send an email to content://contacts/people/1008 with the new number and ask them to confirm it.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1008", "body": "the new number and ask them to confirm it"}}, "unique_idx": "ACTION_VIEW_CONTACT-786-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Retrieve and show details of the contact from content://contacts/contacts/2006. -> Retrieving contact details from content://contacts/contacts/2006.", "turn 2: Edit company of the person at content://contacts/contacts/2006. -> OK. What is the updated company name for content://contacts/contacts/2006?"], "query": "Email them to confirm the company change.", "rewrited_query": "Email content://contacts/contacts/2006 to confirm the company change.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2006", "body": "confirm the company change"}}, "unique_idx": "ACTION_VIEW_CONTACT-787-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Access the contact's complete information at content://contacts/contacts/2007. -> Okay, accessing full contact information from content://contacts/contacts/2007.", "turn 2: Please edit content://contacts/contacts/2007 and add a new address. -> Got it. What address should I add for content://contacts/contacts/2007?"], "query": "Email the contact to let them know their address has been updated.", "rewrited_query": "Email the contact at content://contacts/contacts/2007 to let them know their address has been updated.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2007", "body": "let them know their address has been updated"}}, "unique_idx": "ACTION_VIEW_CONTACT-789-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Present the details for the contact associated with content://contacts/contacts/2008. -> Displaying details from content://contacts/contacts/2008.", "turn 2: I want to change the phone number of the contact associated with content://contacts/contacts/2008. -> Understood, what is the new phone number for content://contacts/contacts/2008?"], "query": "Send the contact an email to confirm the change of phone number.", "rewrited_query": "Send content://contacts/contacts/2008 an email to confirm the change of phone number.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2008", "body": "confirm the change of phone number"}}, "unique_idx": "ACTION_VIEW_CONTACT-792-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Load the complete contact information for content://contacts/people/1013. -> Loading the complete contact information from content://contacts/people/1013.", "turn 2: Edit the company of the contact information for content://contacts/people/1013 to Google. -> OK, changing the company for content://contacts/people/1013 to Google."], "query": "Send them an email to inform them of the company change.", "rewrited_query": "Send content://contacts/people/1013 an email to inform them of the company change.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1013", "body": "inform them of the company change"}}, "unique_idx": "ACTION_VIEW_CONTACT-793-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Show me this contact's info located at content://contacts/people/1017. -> Displaying contact information from content://contacts/people/1017.", "turn 2: Can you edit the name of the contact information located at content://contacts/people/1017? -> Sure, what is the new name you'd like to set for content://contacts/people/1017?"], "query": "Send an email to this contact confirming their name change.", "rewrited_query": "Send an email to content://contacts/people/1017 confirming their name change.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1017", "body": "confirming their name change"}}, "unique_idx": "ACTION_VIEW_CONTACT-797-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: View the complete contact details for content://contacts/people/1006. -> Now showing you the full contact details: content://contacts/people/1006.", "turn 2: Change phone number of content://contacts/people/1006. -> Okay, I'm ready for the new phone number for content://contacts/people/1006."], "query": "If I add it, where is it located?", "rewrited_query": "If I add the new phone number for content://contacts/people/1006, where is the location of content://contacts/people/1006?", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/people/1006"}}, "unique_idx": "ACTION_VIEW_CONTACT-782-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I would like to retrieve the contact info found at content://contacts/contacts/2004. -> Fetching the contact information at content://contacts/contacts/2004 for you.", "turn 2: Update company of content://contacts/contacts/2004. -> Sure, what would you like the new company to be for content://contacts/contacts/2004?"], "query": "Can you show me that company address?", "rewrited_query": "Can you show me the address of that new company for content://contacts/contacts/2004?", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/contacts/2004"}}, "unique_idx": "ACTION_VIEW_CONTACT-783-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Access contact details for the entry at content://contacts/people/1007. -> Accessing contact details at content://contacts/people/1007 now.", "turn 2: Could you edit content://contacts/people/1007 to update their address? -> No problem. What is the updated address for content://contacts/people/1007?"], "query": "Can you find it on a map?", "rewrited_query": "Can you find the updated address for content://contacts/people/1007 on a map?", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/people/1007"}}, "unique_idx": "ACTION_VIEW_CONTACT-784-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Could you display the detailed record of the contact at content://contacts/contacts/2005? -> Displaying detailed contact record from content://contacts/contacts/2005.", "turn 2: I want to change the name on content://contacts/contacts/2005. -> Alright, what is the new name for the contact at content://contacts/contacts/2005?"], "query": "What is the address related to that?", "rewrited_query": "What is the address related to that new name for the contact at content://contacts/contacts/2005?", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/contacts/2005"}}, "unique_idx": "ACTION_VIEW_CONTACT-785-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Bring up the profile for content://contacts/people/1008. -> Here is the profile from content://contacts/people/1008.", "turn 2: I want to edit content://contacts/people/1008 and add a new phone number. -> Understood. What's the new phone number you'd like to add for content://contacts/people/1008?"], "query": "Show me where it is on a map.", "rewrited_query": "Show me where the address of content://contacts/people/1008 is on a map.", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/people/1008"}}, "unique_idx": "ACTION_VIEW_CONTACT-786-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Retrieve and show details of the contact from content://contacts/contacts/2006. -> Retrieving contact details from content://contacts/contacts/2006.", "turn 2: Edit company of the person at content://contacts/contacts/2006. -> OK. What is the updated company name for content://contacts/contacts/2006?"], "query": "Find the location of it.", "rewrited_query": "Find the location of the updated company name for content://contacts/contacts/2006.", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/contacts/2006"}}, "unique_idx": "ACTION_VIEW_CONTACT-787-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Access the contact's complete information at content://contacts/contacts/2007. -> Okay, accessing full contact information from content://contacts/contacts/2007.", "turn 2: Please edit content://contacts/contacts/2007 and add a new address. -> Got it. What address should I add for content://contacts/contacts/2007?"], "query": "Can you show me where it is?", "rewrited_query": "Can you show me where the address for content://contacts/contacts/2007 is?", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/contacts/2007"}}, "unique_idx": "ACTION_VIEW_CONTACT-789-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Present the details for the contact associated with content://contacts/contacts/2008. -> Displaying details from content://contacts/contacts/2008.", "turn 2: I want to change the phone number of the contact associated with content://contacts/contacts/2008. -> Understood, what is the new phone number for content://contacts/contacts/2008?"], "query": "Where is that person located?", "rewrited_query": "Where is the person associated with content://contacts/contacts/2008 located?", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/contacts/2008"}}, "unique_idx": "ACTION_VIEW_CONTACT-792-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Load the complete contact information for content://contacts/people/1013. -> Loading the complete contact information from content://contacts/people/1013.", "turn 2: Edit the company of the contact information for content://contacts/people/1013 to Google. -> OK, changing the company for content://contacts/people/1013 to Google."], "query": "Where's the headquarters of that?", "rewrited_query": "Where's the headquarters of Google?", "answer": {"plan": "search_location", "arguments": {"query": "Google headquarters"}}, "unique_idx": "ACTION_VIEW_CONTACT-793-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show me this contact's info located at content://contacts/people/1017. -> Displaying contact information from content://contacts/people/1017.", "turn 2: Can you edit the name of the contact information located at content://contacts/people/1017? -> Sure, what is the new name you'd like to set for content://contacts/people/1017?"], "query": "Can you pull up their address?", "rewrited_query": "Can you pull up the address of content://contacts/people/1017?", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/people/1017"}}, "unique_idx": "ACTION_VIEW_CONTACT-797-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: View the complete contact details for content://contacts/people/1006. -> Now showing you the full contact details: content://contacts/people/1006.", "turn 2: Change phone number of content://contacts/people/1006. -> Okay, I'm ready for the new phone number for content://contacts/people/1006."], "query": "Navigate to their address after this.", "rewrited_query": "Navigate to the address of content://contacts/people/1006 after this.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1006"}}, "unique_idx": "ACTION_VIEW_CONTACT-782-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I would like to retrieve the contact info found at content://contacts/contacts/2004. -> Fetching the contact information at content://contacts/contacts/2004 for you.", "turn 2: Update company of content://contacts/contacts/2004. -> Sure, what would you like the new company to be for content://contacts/contacts/2004?"], "query": "After that, navigate to their work.", "rewrited_query": "After that, navigate to the work of content://contacts/contacts/2004.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2004"}}, "unique_idx": "ACTION_VIEW_CONTACT-783-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Access contact details for the entry at content://contacts/people/1007. -> Accessing contact details at content://contacts/people/1007 now.", "turn 2: Could you edit content://contacts/people/1007 to update their address? -> No problem. What is the updated address for content://contacts/people/1007?"], "query": "Navigate to that when you're done.", "rewrited_query": "Navigate to the updated address for content://contacts/people/1007 when you're done.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1007"}}, "unique_idx": "ACTION_VIEW_CONTACT-784-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you display the detailed record of the contact at content://contacts/contacts/2005? -> Displaying detailed contact record from content://contacts/contacts/2005.", "turn 2: I want to change the name on content://contacts/contacts/2005. -> Alright, what is the new name for the contact at content://contacts/contacts/2005?"], "query": "After this, take me there.", "rewrited_query": "After this, take me to the address of content://contacts/contacts/2005.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2005"}}, "unique_idx": "ACTION_VIEW_CONTACT-785-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Bring up the profile for content://contacts/people/1008. -> Here is the profile from content://contacts/people/1008.", "turn 2: I want to edit content://contacts/people/1008 and add a new phone number. -> Understood. What's the new phone number you'd like to add for content://contacts/people/1008?"], "query": "Once you've saved, navigate to that address.", "rewrited_query": "Once you've saved, navigate to the address of content://contacts/people/1008.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1008"}}, "unique_idx": "ACTION_VIEW_CONTACT-786-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Retrieve and show details of the contact from content://contacts/contacts/2006. -> Retrieving contact details from content://contacts/contacts/2006.", "turn 2: Edit company of the person at content://contacts/contacts/2006. -> OK. What is the updated company name for content://contacts/contacts/2006?"], "query": "Navigate to their address after editing.", "rewrited_query": "Navigate to the address of content://contacts/contacts/2006 after editing.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2006"}}, "unique_idx": "ACTION_VIEW_CONTACT-787-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Access the contact's complete information at content://contacts/contacts/2007. -> Okay, accessing full contact information from content://contacts/contacts/2007.", "turn 2: Please edit content://contacts/contacts/2007 and add a new address. -> Got it. What address should I add for content://contacts/contacts/2007?"], "query": "Can you navigate to there?", "rewrited_query": "Can you navigate to the address of content://contacts/contacts/2007?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2007"}}, "unique_idx": "ACTION_VIEW_CONTACT-789-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Present the details for the contact associated with content://contacts/contacts/2008. -> Displaying details from content://contacts/contacts/2008.", "turn 2: I want to change the phone number of the contact associated with content://contacts/contacts/2008. -> Understood, what is the new phone number for content://contacts/contacts/2008?"], "query": "And then, navigate to it.", "rewrited_query": "And then, navigate to the address of content://contacts/contacts/2008.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2008"}}, "unique_idx": "ACTION_VIEW_CONTACT-792-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Load the complete contact information for content://contacts/people/1013. -> Loading the complete contact information from content://contacts/people/1013.", "turn 2: Edit the company of the contact information for content://contacts/people/1013 to Google. -> OK, changing the company for content://contacts/people/1013 to Google."], "query": "Navigate to there, please.", "rewrited_query": "Navigate to the address of content://contacts/people/1013, please.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1013"}}, "unique_idx": "ACTION_VIEW_CONTACT-793-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Show me this contact's info located at content://contacts/people/1017. -> Displaying contact information from content://contacts/people/1017.", "turn 2: Can you edit the name of the contact information located at content://contacts/people/1017? -> Sure, what is the new name you'd like to set for content://contacts/people/1017?"], "query": "Navigate there once this is done.", "rewrited_query": "Navigate to the address of content://contacts/people/1017 once this is done.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1017"}}, "unique_idx": "ACTION_VIEW_CONTACT-797-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Bring up the details of the contact from URI content://contacts/people/1018. -> Fetching details for contact located at content://contacts/people/1018.", "turn 2: I want to change the address of the details of the contact from URI content://contacts/people/1018. -> Okay, let's update the address for the contact at content://contacts/people/1018. Please provide the new address."], "query": "After updating the address, dial content://contacts/people/1018.", "rewrited_query": "After updating the address, dial content://contacts/people/1018.", "answer": {"plan": "dial", "arguments": {"phone_number": "content://contacts/people/1018"}}, "unique_idx": "ACTION_VIEW_CONTACT-799-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Fetch the full record of the contact from content://contacts/contacts/2012. -> Retrieving full contact record from content://contacts/contacts/2012.", "turn 2: I'd like to edit the company information for the full record of the contact from content://contacts/contacts/2012. -> Understood. I am ready to edit the company information for contact content://contacts/contacts/2012. What's the new company name?"], "query": "What's the number to dial them at content://contacts/contacts/2012?", "rewrited_query": "What's the number to dial content://contacts/contacts/2012?", "answer": {"plan": "dial", "arguments": {"phone_number": "content://contacts/contacts/2012"}}, "unique_idx": "ACTION_VIEW_CONTACT-800-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I wish to view the contact info available at content://contacts/people/1019. -> Displaying contact details from content://contacts/people/1019.", "turn 2: Would you mind editing content://contacts/people/1019? -> Sure, I'm ready to edit the contact at content://contacts/people/1019. What changes would you like to make?"], "query": "Can you dial content://contacts/people/1019 after?", "rewrited_query": "Can you dial content://contacts/people/1019 after?", "answer": {"plan": "dial", "arguments": {"phone_number": "content://contacts/people/1019"}}, "unique_idx": "ACTION_VIEW_CONTACT-801-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Retrieve profile details for the contact with URI content://contacts/contacts/2013. -> Fetching contact profile from content://contacts/contacts/2013.", "turn 2: Could you edit content://contacts/contacts/2013's company to Google? -> Alright, setting the company for contact at content://contacts/contacts/2013 to Google."], "query": "Call content://contacts/contacts/2013 now.", "rewrited_query": "Call content://contacts/contacts/2013 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "content://contacts/contacts/2013"}}, "unique_idx": "ACTION_VIEW_CONTACT-803-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Open the detailed record for the contact found at content://contacts/people/1021. -> Opening detailed contact record from content://contacts/people/1021.", "turn 2: I would like to edit content://contacts/people/1021 and add the address 123 Main Street. -> Ok, adding the address '123 Main Street' to contact content://contacts/people/1021."], "query": "Can you dial content://contacts/people/1021 after that?", "rewrited_query": "Can you dial content://contacts/people/1021 after that?", "answer": {"plan": "dial", "arguments": {"phone_number": "content://contacts/people/1021"}}, "unique_idx": "ACTION_VIEW_CONTACT-804-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Load contact details for me using the link content://contacts/people/1022. -> Loading contact details from content://contacts/people/1022.", "turn 2: Can you edit content://contacts/people/1022? -> Affirmative. The contact at content://contacts/people/1022 is ready for editing. What would you like to change?"], "query": "After editing, dial content://contacts/people/1022.", "rewrited_query": "After editing, dial content://contacts/people/1022.", "answer": {"plan": "dial", "arguments": {"phone_number": "content://contacts/people/1022"}}, "unique_idx": "ACTION_VIEW_CONTACT-806-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Could you check the contact info from content://contacts/people/1023? -> Checking and displaying contact info from content://contacts/people/1023.", "turn 2: I want to edit contact://contacts/people/1023. -> Editing contact://contacts/people/1023. What would you like to update?"], "query": "After I'm done, call contact://contacts/people/1023.", "rewrited_query": "After I'm done, call contact://contacts/people/1023.", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://contacts/people/1023"}}, "unique_idx": "ACTION_VIEW_CONTACT-807-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I need to check the complete profile of the contact found at content://contacts/contacts/2011. -> Accessing the complete profile for contact at content://contacts/contacts/2011.", "turn 2: I need to edit the complete profile for contact at content://contacts/contacts/2011, add an email. -> Alright, I'm now ready to edit the contact at content://contacts/contacts/2011 and add an email address."], "query": "Send them a message saying 'Email added successfully!'", "rewrited_query": "Send contact at content://contacts/contacts/2011 a message saying 'Email added successfully!'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/contacts/2011", "message": "Email added successfully!"}}, "unique_idx": "ACTION_VIEW_CONTACT-798-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Bring up the details of the contact from URI content://contacts/people/1018. -> Fetching details for contact located at content://contacts/people/1018.", "turn 2: I want to change the address of the details of the contact from URI content://contacts/people/1018. -> Okay, let's update the address for the contact at content://contacts/people/1018. Please provide the new address."], "query": "Send the contact a message saying 'Address updated successfully.'", "rewrited_query": "Send the contact at content://contacts/people/1018 a message saying 'Address updated successfully.'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/people/1018", "message": "Address updated successfully."}}, "unique_idx": "ACTION_VIEW_CONTACT-799-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Fetch the full record of the contact from content://contacts/contacts/2012. -> Retrieving full contact record from content://contacts/contacts/2012.", "turn 2: I'd like to edit the company information for the full record of the contact from content://contacts/contacts/2012. -> Understood. I am ready to edit the company information for contact content://contacts/contacts/2012. What's the new company name?"], "query": "Send a message to the contact saying 'Company information updated.'", "rewrited_query": "Send a message to the contact at content://contacts/contacts/2012 saying 'Company information updated.'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/contacts/2012", "message": "Company information updated."}}, "unique_idx": "ACTION_VIEW_CONTACT-800-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I wish to view the contact info available at content://contacts/people/1019. -> Displaying contact details from content://contacts/people/1019.", "turn 2: Would you mind editing content://contacts/people/1019? -> Sure, I'm ready to edit the contact at content://contacts/people/1019. What changes would you like to make?"], "query": "Send them a message saying 'Ready to apply changes.'", "rewrited_query": "Send contact at content://contacts/people/1019 a message saying 'Ready to apply changes.'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/people/1019", "message": "Ready to apply changes."}}, "unique_idx": "ACTION_VIEW_CONTACT-801-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please get the detailed contact information for content://contacts/people/1020. -> Now presenting the contact information for content://contacts/people/1020.", "turn 2: Edit content://contacts/people/1020 to include an email address of johndoe@example.com. -> Okay, I'll add johndoe@example.com as the email address for the contact at content://contacts/people/1020."], "query": "Send a message to them saying 'Email successfully added!'", "rewrited_query": "Send a message to contact at content://contacts/people/1020 saying 'Email successfully added!'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/people/1020", "message": "Email successfully added!"}}, "unique_idx": "ACTION_VIEW_CONTACT-802-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Retrieve profile details for the contact with URI content://contacts/contacts/2013. -> Fetching contact profile from content://contacts/contacts/2013.", "turn 2: Could you edit content://contacts/contacts/2013's company to Google? -> Alright, setting the company for contact at content://contacts/contacts/2013 to Google."], "query": "Send a message to them saying 'Company set to Google.'", "rewrited_query": "Send a message to contact at content://contacts/contacts/2013 saying 'Company set to Google.'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/contacts/2013", "message": "Company set to Google."}}, "unique_idx": "ACTION_VIEW_CONTACT-803-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Open the detailed record for the contact found at content://contacts/people/1021. -> Opening detailed contact record from content://contacts/people/1021.", "turn 2: I would like to edit content://contacts/people/1021 and add the address 123 Main Street. -> Ok, adding the address '123 Main Street' to contact content://contacts/people/1021."], "query": "Send the contact a text message saying 'Address has been updated to 123 Main Street.'", "rewrited_query": "Send the contact at content://contacts/people/1021 a text message saying 'Address has been updated to 123 Main Street.'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/people/1021", "message": "Address has been updated to 123 Main Street."}}, "unique_idx": "ACTION_VIEW_CONTACT-804-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Display all available information for the contact at content://contacts/contacts/2014. -> Showing all available information for the contact at content://contacts/contacts/2014.", "turn 2: Edit content://contacts/contacts/2014 and add a phone number. -> OK, I'm ready to add a phone number to the contact at content://contacts/contacts/2014. What is the phone number?"], "query": "Send them a message saying 'Phone number added successfully!'", "rewrited_query": "Send contact at content://contacts/contacts/2014 a message saying 'Phone number added successfully!'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/contacts/2014", "message": "Phone number added successfully!"}}, "unique_idx": "ACTION_VIEW_CONTACT-805-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Load contact details for me using the link content://contacts/people/1022. -> Loading contact details from content://contacts/people/1022.", "turn 2: Can you edit content://contacts/people/1022? -> Affirmative. The contact at content://contacts/people/1022 is ready for editing. What would you like to change?"], "query": "Send them a message that says 'Contact is ready to be edited, let me know what you want updated!'", "rewrited_query": "Send contact at content://contacts/people/1022 a message that says 'Contact is ready to be edited, let me know what you want updated!'", "answer": {"plan": "send_message", "arguments": {"to": "content://contacts/people/1022", "message": "Contact is ready to be edited, let me know what you want updated!"}}, "unique_idx": "ACTION_VIEW_CONTACT-806-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you check the contact info from content://contacts/people/1023? -> Checking and displaying contact info from content://contacts/people/1023.", "turn 2: I want to edit contact://contacts/people/1023. -> Editing contact://contacts/people/1023. What would you like to update?"], "query": "Send a text to them saying 'Contact is currently being edited.'", "rewrited_query": "Send a text to contact://contacts/people/1023 saying 'Contact is currently being edited.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://contacts/people/1023", "message": "Contact is currently being edited."}}, "unique_idx": "ACTION_VIEW_CONTACT-807-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to check the complete profile of the contact found at content://contacts/contacts/2011. -> Accessing the complete profile for contact at content://contacts/contacts/2011.", "turn 2: I need to edit the complete profile for contact at content://contacts/contacts/2011, add an email. -> Alright, I'm now ready to edit the contact at content://contacts/contacts/2011 and add an email address."], "query": "Send him an email about the meeting time.", "rewrited_query": "Send the contact at content://contacts/contacts/2011 an email about the meeting time.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2011", "subject": "meeting time"}}, "unique_idx": "ACTION_VIEW_CONTACT-798-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Bring up the details of the contact from URI content://contacts/people/1018. -> Fetching details for contact located at content://contacts/people/1018.", "turn 2: I want to change the address of the details of the contact from URI content://contacts/people/1018. -> Okay, let's update the address for the contact at content://contacts/people/1018. Please provide the new address."], "query": "Send them an email about the change of address.", "rewrited_query": "Send the contact from URI content://contacts/people/1018 an email about the change of address.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1018", "subject": "change of address"}}, "unique_idx": "ACTION_VIEW_CONTACT-799-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Fetch the full record of the contact from content://contacts/contacts/2012. -> Retrieving full contact record from content://contacts/contacts/2012.", "turn 2: I'd like to edit the company information for the full record of the contact from content://contacts/contacts/2012. -> Understood. I am ready to edit the company information for contact content://contacts/contacts/2012. What's the new company name?"], "query": "Send an email to them about the new company policy.", "rewrited_query": "Send an email to the full record of the contact from content://contacts/contacts/2012 about the new company policy.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2012", "subject": "new company policy"}}, "unique_idx": "ACTION_VIEW_CONTACT-800-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: I wish to view the contact info available at content://contacts/people/1019. -> Displaying contact details from content://contacts/people/1019.", "turn 2: Would you mind editing content://contacts/people/1019? -> Sure, I'm ready to edit the contact at content://contacts/people/1019. What changes would you like to make?"], "query": "Can you send him an email?", "rewrited_query": "Can you send the contact at content://contacts/people/1019 an email?", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1019"}}, "unique_idx": "ACTION_VIEW_CONTACT-801-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Please get the detailed contact information for content://contacts/people/1020. -> Now presenting the contact information for content://contacts/people/1020.", "turn 2: Edit content://contacts/people/1020 to include an email address of johndoe@example.com. -> Okay, I'll add johndoe@example.com as the email address for the contact at content://contacts/people/1020."], "query": "Send an email to him about the project deadline.", "rewrited_query": "Send an email to johndoe@example.com about the project deadline.", "answer": {"plan": "send_email", "arguments": {"to": "johndoe@example.com", "subject": "project deadline"}}, "unique_idx": "ACTION_VIEW_CONTACT-802-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Retrieve profile details for the contact with URI content://contacts/contacts/2013. -> Fetching contact profile from content://contacts/contacts/2013.", "turn 2: Could you edit content://contacts/contacts/2013's company to Google? -> Alright, setting the company for contact at content://contacts/contacts/2013 to Google."], "query": "Send them an email regarding the new job opening at Google.", "rewrited_query": "Send the contact at content://contacts/contacts/2013 an email regarding the new job opening at Google.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2013", "subject": "new job opening at Google"}}, "unique_idx": "ACTION_VIEW_CONTACT-803-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Open the detailed record for the contact found at content://contacts/people/1021. -> Opening detailed contact record from content://contacts/people/1021.", "turn 2: I would like to edit content://contacts/people/1021 and add the address 123 Main Street. -> Ok, adding the address '123 Main Street' to contact content://contacts/people/1021."], "query": "Send a message to him about the address change.", "rewrited_query": "Send a message to the contact at content://contacts/people/1021 about the address change.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1021", "subject": "address change"}}, "unique_idx": "ACTION_VIEW_CONTACT-804-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Display all available information for the contact at content://contacts/contacts/2014. -> Showing all available information for the contact at content://contacts/contacts/2014.", "turn 2: Edit content://contacts/contacts/2014 and add a phone number. -> OK, I'm ready to add a phone number to the contact at content://contacts/contacts/2014. What is the phone number?"], "query": "Email him about the new number.", "rewrited_query": "Email the contact at content://contacts/contacts/2014 about the new number.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/contacts/2014", "subject": "new number"}}, "unique_idx": "ACTION_VIEW_CONTACT-805-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Load contact details for me using the link content://contacts/people/1022. -> Loading contact details from content://contacts/people/1022.", "turn 2: Can you edit content://contacts/people/1022? -> Affirmative. The contact at content://contacts/people/1022 is ready for editing. What would you like to change?"], "query": "Send him a quick email to confirm his availability for next week.", "rewrited_query": "Send the contact at content://contacts/people/1022 a quick email to confirm his availability for next week.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/1022", "body": "confirm his availability for next week"}}, "unique_idx": "ACTION_VIEW_CONTACT-806-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you check the contact info from content://contacts/people/1023? -> Checking and displaying contact info from content://contacts/people/1023.", "turn 2: I want to edit contact://contacts/people/1023. -> Editing contact://contacts/people/1023. What would you like to update?"], "query": "Send an email to him about the change.", "rewrited_query": "Send an email to contact://contacts/people/1023 about the change.", "answer": {"plan": "send_email", "arguments": {"to": "contact://contacts/people/1023", "subject": "the change"}}, "unique_idx": "ACTION_VIEW_CONTACT-807-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Retrieve profile details for the contact with URI content://contacts/contacts/2013. -> Fetching contact profile from content://contacts/contacts/2013.", "turn 2: Could you edit content://contacts/contacts/2013's company to Google? -> Alright, setting the company for contact at content://contacts/contacts/2013 to Google."], "query": "Where is Google located?", "rewrited_query": "Where is Google located?", "answer": {"plan": "search_location", "arguments": {"query": "Google"}}, "unique_idx": "ACTION_VIEW_CONTACT-803-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Open the detailed record for the contact found at content://contacts/people/1021. -> Opening detailed contact record from content://contacts/people/1021.", "turn 2: I would like to edit content://contacts/people/1021 and add the address 123 Main Street. -> Ok, adding the address '123 Main Street' to contact content://contacts/people/1021."], "query": "Can you show that to me?", "rewrited_query": "Can you show 123 Main Street to me?", "answer": {"plan": "search_location", "arguments": {"query": "123 Main Street"}}, "unique_idx": "ACTION_VIEW_CONTACT-804-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to check the complete profile of the contact found at content://contacts/contacts/2011. -> Accessing the complete profile for contact at content://contacts/contacts/2011.", "turn 2: I need to edit the complete profile for contact at content://contacts/contacts/2011, add an email. -> Alright, I'm now ready to edit the contact at content://contacts/contacts/2011 and add an email address."], "query": "Can you navigate me there?", "rewrited_query": "Can you navigate me to content://contacts/contacts/2011?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2011"}}, "unique_idx": "ACTION_VIEW_CONTACT-798-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Bring up the details of the contact from URI content://contacts/people/1018. -> Fetching details for contact located at content://contacts/people/1018.", "turn 2: I want to change the address of the details of the contact from URI content://contacts/people/1018. -> Okay, let's update the address for the contact at content://contacts/people/1018. Please provide the new address."], "query": "1 Infinite Loop, Cupertino, CA. Now, take me there.", "rewrited_query": "1 Infinite Loop, Cupertino, CA. Now, take me to 1 Infinite Loop, Cupertino, CA.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "1 Infinite Loop, Cupertino, CA"}}, "unique_idx": "ACTION_VIEW_CONTACT-799-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Fetch the full record of the contact from content://contacts/contacts/2012. -> Retrieving full contact record from content://contacts/contacts/2012.", "turn 2: I'd like to edit the company information for the full record of the contact from content://contacts/contacts/2012. -> Understood. I am ready to edit the company information for contact content://contacts/contacts/2012. What's the new company name?"], "query": "Apple, now please guide me there.", "rewrited_query": "Apple, now please guide me to content://contacts/contacts/2012.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2012"}}, "unique_idx": "ACTION_VIEW_CONTACT-800-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I wish to view the contact info available at content://contacts/people/1019. -> Displaying contact details from content://contacts/people/1019.", "turn 2: Would you mind editing content://contacts/people/1019? -> Sure, I'm ready to edit the contact at content://contacts/people/1019. What changes would you like to make?"], "query": "Add the address 456 Oak Ave and navigate me there.", "rewrited_query": "Add the address 456 Oak Ave and navigate me to 456 Oak Ave.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "456 Oak Ave"}}, "unique_idx": "ACTION_VIEW_CONTACT-801-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please get the detailed contact information for content://contacts/people/1020. -> Now presenting the contact information for content://contacts/people/1020.", "turn 2: Edit content://contacts/people/1020 to include an email address of johndoe@example.com. -> Okay, I'll add johndoe@example.com as the email address for the contact at content://contacts/people/1020."], "query": "Navigate me to content://contacts/people/1020", "rewrited_query": "Navigate me to content://contacts/people/1020", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1020"}}, "unique_idx": "ACTION_VIEW_CONTACT-802-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Retrieve profile details for the contact with URI content://contacts/contacts/2013. -> Fetching contact profile from content://contacts/contacts/2013.", "turn 2: Could you edit content://contacts/contacts/2013's company to Google? -> Alright, setting the company for contact at content://contacts/contacts/2013 to Google."], "query": "Navigate to it.", "rewrited_query": "Navigate to content://contacts/contacts/2013.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2013"}}, "unique_idx": "ACTION_VIEW_CONTACT-803-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Open the detailed record for the contact found at content://contacts/people/1021. -> Opening detailed contact record from content://contacts/people/1021.", "turn 2: I would like to edit content://contacts/people/1021 and add the address 123 Main Street. -> Ok, adding the address '123 Main Street' to contact content://contacts/people/1021."], "query": "Can you navigate to 123 Main Street?", "rewrited_query": "Can you navigate to 123 Main Street?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "123 Main Street"}}, "unique_idx": "ACTION_VIEW_CONTACT-804-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Display all available information for the contact at content://contacts/contacts/2014. -> Showing all available information for the contact at content://contacts/contacts/2014.", "turn 2: Edit content://contacts/contacts/2014 and add a phone number. -> OK, I'm ready to add a phone number to the contact at content://contacts/contacts/2014. What is the phone number?"], "query": "Navigate me to content://contacts/contacts/2014", "rewrited_query": "Navigate me to content://contacts/contacts/2014", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2014"}}, "unique_idx": "ACTION_VIEW_CONTACT-805-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Load contact details for me using the link content://contacts/people/1022. -> Loading contact details from content://contacts/people/1022.", "turn 2: Can you edit content://contacts/people/1022? -> Affirmative. The contact at content://contacts/people/1022 is ready for editing. What would you like to change?"], "query": "Set the address to 100 Congress Ave, Austin, TX and navigate me there.", "rewrited_query": "Set the address to 100 Congress Ave, Austin, TX and navigate me to 100 Congress Ave, Austin, TX.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "100 Congress Ave, Austin, TX"}}, "unique_idx": "ACTION_VIEW_CONTACT-806-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you check the contact info from content://contacts/people/1023? -> Checking and displaying contact info from content://contacts/people/1023.", "turn 2: I want to edit contact://contacts/people/1023. -> Editing contact://contacts/people/1023. What would you like to update?"], "query": "Navigate to content://contacts/people/1023", "rewrited_query": "Navigate to content://contacts/people/1023", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1023"}}, "unique_idx": "ACTION_VIEW_CONTACT-807-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Access and show the contact's complete details from content://contacts/contacts/2015. -> Accessing and showing complete details for contact content://contacts/contacts/2015.", "turn 2: Change content://contacts/contacts/2015's name, please. -> Okay, I'm ready for the new name for contact at content://contacts/contacts/2015."], "query": "Then dial it.", "rewrited_query": "Then dial content://contacts/contacts/2015.", "answer": {"plan": "dial", "arguments": {"phone_number": "content://contacts/contacts/2015"}}, "unique_idx": "ACTION_VIEW_CONTACT-808-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Exhibit the contact's details via URI content://contacts/people/1024. -> Exhibiting contact details from content://contacts/people/1024.", "turn 2: Okay, now edit content://contacts/people/1024's phone number. -> Alright, I am ready to edit the phone number for contact content://contacts/people/1024. What's the new number?"], "query": "The number is 010-2222-3333, then call it.", "rewrited_query": "The number is 010-2222-3333, then call 010-2222-3333.", "answer": {"plan": "dial", "arguments": {"phone_number": "010-2222-3333"}}, "unique_idx": "ACTION_VIEW_CONTACT-809-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Kindly present the contact information found at content://contacts/contacts/2016. -> Presenting the contact information at content://contacts/contacts/2016.", "turn 2: Edit content://contacts/contacts/2016 to add a company. -> Sure, what is the company name you would like to add to contact content://contacts/contacts/2016?"], "query": "It's 'Example Inc.', now call it.", "rewrited_query": "It's 'Example Inc.', now call content://contacts/contacts/2016.", "answer": {"plan": "dial", "arguments": {"phone_number": "content://contacts/contacts/2016"}}, "unique_idx": "ACTION_VIEW_CONTACT-810-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Retrieve the email for my colleague at contact://jane_smith. -> No problem, the email address for Jane Smith is jane.smith@example.com.", "turn 2: Could you update the email address for the contact at contact://jane_smith to jane.s@example.com? -> Okay, updating the email address for contact://jane_smith to jane.s@example.com."], "query": "Call contact://jane_smith.", "rewrited_query": "Call contact://jane_smith.", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://jane_smith"}}, "unique_idx": "get_contact_info-999-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I need to find the physical address of my friend at contact://alice_representative. -> Sure, the address for Alice Representative is 123 Main Street, Anytown, USA.", "turn 2: Change the address for the contact at contact://alice_representative to 456 Elm Street, Anytown, USA. -> Sure, I'm now updating the address for contact://alice_representative to 456 Elm Street, Anytown, USA."], "query": "Call contact://alice_representative.", "rewrited_query": "Call contact://alice_representative.", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://alice_representative"}}, "unique_idx": "get_contact_info-1000-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Show me a summary of the contact at contact://bob_resource. -> Okay, here's a summary for Bob Resource: Name - Bob Resource, Phone - 555-555-5555, Email - bob.resource@email.com.", "turn 2: Can you update the company information for the contact at contact://bob_resource? -> Of course, what company would you like to assign to contact://bob_resource?"], "query": "It's Google, then dial contact://bob_resource.", "rewrited_query": "It's Google, then dial contact://bob_resource.", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://bob_resource"}}, "unique_idx": "get_contact_info-1001-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: What is the email associated with URI contact://eve_officer? -> The email for Eve Officer is eve.officer@company.org.", "turn 2: Change the company name for the contact at contact://eve_officer. -> No problem. What's the new company name for contact://eve_officer?"], "query": "Make it 'Samsung', then dial contact://eve_officer", "rewrited_query": "Make it 'Samsung', then dial contact://eve_officer", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://eve_officer"}}, "unique_idx": "get_contact_info-1002-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Can you extract the phone details from contact://charlie? -> Affirmative. Charlie's phone number is 321-765-0987.", "turn 2: Could you change the name of the person at contact://charlie? -> Understood, what is the new name for contact://charlie?"], "query": "Change it to Charles and call contact://charlie.", "rewrited_query": "Change it to Charles and call contact://charlie.", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://charlie"}}, "unique_idx": "get_contact_info-1003-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I need to fetch the address from the contact record found at contact://david_address. -> Fetching address... David's address is 456 Oak Avenue, Somecity, State.", "turn 2: Please update the phone number for the contact at contact://david_address. -> Okay, what should the new phone number be for contact://david_address?"], "query": "Update it to 111-222-3333 and dial that number.", "rewrited_query": "Update it to 111-222-3333 and dial 111-222-3333 number.", "answer": {"plan": "dial", "arguments": {"phone_number": "111-222-3333"}}, "unique_idx": "get_contact_info-1004-ACTION_EDIT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Access and show the contact's complete details from content://contacts/contacts/2015. -> Accessing and showing complete details for contact content://contacts/contacts/2015.", "turn 2: Change content://contacts/contacts/2015's name, please. -> Okay, I'm ready for the new name for contact at content://contacts/contacts/2015."], "query": "Can you show me where that is?", "rewrited_query": "Can you show me where contact://contacts/contacts/2015 is?", "answer": {"plan": "search_location", "arguments": {"query": "contact://contacts/contacts/2015"}}, "unique_idx": "ACTION_VIEW_CONTACT-808-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Exhibit the contact's details via URI content://contacts/people/1024. -> Exhibiting contact details from content://contacts/people/1024.", "turn 2: Okay, now edit content://contacts/people/1024's phone number. -> Alright, I am ready to edit the phone number for contact content://contacts/people/1024. What's the new number?"], "query": "Show me where it is.", "rewrited_query": "Show me where content://contacts/people/1024 is.", "answer": {"plan": "search_location", "arguments": {"query": "content://contacts/people/1024"}}, "unique_idx": "ACTION_VIEW_CONTACT-809-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Kindly present the contact information found at content://contacts/contacts/2016. -> Presenting the contact information at content://contacts/contacts/2016.", "turn 2: Edit content://contacts/contacts/2016 to add a company. -> Sure, what is the company name you would like to add to contact content://contacts/contacts/2016?"], "query": "Where can I find that place?", "rewrited_query": "Where can I find contact://contacts/contacts/2016?", "answer": {"plan": "search_location", "arguments": {"query": "contact://contacts/contacts/2016"}}, "unique_idx": "ACTION_VIEW_CONTACT-810-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Retrieve the email for my colleague at contact://jane_smith. -> No problem, the email address for Jane Smith is jane.smith@example.com.", "turn 2: Could you update the email address for the contact at contact://jane_smith to jane.s@example.com? -> Okay, updating the email address for contact://jane_smith to jane.s@example.com."], "query": "Can you find that?", "rewrited_query": "Can you find contact://jane_smith?", "answer": {"plan": "search_location", "arguments": {"query": "contact://jane_smith"}}, "unique_idx": "get_contact_info-999-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to find the physical address of my friend at contact://alice_representative. -> Sure, the address for Alice Representative is 123 Main Street, Anytown, USA.", "turn 2: Change the address for the contact at contact://alice_representative to 456 Elm Street, Anytown, USA. -> Sure, I'm now updating the address for contact://alice_representative to 456 Elm Street, Anytown, USA."], "query": "Could you show me that location?", "rewrited_query": "Could you show me contact://alice_representative location?", "answer": {"plan": "search_location", "arguments": {"query": "contact://alice_representative"}}, "unique_idx": "get_contact_info-1000-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show me a summary of the contact at contact://bob_resource. -> Okay, here's a summary for Bob Resource: Name - Bob Resource, Phone - 555-555-5555, Email - bob.resource@email.com.", "turn 2: Can you update the company information for the contact at contact://bob_resource? -> Of course, what company would you like to assign to contact://bob_resource?"], "query": "Show me where I can find it.", "rewrited_query": "Show me where I can find contact://bob_resource.", "answer": {"plan": "search_location", "arguments": {"query": "contact://bob_resource"}}, "unique_idx": "get_contact_info-1001-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: What is the email associated with URI contact://eve_officer? -> The email for Eve Officer is eve.officer@company.org.", "turn 2: Change the company name for the contact at contact://eve_officer. -> No problem. What's the new company name for contact://eve_officer?"], "query": "Okay, search the location for that contact.", "rewrited_query": "Okay, search the location for contact://eve_officer contact.", "answer": {"plan": "search_location", "arguments": {"query": "contact://eve_officer"}}, "unique_idx": "get_contact_info-1002-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you extract the phone details from contact://charlie? -> Affirmative. Charlie's phone number is 321-765-0987.", "turn 2: Could you change the name of the person at contact://charlie? -> Understood, what is the new name for contact://charlie?"], "query": "Where is that?", "rewrited_query": "Where is contact://charlie?", "answer": {"plan": "search_location", "arguments": {"query": "contact://charlie"}}, "unique_idx": "get_contact_info-1003-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to fetch the address from the contact record found at contact://david_address. -> Fetching address... David's address is 456 Oak Avenue, Somecity, State.", "turn 2: Please update the phone number for the contact at contact://david_address. -> Okay, what should the new phone number be for contact://david_address?"], "query": "Find that contact on the map.", "rewrited_query": "Find contact://david_address contact on the map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://david_address"}}, "unique_idx": "get_contact_info-1004-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Access and show the contact's complete details from content://contacts/contacts/2015. -> Accessing and showing complete details for contact content://contacts/contacts/2015.", "turn 2: Change content://contacts/contacts/2015's name, please. -> Okay, I'm ready for the new name for contact at content://contacts/contacts/2015."], "query": "Take me there.", "rewrited_query": "Take me to contact at content://contacts/contacts/2015.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2015"}}, "unique_idx": "ACTION_VIEW_CONTACT-808-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Exhibit the contact's details via URI content://contacts/people/1024. -> Exhibiting contact details from content://contacts/people/1024.", "turn 2: Okay, now edit content://contacts/people/1024's phone number. -> Alright, I am ready to edit the phone number for contact content://contacts/people/1024. What's the new number?"], "query": "Could you guide me there?", "rewrited_query": "Could you guide me to contact content://contacts/people/1024?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/people/1024"}}, "unique_idx": "ACTION_VIEW_CONTACT-809-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Kindly present the contact information found at content://contacts/contacts/2016. -> Presenting the contact information at content://contacts/contacts/2016.", "turn 2: Edit content://contacts/contacts/2016 to add a company. -> Sure, what is the company name you would like to add to contact content://contacts/contacts/2016?"], "query": "Navigate to there.", "rewrited_query": "Navigate to contact content://contacts/contacts/2016.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/contacts/2016"}}, "unique_idx": "ACTION_VIEW_CONTACT-810-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Retrieve the email for my colleague at contact://jane_smith. -> No problem, the email address for Jane Smith is jane.smith@example.com.", "turn 2: Could you update the email address for the contact at contact://jane_smith to jane.s@example.com? -> Okay, updating the email address for contact://jane_smith to jane.s@example.com."], "query": "Can you navigate to there?", "rewrited_query": "Can you navigate to contact://jane_smith?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://jane_smith"}}, "unique_idx": "get_contact_info-999-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to find the physical address of my friend at contact://alice_representative. -> Sure, the address for Alice Representative is 123 Main Street, Anytown, USA.", "turn 2: Change the address for the contact at contact://alice_representative to 456 Elm Street, Anytown, USA. -> Sure, I'm now updating the address for contact://alice_representative to 456 Elm Street, Anytown, USA."], "query": "Could you start the navigation to there?", "rewrited_query": "Could you start the navigation to contact://alice_representative?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://alice_representative"}}, "unique_idx": "get_contact_info-1000-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Show me a summary of the contact at contact://bob_resource. -> Okay, here's a summary for Bob Resource: Name - Bob Resource, Phone - 555-555-5555, Email - bob.resource@email.com.", "turn 2: Can you update the company information for the contact at contact://bob_resource? -> Of course, what company would you like to assign to contact://bob_resource?"], "query": "Could you navigate me to that contact's address?", "rewrited_query": "Could you navigate me to contact://bob_resource's address?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://bob_resource's address"}}, "unique_idx": "get_contact_info-1001-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: What is the email associated with URI contact://eve_officer? -> The email for Eve Officer is eve.officer@company.org.", "turn 2: Change the company name for the contact at contact://eve_officer. -> No problem. What's the new company name for contact://eve_officer?"], "query": "Open that contact's address in maps.", "rewrited_query": "Open contact://eve_officer's address in maps.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://eve_officer's address"}}, "unique_idx": "get_contact_info-1002-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Can you extract the phone details from contact://charlie? -> Affirmative. Charlie's phone number is 321-765-0987.", "turn 2: Could you change the name of the person at contact://charlie? -> Understood, what is the new name for contact://charlie?"], "query": "Can you navigate me to that?", "rewrited_query": "Can you navigate me to contact://charlie?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://charlie"}}, "unique_idx": "get_contact_info-1003-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to fetch the address from the contact record found at contact://david_address. -> Fetching address... David's address is 456 Oak Avenue, Somecity, State.", "turn 2: Please update the phone number for the contact at contact://david_address. -> Okay, what should the new phone number be for contact://david_address?"], "query": "OK. Can you navigate me to there?", "rewrited_query": "OK. Can you navigate me to contact://david_address?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://david_address"}}, "unique_idx": "get_contact_info-1004-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Fetch the email for contact: contact://frank_email and send it to me. -> Frank's email is frank@example.net. I can send it to you now, if you'd like.", "turn 2: Can you update the address for the contact at contact://frank_email? -> Sure, I'm ready to edit the address for the contact at contact://frank_email. What would you like the new address to be?"], "query": "Send him a message: I've updated your address, Frank!", "rewrited_query": "Send Frank a message: I've updated your address, Frank!", "answer": {"plan": "send_message", "arguments": {"to": "Frank", "message": "I've updated your address, Frank!"}}, "unique_idx": "get_contact_info-1006-ACTION_EDIT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Fetch the email for contact: contact://frank_email and send it to me. -> Frank's email is frank@example.net. I can send it to you now, if you'd like.", "turn 2: Can you update the address for the contact at contact://frank_email? -> Sure, I'm ready to edit the address for the contact at contact://frank_email. What would you like the new address to be?"], "query": "Could you email him about the address change?", "rewrited_query": "Could you email frank@example.net about the address change?", "answer": {"plan": "send_email", "arguments": {"to": "frank@example.net", "subject": "address change"}}, "unique_idx": "get_contact_info-1006-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Retrieve the postal address using contact://alice_address. -> Okay, retrieving the postal address for contact://alice_address.", "turn 2: Can you edit contact://alice_address contact? -> Yes, I'm opening the contact editor for contact://alice_address. What would you like to change?"], "query": "Email her to confirm the changes I just made.", "rewrited_query": "Email the contact at contact://alice_address to confirm the changes I just made.", "answer": {"plan": "send_email", "arguments": {"to": "contact://alice_address", "subject": "confirm the changes I just made"}}, "unique_idx": "get_contact_info-1048-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Show me the telephone number for contact://bob_call. -> Fetching the phone number for contact://bob_call.", "turn 2: I want to edit contact://bob_call one. -> Okay, I'm opening contact://bob_call for editing. What would you like to modify?"], "query": "Email him a reminder about it.", "rewrited_query": "Email the contact at contact://bob_call a reminder about it.", "answer": {"plan": "send_email", "arguments": {"to": "contact://bob_call", "body": "a reminder about it"}}, "unique_idx": "get_contact_info-1049-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Get the email contact details for contact://charlie_mail. -> I'm getting the email details for contact://charlie_mail.", "turn 2: Change the email address for contact://charlie_mail contact. -> Understood. I'm ready to edit the email address for contact://charlie_mail. Please provide the new email."], "query": "Send an email to him about the confirmation of the new email address.", "rewrited_query": "Send an email to the contact at contact://charlie_mail about the confirmation of the new email address.", "answer": {"plan": "send_email", "arguments": {"to": "contact://charlie_mail", "subject": "the confirmation of the new email address"}}, "unique_idx": "get_contact_info-1050-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: I'm looking for address details at contact://doris_residence. -> Sure, looking up the address for contact://doris_residence.", "turn 2: I want to change the company for contact://doris_residence. -> Alright, I'm opening the contact information for contact://doris_residence so you can change the company."], "query": "Send her an email with an update to her company information.", "rewrited_query": "Send the contact at contact://doris_residence an email with an update to her company information.", "answer": {"plan": "send_email", "arguments": {"to": "contact://doris_residence", "subject": "an update to her company information"}}, "unique_idx": "get_contact_info-1051-ACTION_EDIT_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Get the contact summary from this URI: contact://emma_summary. -> Here's the summary for Emma Summary: Name - Emma Summary, Phone - (123) 456-7890.", "turn 2: Edit the email for the contact at contact://emma_summary to emma.s@example.com. -> Okay, I'm opening the contact at contact://emma_summary to update the email address to emma.s@example.com."], "query": "Show me where that is located.", "rewrited_query": "Show me where emma.s@example.com is located.", "answer": {"plan": "search_location", "arguments": {"query": "emma.s@example.com"}}, "unique_idx": "get_contact_info-1005-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Fetch the email for contact: contact://frank_email and send it to me. -> Frank's email is frank@example.net. I can send it to you now, if you'd like.", "turn 2: Can you update the address for the contact at contact://frank_email? -> Sure, I'm ready to edit the address for the contact at contact://frank_email. What would you like the new address to be?"], "query": "Set it to 221B Baker Street, London.", "rewrited_query": "Set the address for the contact at contact://frank_email to 221B Baker Street, London.", "answer": {"plan": "search_location", "arguments": {"query": "221B Baker Street, London"}}, "unique_idx": "get_contact_info-1006-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please get phone information for the URI contact://george_mobile. -> Okay, George's mobile number is 555-987-6543.", "turn 2: Change the name of the contact at contact://george_mobile to George Smith. -> Got it. I'm updating the name for contact at contact://george_mobile to George Smith."], "query": "Can you find that name in my area?", "rewrited_query": "Can you find George Smith in my area?", "answer": {"plan": "search_location", "arguments": {"query": "George Smith"}}, "unique_idx": "get_contact_info-1007-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: What is the phone number for contact://oscar? -> The phone number for Oscar is 555-123-4567.", "turn 2: Could you change the phone number for Oscar at contact://oscar? to 555-000-0000? -> No problem, I'm changing Oscar's phone number at contact://oscar? to 555-000-0000."], "query": "Please show the location of that contact.", "rewrited_query": "Please show the location of Oscar at contact://oscar?", "answer": {"plan": "search_location", "arguments": {"query": "Oscar"}}, "unique_idx": "get_contact_info-1038-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you provide the full info from contact://zach? -> Alright, here's Zach's full contact information: Name: Zach Taylor, Phone: 777-888-9999, Email: zach.t@random.org, Address: 456 Main St, Somecity, TX 54321.", "turn 2: Could you edit Zach's address at contact://zach? to 789 Pine Ln, Anytown, GA 30303? -> Okay, I'm updating Zach's address at contact://zach? to 789 Pine Ln, Anytown, GA 30303."], "query": "Show me that address on a map.", "rewrited_query": "Show me 789 Pine Ln, Anytown, GA 30303 on a map.", "answer": {"plan": "search_location", "arguments": {"query": "789 Pine Ln, Anytown, GA 30303"}}, "unique_idx": "get_contact_info-1047-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Retrieve the postal address using contact://alice_address. -> Okay, retrieving the postal address for contact://alice_address.", "turn 2: Can you edit contact://alice_address contact? -> Yes, I'm opening the contact editor for contact://alice_address. What would you like to change?"], "query": "Can you find this contact's work address?", "rewrited_query": "Can you find Alice at contact://alice_address's work address?", "answer": {"plan": "search_location", "arguments": {"query": "Alice's work address"}}, "unique_idx": "get_contact_info-1048-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show me the telephone number for contact://bob_call. -> Fetching the phone number for contact://bob_call.", "turn 2: I want to edit contact://bob_call one. -> Okay, I'm opening contact://bob_call for editing. What would you like to modify?"], "query": "Set the address to 10 Downing Street, London.", "rewrited_query": "Set the address for contact://bob_call to 10 Downing Street, London.", "answer": {"plan": "search_location", "arguments": {"query": "10 Downing Street, London"}}, "unique_idx": "get_contact_info-1049-ACTION_EDIT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Fetch the email for contact: contact://frank_email and send it to me. -> Frank's email is frank@example.net. I can send it to you now, if you'd like.", "turn 2: Can you update the address for the contact at contact://frank_email? -> Sure, I'm ready to edit the address for the contact at contact://frank_email. What would you like the new address to be?"], "query": "1 Infinite Loop, Cupertino, CA", "rewrited_query": "1 Infinite Loop, Cupertino, CA", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "1 Infinite Loop, Cupertino, CA"}}, "unique_idx": "get_contact_info-1006-ACTION_EDIT_CONTACT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Start editing the document at content://files/update/272, without any prefabricated text. -> Sure, starting the editor for content://files/update/272.", "turn 2: Could you bring up the file selector for a plain text file, please? -> Okay, launching the file selector for plain text files."], "query": "Send it to 555-123-4567 with the message 'Check this draft.'", "rewrited_query": "Send the plain text file to 555-123-4567 with the message 'Check this draft.'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Check this draft.", "attachments": ["the plain text file"]}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1597-ACTION_OPEN_DOCUMENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Add a contact for Samuel with his number 777-555-4444. -> Okay, adding Samuel with phone number 777-555-4444 to your contacts.", "turn 2: I want to choose more than one image at once. Please open a multi-select dialog for images. -> Alright, a multi-select image dialog is opening now."], "query": "Email them to all members at projectgroup@email.com with the subject 'Project Images'.", "rewrited_query": "Email multiple images to all members at projectgroup@email.com with the subject 'Project Images'.", "answer": {"plan": "send_email", "arguments": {"to": "projectgroup@email.com", "subject": "Project Images", "attachments": []}}, "unique_idx": "ACTION_INSERT_CONTACT-426-ACTION_OPEN_DOCUMENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Activate modification mode on content://docs/archives/262, with 'Historical revisions' as starting text. -> Activating editing mode for content://docs/archives/262 with 'Historical revisions' as the initial text.", "turn 2: I'm selecting multiple images. Help me pick several image files at once. -> No problem! I'm opening a multi-select image picker for you now."], "query": "After selection, please text them to my sister with the message: 'Look what I found!'", "rewrited_query": "After selection, please text multiple images to my sister with the message: 'Look what I found!'", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "Look what I found!"}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1596-ACTION_OPEN_DOCUMENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need to find details on popular workout regimes for busy professionals. Could you search for that? -> Searching for 'popular workout regimes for busy professionals'. Expect to find quick, effective routines to fit tight schedules.", "turn 2: I want to select one document that is in text format. Open my document picker. -> Opening the document picker for plain text files now."], "query": "Send it to 555-123-4567 with a message saying 'FYI'", "rewrited_query": "Send the document that is in text format to 555-123-4567 with a message saying 'FYI'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "FYI"}}, "unique_idx": "web_search-1376-ACTION_OPEN_DOCUMENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Show the brief record of the online pages I have recently accessed. -> Displaying your recent web history: Amazon, YouTube, and The Verge.", "turn 2: Please open up the file picker for plain text documents. -> Sure, opening the file picker to choose your text file."], "query": "After I select it, send it to my friend Jake with the message 'Check this out!'", "rewrited_query": "After I select the text file, send the text file to my friend Jake with the message 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "Jake", "message": "Check this out!"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2206-ACTION_OPEN_DOCUMENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Direct me towards Buckingham Fountain in Chicago. -> Routing you to Buckingham Fountain, Chicago. Stand by for directions.", "turn 2: I need to open both text and PDF files, and I want to be able to select multiple documents. -> No problem! I am opening a file picker where you can choose multiple text and PDF files."], "query": "Can you text them to my workgroup with the message, 'Here are the updated documents.'?", "rewrited_query": "Can you text multiple text and PDF files to my workgroup with the message, 'Here are the updated documents.'?", "answer": {"plan": "send_message", "arguments": {"to": "my workgroup", "message": "Here are the updated documents.", "attachments": ["text files", "PDF files"]}}, "unique_idx": "ACTION_NAVIGATE_TO_LOCATION-1828-ACTION_OPEN_DOCUMENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Let me set up a personalized alarm sound. Activate the ringtone selection tool, please. -> Affirmative. Ringtone selection tool is now active!", "turn 2: Help me open a PDF file I can edit long-term. -> Ok, opening the document selector for PDF files."], "query": "Okay, please open the PDF file I have selected.", "rewrited_query": "Okay, please open the PDF file content://pdf/document01.pdf I have selected.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://pdf/document01.pdf"}}, "unique_idx": "ACTION_GET_RINGTONE-318-ACTION_OPEN_DOCUMENT-1_NR-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Kindly open my camera in still picture mode for a quick click. -> Alright, opening the camera in still picture mode.", "turn 2: Select the picture I just took. -> Sure, accessing image selection for the latest picture."], "query": "Send that picture to my sister with the message 'Just took this!'", "rewrited_query": "Send that picture to my sister with the message 'Just took this!'", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "Just took this!", "attachments": ["that picture"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-842-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to take a still image. Activate my camera application, please. -> No problem, activating the camera for still images now.", "turn 2: Can you select the photo I just took? -> Affirmative, loading the image selection tool."], "query": "Can you send it to John with the text 'Check this out'?", "rewrited_query": "Can you send the photo I just took to John with the text 'Check this out'?", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Check this out", "attachments": ["the photo I just took"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-843-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Initiate the still picture mode on my smartphone's camera. -> Initiating the still picture mode now.", "turn 2: Select the image that was just captured. -> I'm on it. Displaying the image selection interface."], "query": "Send it to my friend Dave.", "rewrited_query": "Send the image that was just captured to my friend Dave.", "answer": {"plan": "send_message", "arguments": {"to": "my friend Dave", "message": "the image that was just captured", "attachments": ["the image that was just captured"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-845-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Open my camera app in still mode to capture a photo. -> Opening camera app in still mode.", "turn 2: Choose the latest picture. -> Okay, showing you the image selection."], "query": "Text it to my mom with 'This is for you!'", "rewrited_query": "Text the latest picture to my mom with 'This is for you!'", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "This is for you!", "attachments": ["the latest picture"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-846-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly bring up my camera for still image capture. -> Bringing up the camera for still image capture.", "turn 2: Please select the last picture. -> No problem, accessing the image gallery for selection."], "query": "Send that image to 555-555-5555 with the text 'Hello'.", "rewrited_query": "Send that image to 555-555-5555 with the text 'Hello'.", "answer": {"plan": "send_message", "arguments": {"to": "555-555-5555", "message": "Hello", "attachments": ["that image"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-847-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to take a still picture; please open the camera application. -> Got it, opening the camera app.", "turn 2: Select the image now. -> Understood, opening the image selector."], "query": "Send it to Sarah with the message 'Look at this!'", "rewrited_query": "Send the image now to Sarah with the message 'Look at this!'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Look at this!", "attachments": ["the image now"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-848-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Please switch on the still image camera so I can take a snapshot. -> Switching on the still image camera.", "turn 2: Select the photo I just took with the still image camera. -> Alright, accessing the recent image for selection."], "query": "Text that to Bob with the message 'Here you go!'", "rewrited_query": "Text that photo I just took with the still image camera to Bob with the message 'Here you go!'", "answer": {"plan": "send_message", "arguments": {"to": "Bob", "message": "Here you go!", "attachments": ["that photo I just took with the still image camera"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-849-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Activate the still image camera mode on my phone, please. -> Activating the still image camera mode.", "turn 2: Can you select the last image taken? -> You got it. Launching image selection for the last taken picture."], "query": "Send that image to 123-456-7890.", "rewrited_query": "Send that image to 123-456-7890.", "answer": {"plan": "send_message", "arguments": {"to": "123-456-7890", "message": "", "attachments": ["that image"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-850-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to take a quick still shot; get the camera app running. -> Firing up the camera for your still shot!", "turn 2: Can you show me that image? -> Sure, loading the image now."], "query": "Send that to support@company.com", "rewrited_query": "Send the image to support@company.com", "answer": {"plan": "send_email", "arguments": {"to": "support@company.com", "attachments": ["image"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-855-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Engage the photo capture application for a still image on my phone. -> Engaging the still image camera application.", "turn 2: Show me the photo I just clicked. -> Okay, showing you the photo you just clicked."], "query": "Email it to peter@example.com with body 'Check this out'.", "rewrited_query": "Email the photo I just clicked to peter@example.com with body 'Check this out'.", "answer": {"plan": "send_email", "arguments": {"to": "peter@example.com", "body": "Check this out", "attachments": ["photo I just clicked"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-857-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you activate my camera to click a still photo? -> Activating the still image camera.", "turn 2: Okay, can you display the photo I just snapped? -> Here's the photo you just snapped!"], "query": "Email it to accounting@example.com, please.", "rewrited_query": "Email the photo I just snapped to accounting@example.com, please.", "answer": {"plan": "send_email", "arguments": {"to": "accounting@example.com", "attachments": ["photo I just snapped"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-858-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Open my camera's still image mode immediately so I can snap a photo. -> Immediately opening your camera in still image mode.", "turn 2: Okay, I've snapped the photo. Could you display the photo, please? -> Sure thing, the photo you just took is now being displayed."], "query": "Send it as email to david@example.com.", "rewrited_query": "Send the photo you just took as email to david@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "david@example.com", "attachments": ["photo you just took"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-860-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: I'd appreciate it if you could open the still capture camera app. -> Initiating the still image camera application now.", "turn 2: Can I see the picture I just took? -> Sure, just a moment while I retrieve the image. Displaying the image now."], "query": "Send it to my sister saying 'Look what I just took!'", "rewrited_query": "Send the image to my sister saying 'Look what I just took!'", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "Look what I just took!", "attachments": ["the image"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-851-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Turn on the still photography camera on my device. -> Okay, opening the still image camera.", "turn 2: Can you display the photo I just captured? -> Okay, fetching the photo you just took. It should appear on your screen shortly."], "query": "Send it to +15551234567 with the message 'Here's the photo I took!'", "rewrited_query": "Send the photo to +15551234567 with the message 'Here's the photo I took!'", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "Here's the photo I took!", "attachments": ["the photo"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-852-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you please bring up my still image mode so I can click a photo? -> Sure, launching the still image camera mode.", "turn 2: Show me the picture I just took. -> Alright, loading up the picture you just snapped."], "query": "Send it to my mom with the message 'I thought you'd like this!'", "rewrited_query": "Send the picture I just took to my mom with the message 'I thought you'd like this!'", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "I thought you'd like this!", "attachments": ["the picture I just took"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-853-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Start the camera for taking a photo in still mode, please. -> Starting the still image camera now.", "turn 2: Okay, I've taken the picture. Now, display the picture to me. -> Displaying the photo you just captured."], "query": "Text it to John saying, 'I took this for you.'", "rewrited_query": "Text the photo you just captured to John saying, 'I took this for you.'", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "I took this for you.", "attachments": ["the photo you just captured"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-854-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to take a quick still shot; get the camera app running. -> Firing up the camera for your still shot!", "turn 2: Can you show me that image? -> Sure, loading the image now."], "query": "Can you send it to 555-555-5555 with the message 'Check this out!'?", "rewrited_query": "Can you send the image to 555-555-5555 with the message 'Check this out!'?", "answer": {"plan": "send_message", "arguments": {"to": "555-555-5555", "message": "Check this out!", "attachments": ["the image"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-855-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Please open the picture-taking mode in my camera for a still image. -> Opening the still image capture mode.", "turn 2: Now, can I see the image I just captured? -> Certainly, I'll display the photo you just took."], "query": "Send it to Sarah with a message saying 'What do you think?'", "rewrited_query": "Send the image I just captured to Sarah with a message saying 'What do you think?'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "What do you think?", "attachments": ["the image I just captured"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-856-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Engage the photo capture application for a still image on my phone. -> Engaging the still image camera application.", "turn 2: Show me the photo I just clicked. -> Okay, showing you the photo you just clicked."], "query": "Send that to my friend at +1-555-123-4567 with the text 'Just snapped this!'", "rewrited_query": "Send the photo I just clicked to my friend at +1-555-123-4567 with the text 'Just snapped this!'", "answer": {"plan": "send_message", "arguments": {"to": "+1-555-123-4567", "message": "Just snapped this!", "attachments": ["the photo I just clicked"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-857-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you activate my camera to click a still photo? -> Activating the still image camera.", "turn 2: Okay, can you display the photo I just snapped? -> Here's the photo you just snapped!"], "query": "Send it to my brother with the message 'Guess where I am!'", "rewrited_query": "Send the photo I just snapped to my brother with the message 'Guess where I am!'", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "Guess where I am!", "attachments": ["photo I just snapped"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-858-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need a still picture taken; please fire up the image capture app on my device. -> Alright, launching the camera for a still image.", "turn 2: I want to review the picture I just took; can you show the picture I just took to me? -> Pulling up the picture you just took for your review."], "query": "Text that to Mom with the message 'Quick pic from my day.'", "rewrited_query": "Text the picture I just took to Mom with the message 'Quick pic from my day.'", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "Quick pic from my day.", "attachments": ["picture I just took"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-859-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Open my camera's still image mode immediately so I can snap a photo. -> Immediately opening your camera in still image mode.", "turn 2: Okay, I've snapped the photo. Could you display the photo, please? -> Sure thing, the photo you just took is now being displayed."], "query": "Send it to +15559876543 saying 'This is what I'm doing right now!'", "rewrited_query": "Send the photo you just took to +15559876543 saying 'This is what I'm doing right now!'", "answer": {"plan": "send_message", "arguments": {"to": "+15559876543", "message": "This is what I'm doing right now!", "attachments": ["photo you just took"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-860-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I require to record a video clip; start the video camera. -> Got it, launching the video camera for you.", "turn 2: Show me a list of videos. -> Here's a list of videos available on your device."], "query": "Can you email that to info@company.com?", "rewrited_query": "Can you email the selected video to info@company.com?", "answer": {"plan": "send_email", "arguments": {"to": "info@company.com", "attachments": ["selected video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-878-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you please launch the video recording app? -> Certainly, opening the video recording app.", "turn 2: Can I see the available video files to choose from? -> Certainly, these are the available video files. Select one to proceed."], "query": "Send it to sales@website.com.", "rewrited_query": "Send the selected video to sales@website.com.", "answer": {"plan": "send_email", "arguments": {"to": "sales@website.com", "attachments": ["selected video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-880-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Activate the phone's video capture mode. -> Activating video capture mode.", "turn 2: Can you display the video options available? -> Here are the video options that are currently available."], "query": "Email it to john.123@sample.com", "rewrited_query": "Email the selected video to john.123@sample.com", "answer": {"plan": "send_email", "arguments": {"to": "john.123@sample.com", "attachments": ["selected video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-882-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Boot up the video camera app on my device. -> Booting up the video camera application now.", "turn 2: Can I select a video now? -> You sure can. Select from the available videos."], "query": "Send it to test@test.com.", "rewrited_query": "Send the selected video to test@test.com.", "answer": {"plan": "send_email", "arguments": {"to": "test@test.com", "attachments": ["selected video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-883-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you start the tool that lets me record videos on my device? -> Got it, starting the video recording tool.", "turn 2: Choose the video I just recorded. -> No problem. I'll let you select the video right after it's recorded."], "query": "Can you send it to support@example.com?", "rewrited_query": "Can you send the video I just recorded to support@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "support@example.com", "attachments": ["the video I just recorded"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-896-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need the camera app in video mode; please open it up. -> Opening the camera in video mode.", "turn 2: Can I quickly access the video after recording? -> Affirmative. I'll present the video selection options as soon as you stop recording."], "query": "Email it to jane.doe@company.com, please.", "rewrited_query": "Email the video to jane.doe@company.com, please.", "answer": {"plan": "send_email", "arguments": {"to": "jane.doe@company.com", "attachments": ["the video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-897-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: I would like to record a scene; open up the video camera function. -> Activating the video camera function.", "turn 2: Is there a way to select the video immediately after recording? -> Yes, you'll be able to choose the video right after recording."], "query": "Can you email it to marketing@example.com?", "rewrited_query": "Can you email the video to marketing@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "marketing@example.com", "attachments": ["the video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-901-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Can I use the video I just recorded? -> Certainly. I will allow you to select the video you just finished recording."], "query": "Email that to info@company.com with subject line 'Video'.", "rewrited_query": "Email the video I just recorded to info@company.com with subject line 'Video'.", "answer": {"plan": "send_email", "arguments": {"to": "info@company.com", "subject": "Video", "attachments": ["the video I just recorded"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-ACTION_GET_CONTENT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you start the tool that lets me record videos on my device? -> Got it, starting the video recording tool.", "turn 2: Choose the video I just recorded. -> No problem. I'll let you select the video right after it's recorded."], "query": "Text it to my brother with the message 'Check this out!'", "rewrited_query": "Text the video I just recorded to my brother with the message 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "Check this out!", "attachments": ["video I just recorded"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-896-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need the camera app in video mode; please open it up. -> Opening the camera in video mode.", "turn 2: Can I quickly access the video after recording? -> Affirmative. I'll present the video selection options as soon as you stop recording."], "query": "Send it to John with 'Just made this!'", "rewrited_query": "Send the video after recording to John with 'Just made this!'", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Just made this!", "attachments": ["video after recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-897-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Fire up the video recording mode on my smartphone's camera. -> Initiating video recording mode.", "turn 2: Allow me to select a video after I'm done recording. -> Understood. A video selection prompt will appear once you finish recording."], "query": "Send it to +15555555555 with the message, 'New video, take a look!'", "rewrited_query": "Send the video after I'm done recording to +15555555555 with the message, 'New video, take a look!'", "answer": {"plan": "send_message", "arguments": {"to": "+15555555555", "message": "New video, take a look!", "attachments": ["video after I'm done recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-898-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you get my video camera ready for a recording session? -> Preparing the video camera for recording.", "turn 2: Let me choose a video to share. -> You got it. The video selection screen will be displayed for sharing after recording."], "query": "Send it to my friend via text saying 'Take a look at this video!'", "rewrited_query": "Send the video to share to my friend via text saying 'Take a look at this video!'", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "Take a look at this video!", "attachments": ["video to share"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-899-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Set the camera to video mode, please. -> Switching camera to video mode.", "turn 2: Give me the option to pick the video. -> Will do. The video selection interface will pop up once the recording is complete."], "query": "Text it to Sarah saying 'Here's the video I recorded.'", "rewrited_query": "Text the video to pick to Sarah saying 'Here's the video I recorded.'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Here's the video I recorded.", "attachments": ["video to pick"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-900-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to record a scene; open up the video camera function. -> Activating the video camera function.", "turn 2: Is there a way to select the video immediately after recording? -> Yes, you'll be able to choose the video right after recording."], "query": "Send it as a message to Mom with the text 'Watch this!'", "rewrited_query": "Send the video immediately after recording as a message to Mom with the text 'Watch this!'", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "Watch this!", "attachments": ["video immediately after recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-901-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Start the device's video capture application now. -> Starting video capture application.", "turn 2: After recording, I want to select it. -> OK. After you finish recording, I'll bring up the video selection."], "query": "Send it to my coworker, saying 'Check out my video!'", "rewrited_query": "Send the video after recording to my coworker, saying 'Check out my video!'", "answer": {"plan": "send_message", "arguments": {"to": "my coworker", "message": "Check out my video!", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-902-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly initialize the video camera tool so I can record a video. -> Initializing the video camera for recording.", "turn 2: Can I choose the video after it has been recorded? -> Yes, you can. The video selection screen will appear once you stop the recording."], "query": "Send it to my group chat with the message 'New video!'", "rewrited_query": "Send the video after it has been recorded to my group chat with the message 'New video!'", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "New video!", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-903-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Can I use the video I just recorded? -> Certainly. I will allow you to select the video you just finished recording."], "query": "Send it to my boss with the message: 'Here is the documented video.'", "rewrited_query": "Send the video I just recorded to my boss with the message: 'Here is the documented video.'", "answer": {"plan": "send_message", "arguments": {"to": "my boss", "message": "Here is the documented video.", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Activate the camera's video recording mode, please. -> Alright, opening the video camera now.", "turn 2: Do you want me to select the video now? -> Okay, accessing your video files now."], "query": "Send it to 555-123-4567 with the message 'Check this out!'", "rewrited_query": "Send the video to 555-123-4567 with the message 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Check this out!", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-905-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to film a quick video; can you start the video camera? -> Sure, launching the video camera application.", "turn 2: Should I choose the video I just filmed? -> Yes, please. I'm opening the video selection interface."], "query": "Can you text that to John with the message 'Here's the video I promised'?", "rewrited_query": "Can you text the video I just filmed to John with the message 'Here's the video I promised'?", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Here's the video I promised", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-906-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you turn on the video recorder on my smartphone? -> Affirmative, activating video recorder.", "turn 2: Would you like me to pick a video to use? -> Understood, displaying available videos now."], "query": "Send it as a message to my sister with the text 'I thought you'd enjoy this'", "rewrited_query": "Send the video to my sister with the text 'I thought you'd enjoy this'", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "I thought you'd enjoy this", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-907-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Requesting the activation of video capture on my device. -> Acknowledged. Video capture is now active.", "turn 2: Shall I select a video for you? -> Affirmative, initiating video selection."], "query": "Text it to 123-456-7890, saying 'Have a look at this'.", "rewrited_query": "Text the video to 123-456-7890, saying 'Have a look at this'.", "answer": {"plan": "send_message", "arguments": {"to": "123-456-7890", "message": "Have a look at this", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-908-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Please boot the video mode in the camera so I can record now. -> Video mode activated; ready to record.", "turn 2: Do you want to select that video? -> Yep, opening up your video gallery now."], "query": "Send it to Mom with the message 'This is for you!'", "rewrited_query": "Send the video to Mom with the message 'This is for you!'", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "This is for you!", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-909-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I urge you to open the video camera application for recording. -> As you wish. Opening video camera.", "turn 2: Pick the video file now? -> Right away, let me bring up your videos."], "query": "Message it to Dad, saying 'I made this for you!'", "rewrited_query": "Message the video file to Dad, saying 'I made this for you!'", "answer": {"plan": "send_message", "arguments": {"to": "Dad", "message": "I made this for you!", "attachments": ["video file"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-910-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly trigger the video function in the camera app so I can film. -> Triggering video function now.", "turn 2: Do you want to attach the video? -> Ok, I'm opening the video selection tool."], "query": "Send it to my friend at 555-987-6543 with the message, 'Watch this!'", "rewrited_query": "Send the video to my friend at 555-987-6543 with the message, 'Watch this!'", "answer": {"plan": "send_message", "arguments": {"to": "my friend at 555-987-6543", "message": "Watch this!", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-911-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: Please start my video recording tool for capturing a live event. -> Starting video recording tool.", "turn 2: Want me to choose the captured video? -> Got it. Preparing to select the video."], "query": "Send that to Sarah with the message 'Here is the video'", "rewrited_query": "Send the captured video to Sarah with the message 'Here is the video'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Here is the video", "attachments": ["the captured video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-912-ACTION_GET_CONTENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need a new ringback sound; please configure my device with content://media/ringtone08 as the ringtone. -> Configuring ringtone to content://media/ringtone08.", "turn 2: Show me the ringtone picker, please. -> Okay, launching the ringtone picker now."], "query": "Use one of them for my 12:30 PM alarm.", "rewrited_query": "Use one of the ringtone picker for my 12:30 PM alarm.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 12, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_SET_RINGTONE-1610-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Kindly set the ringtone on my device to content://media/ringtone09. -> I've set your ringtone to content://media/ringtone09.", "turn 2: But can I see the available ringtones? -> Certainly, I'll bring up the ringtone selection screen."], "query": "Set an alarm at 1:00 PM and use one of those.", "rewrited_query": "Set an alarm at 1:00 PM and use one of the ringtone selection screen.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 13, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1611-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Update ringtone: I prefer the sound at content://media/ringtone10. -> Updating your ringtone to content://media/ringtone10.", "turn 2: Can I browse through different ringtones? -> Of course, here's the ringtone browser."], "query": "I want to set an alarm for 2 PM using one from there.", "rewrited_query": "I want to set an alarm for 2 PM using one from the ringtone browser.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1612-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Hey, can you change my phone's ringtone to content://media/ringtone11? -> OK, I've set your ringtone to content://media/ringtone11.", "turn 2: show me other options to be sure -> Okay, please choose from these ringtone options:"], "query": "Set an alarm for 6:00 AM using one of them.", "rewrited_query": "Set an alarm for 6:00 AM using one of these ringtone options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1613-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please assign content://media/ringtone12 as the default alert sound for incoming calls. -> Done! Incoming calls will now use content://media/ringtone12 as the ringtone.", "turn 2: Could you please let me preview other ringtones? -> Sure, here are some other ringtone options for you to preview."], "query": "Set an alarm for 7 AM with it.", "rewrited_query": "Set an alarm for 7 AM with one of these ringtone options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1614-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Switch my phone's ringtone to content://media/ringtone14 so I can hear it clearly. -> I've switched your ringtone to content://media/ringtone14.", "turn 2: Can I see other ringtones as well? -> Certainly! Please select a new ringtone from the following options."], "query": "Can you set an alarm for 8:30 AM using that?", "rewrited_query": "Can you set an alarm for 8:30 AM using one of the following options?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_SET_RINGTONE-1616-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set the system's ringtone to content://media/ringtone15, thanks. -> You're welcome! content://media/ringtone15 is now set as your system ringtone.", "turn 2: Show me other tones, just in case. -> No problem! Here are some alternative ringtones you can choose from."], "query": "Set an alarm for 9:00 AM and use one of them as the ringtone.", "rewrited_query": "Set an alarm for 9:00 AM and use one of the alternative ringtones as the ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 9, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1617-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Switch the sound for incoming calls to content://media/ringtone12. -> Okay, changing your ringtone to content://media/ringtone12.", "turn 2: Can you quickly display the available ringtones so I can confirm? -> Displaying available ringtones now. Please choose one."], "query": "Set an alarm for 10:00 AM with that.", "rewrited_query": "Set an alarm for 10:00 AM with one of the available ringtones.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 10, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1618-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set a new ringtone from content://media/ringtone14 on my device. -> Alright, content://media/ringtone14 is now your ringtone.", "turn 2: I'd like to explore other ringtone choices. -> Of course! Here's a list of other ringtones you can select."], "query": "Set an alarm for 11:30 AM, using that.", "rewrited_query": "Set an alarm for 11:30 AM, using one of the ringtones from the list.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 11, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_SET_RINGTONE-1619-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Can you update my ringtone using content://media/ringtone16? -> Yes, I've updated your ringtone to content://media/ringtone16.", "turn 2: Can you list more options of available ringtones? -> Listing more ringtone options for you now."], "query": "Set an alarm for noon with it.", "rewrited_query": "Set an alarm for noon with one of the listed ringtone options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 12, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1620-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Could you please help me change the tone to content://media/ringtone18? -> Sure, the new ringtone is set to content://media/ringtone18.", "turn 2: Please, show me all possible tones. -> Here's a list of all available ringtones on your device."], "query": "Set an alarm for 13:00 using that.", "rewrited_query": "Set an alarm for 13:00 using one of all available ringtones.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 13, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1621-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I need to use content://media/ringtone20 as my ringtone. -> Got it! Your ringtone is now content://media/ringtone20.", "turn 2: Let me see all of my options anyway. -> Okay, showing you all the ringtone options now."], "query": "Set an alarm for 2:00 PM and use one of them as the ringtone.", "rewrited_query": "Set an alarm for 2:00 PM and use one of the ringtone options as the ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_RINGTONE-1622-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Adjust my incoming call sound to be content://media/ringtone13 now. -> OK, I've set your ringtone to content://media/ringtone13.", "turn 2: Show me other options. -> Alright, let's take a look at some other ringtone options you can choose."], "query": "Set an alarm for 3:30 PM and use it.", "rewrited_query": "Set an alarm for 3:30 PM and use one of the other ringtone options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 15, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_SET_RINGTONE-1623-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Replace my current ringtone with content://media/ringtone01 please. -> The ringtone is now set to content://media/ringtone01.", "turn 2: Can I see some more ringtones? -> Sure, please pick a ringtone from this list."], "query": "Set an alarm for 8 AM using that ringtone.", "rewrited_query": "Set an alarm for 8 AM using content://media/ringtone01 ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone01"}}, "unique_idx": "ACTION_SET_RINGTONE-1624-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Would you make my phone ring with content://media/ringtone03? -> You got it! Your ringtone is now content://media/ringtone03.", "turn 2: Are there any other ringtones available? -> Of course! Choose your new ringtone."], "query": "If I pick one, set an alarm for 9:30 with it.", "rewrited_query": "If I pick one, set an alarm for 9:30 with the new ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 9, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "new ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1625-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set the ringtone for my device to content://media/ringtone07 as soon as possible. -> Ringtone changed successfully to content://media/ringtone07.", "turn 2: Show me the ringtone options. -> Here are some ringtone options for you to preview."], "query": "If I choose one, set an alarm for 6:00 AM with it.", "rewrited_query": "If I choose one, set an alarm for 6:00 AM with the ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "the ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1626-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Change the device ringtone using the audio file at content://media/ringtone09. -> I've updated your ringtone to content://media/ringtone09.", "turn 2: Let me preview some other ringtones. -> Okay, select a new ringtone from the options presented."], "query": "Set an alarm for 7:00 AM using that.", "rewrited_query": "Set an alarm for 7:00 AM using the new ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "new ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1627-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Quickly update my ringtone to content://media/ringtone11. -> Done! Your new ringtone is content://media/ringtone11.", "turn 2: Could you list other ringtones, please? -> Certainly. Select your next ringtone from the list."], "query": "If I selected a ringtone, set an alarm for 12 PM and use it.", "rewrited_query": "If I selected a ringtone, set an alarm for 12 PM and use the selected ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 12, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "selected ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1628-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Switch my device sound to content://media/ringtone02. -> No problem, setting ringtone to content://media/ringtone02 now.", "turn 2: Can you show me the other sounds? -> Sure, here are the other sound options available."], "query": "If I chose a ringtone, set an alarm for 2 PM using it.", "rewrited_query": "If I chose a ringtone, set an alarm for 2 PM using the new ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "new ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1629-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set my phone's notification bell to content://media/ringtone17. -> OK, the notification bell is now set to content://media/ringtone17.", "turn 2: I want to browse through other ringtones. -> No problem! Please choose another ringtone from the following list."], "query": "If I pick one, set an alarm for 7:00 PM with it.", "rewrited_query": "If I pick one, set an alarm for 7:00 PM with the new ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 19, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "new ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1630-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I'm switching to the ringtone found at content://media/ringtone04. -> Successfully switched ringtone to content://media/ringtone04.", "turn 2: Could I see the other options? -> Alright, take a look at these other options."], "query": "If I pick a ringtone, set an alarm for 10:00 AM using that ringtone.", "rewrited_query": "If I pick a ringtone, set an alarm for 10:00 AM using that ringtone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 10, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "that ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1631-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please replace the ringing tone with content://media/ringtone19. -> I've replaced the ringing tone with content://media/ringtone19.", "turn 2: Can you bring up the other ringtone options? -> Here are some more ringtone options for you."], "query": "If I select one, could you use it to set an alarm for 11 AM?", "rewrited_query": "If I select one, could you use the selected ringtone to set an alarm for 11 AM?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 11, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "selected ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1632-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I prefer a new ringtone, switch it to content://media/ringtone06 right away. -> OK, I've updated your ringtone to content://media/ringtone06.", "turn 2: Can you show me some other options? -> Sure, let's find you something new. Here are more options."], "query": "If I pick one can you set an alarm for 4:30 PM with it?", "rewrited_query": "If I pick one can you set an alarm for 4:30 PM with the ringtone?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 16, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "the ringtone"}}, "unique_idx": "ACTION_SET_RINGTONE-1633-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Alter the incoming call sound to content://media/ringtone08 as soon as you can. -> The ringtone has been successfully changed to content://media/ringtone08.", "turn 2: Actually, let me pick another one. -> Okay, please choose a new ringtone."], "query": "Set an alarm for 8:00 AM using it.", "rewrited_query": "Set an alarm for 8:00 AM using content://media/ringtone08.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone08"}}, "unique_idx": "ACTION_SET_RINGTONE-1634-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I'd like you to change my phone's ring to content://media/ringtone12. -> No problem, your ringtone is now set to content://media/ringtone12.", "turn 2: I don't like content://media/ringtone12. Can I preview some other ringtones? -> Certainly! Please select a different ringtone."], "query": "Set an alarm with it at 7:30 AM.", "rewrited_query": "Set an alarm with content://media/ringtone12 at 7:30 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "content://media/ringtone12"}}, "unique_idx": "ACTION_SET_RINGTONE-1635-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Reassign my default call tone to content://media/ringtone10. -> Alright, I've reassigned your ringtone to content://media/ringtone10.", "turn 2: Let's see other ringtones. -> Okay, choose another sound you like."], "query": "Set an alarm for 9:00 AM with it.", "rewrited_query": "Set an alarm for 9:00 AM with content://media/ringtone10.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 9, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone10"}}, "unique_idx": "ACTION_SET_RINGTONE-1636-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I want to update my phone’s ringtone; please set it to content://media/ringtone16. -> Your ringtone has been updated to content://media/ringtone16.", "turn 2: I’d like to choose a different one; show me the options. -> No problem, pick your preferred sound."], "query": "Set alarm for 6:00 AM using it.", "rewrited_query": "Set alarm for 6:00 AM using content://media/ringtone16.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone16"}}, "unique_idx": "ACTION_SET_RINGTONE-1637-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Make my device ring with the sound at content://media/ringtone18. -> Consider it done. Your new ringtone is content://media/ringtone18.", "turn 2: What other ringtones do I have to choose from? -> Alright, select your new ringtone!"], "query": "Can you set it as my alarm at 06:30 AM?", "rewrited_query": "Can you set content://media/ringtone18 as my alarm at 06:30 AM?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "content://media/ringtone18"}}, "unique_idx": "ACTION_SET_RINGTONE-1638-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please change the phone's ringtone to content://media/ringtone20 at your earliest convenience. -> I've changed your ringtone to content://media/ringtone20.", "turn 2: Please, show me the available ringtones. -> Sure, select the new tone."], "query": "Set it as the alarm sound for 07:00 AM.", "rewrited_query": "Set content://media/ringtone20 as the alarm sound for 07:00 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone20"}}, "unique_idx": "ACTION_SET_RINGTONE-1639-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I'd appreciate it if you change my ringtone to content://media/ringtone13. -> You got it! The ringtone is now set to content://media/ringtone13.", "turn 2: Can I see other available ringtones? -> Please choose from the available ringtones."], "query": "Set an alarm at 10:00 AM with it.", "rewrited_query": "Set an alarm at 10:00 AM with content://media/ringtone13.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 10, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone13"}}, "unique_idx": "ACTION_SET_RINGTONE-1640-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: New ringtone alert: shift my ring tone to content://media/ringtone01. -> Affirmative, shifting the ringtone to content://media/ringtone01.", "turn 2: Show me other sounds that I can use. -> Pick another sound, please."], "query": "Set it for my 5:30 am alarm.", "rewrited_query": "Set content://media/ringtone01 for my 5:30 am alarm.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 5, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "content://media/ringtone01"}}, "unique_idx": "ACTION_SET_RINGTONE-1641-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Can you set my ringtone as content://media/ringtone05? -> Yes, the ringtone is now set to content://media/ringtone05.", "turn 2: I want to see some more ringtone options. -> Okay, please select a new sound."], "query": "Use it for an alarm at 6:15 AM.", "rewrited_query": "Use content://media/ringtone05 for an alarm at 6:15 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 15, "EXTRA_RINGTONE": "content://media/ringtone05"}}, "unique_idx": "ACTION_SET_RINGTONE-1642-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Update device sound, set ringtone to content://media/ringtone07. -> OK, I've updated your ringtone using content://media/ringtone07.", "turn 2: Can you show me other ringtones? -> Alright, select a different tone."], "query": "Set an alarm using it for 07:45 AM.", "rewrited_query": "Set an alarm using content://media/ringtone07 for 07:45 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 45, "EXTRA_RINGTONE": "content://media/ringtone07"}}, "unique_idx": "ACTION_SET_RINGTONE-1643-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I require that my call tone be updated to content://media/ringtone11. -> Your ringtone has been successfully changed to content://media/ringtone11.", "turn 2: Let me preview other options. -> Sure, please choose a ringtone from the list."], "query": "Set an alarm for 6:30 AM with it.", "rewrited_query": "Set an alarm for 6:30 AM with the ringtone from the list.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "from the list"}}, "unique_idx": "ACTION_SET_RINGTONE-1644-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Change the ringtone to use file content://media/ringtone02. -> I've changed your ringtone to content://media/ringtone02.", "turn 2: Show me some other ringtone options. -> Okay, you can browse through these ringtone options now."], "query": "Set an alarm for 8:00 AM using one of them.", "rewrited_query": "Set an alarm for 8:00 AM using one of ringtone options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "one of ringtone options"}}, "unique_idx": "ACTION_SET_RINGTONE-1645-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please assign the new call sound from content://media/ringtone15. -> No problem, setting your ringtone to content://media/ringtone15 now.", "turn 2: Okay, but can I see what other ringtones are available? -> Certainly, please select from the available ringtones."], "query": "Set an alarm for 7:00 AM with it as the alarm tone.", "rewrited_query": "Set an alarm for 7:00 AM with the available ringtones as the alarm tone.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "the available ringtones"}}, "unique_idx": "ACTION_SET_RINGTONE-1646-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Help me set a new ringtone by using the file content://media/ringtone19. -> Alright, your new ringtone is set to content://media/ringtone19.", "turn 2: Can I pick one myself? -> You got it. Here are some ringtone options for you to choose from."], "query": "Set an alarm for 9:00 AM and use one from there.", "rewrited_query": "Set an alarm for 9:00 AM and use one from ringtone options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 9, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "one from ringtone options"}}, "unique_idx": "ACTION_SET_RINGTONE-1647-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I want to use content://media/ringtone02 as my incoming call tone. -> Okay, using content://media/ringtone02 as your new ringtone.", "turn 2: But what others do you have? -> Alright, have a look at these options!"], "query": "Set an alarm for 10:00 AM with vibrate on, using one of them.", "rewrited_query": "Set an alarm for 10:00 AM with vibrate on, using one of these options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 10, "EXTRA_MINUTES": 0, "EXTRA_VIBRATE": true, "EXTRA_RINGTONE": "one of these options"}}, "unique_idx": "ACTION_SET_RINGTONE-1648-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please replace my ringtone with the track located at content://media/ringtone04 immediately. -> I've updated your ringtone to content://media/ringtone04.", "turn 2: Can you list other ringtones? -> Sure, here's a list of available ringtones for you to choose from."], "query": "Set an alarm for 11:00 AM using one of those.", "rewrited_query": "Set an alarm for 11:00 AM using one of the available ringtones.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 11, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "one of the available ringtones"}}, "unique_idx": "ACTION_SET_RINGTONE-1649-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set my new alert tone to content://media/ringtone05. -> Your ringtone has been successfully set to content://media/ringtone05.", "turn 2: Show me more ringtone choices. -> No problem, please check out these other ringtone options."], "query": "Set an alarm for 5:00 AM with one of them.", "rewrited_query": "Set an alarm for 5:00 AM with one of other ringtone options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 5, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "one of other ringtone options"}}, "unique_idx": "ACTION_SET_RINGTONE-1650-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Update my ringtone to content://media/ringtone06 since I'm tired of the old one. -> Okay, I've changed your ringtone to content://media/ringtone06.", "turn 2: Let me see the ringtone options. -> Sure thing, please select your new ringtone from the options below."], "query": "Set an alarm at 06:00 AM using one of them.", "rewrited_query": "Set an alarm at 06:00 AM using one of the options.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "one of the options"}}, "unique_idx": "ACTION_SET_RINGTONE-1651-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Could you assign content://media/ringtone07 as my ringtone for incoming calls? -> Successfully set your ringtone to content://media/ringtone07.", "turn 2: Show me other available tones. -> Of course, here are some other ringtones you might like."], "query": "Set the alarm at 08:00 AM and use one of them.", "rewrited_query": "Set the alarm at 08:00 AM and use one of other ringtones.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "one of other ringtones"}}, "unique_idx": "ACTION_SET_RINGTONE-1652-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Switch the ringtone of my device to content://media/ringtone08 now, please. -> OK, I've updated your ringtone to content://media/ringtone08.", "turn 2: Can you show me the list of other ringtones? -> No problem, here's a selection of other ringtones."], "query": "Set an alarm for 09:00 AM using one of the ringtones there.", "rewrited_query": "Set an alarm for 09:00 AM using one of the other ringtones.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 9, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "one of the other ringtones"}}, "unique_idx": "ACTION_SET_RINGTONE-1653-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Change the ringtone to use file content://media/ringtone02. -> I've changed your ringtone to content://media/ringtone02.", "turn 2: Show me some other ringtone options. -> Okay, you can browse through these ringtone options now."], "query": "Can you play it?", "rewrited_query": "Can you play content://media/ringtone02?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone02"}}, "unique_idx": "ACTION_SET_RINGTONE-1645-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please assign the new call sound from content://media/ringtone15. -> No problem, setting your ringtone to content://media/ringtone15 now.", "turn 2: Okay, but can I see what other ringtones are available? -> Certainly, please select from the available ringtones."], "query": "Let me listen to that.", "rewrited_query": "Let me listen to content://media/ringtone15.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone15"}}, "unique_idx": "ACTION_SET_RINGTONE-1646-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Help me set a new ringtone by using the file content://media/ringtone19. -> Alright, your new ringtone is set to content://media/ringtone19.", "turn 2: Can I pick one myself? -> You got it. Here are some ringtone options for you to choose from."], "query": "Can you let me hear that?", "rewrited_query": "Can you let me hear content://media/ringtone19?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone19"}}, "unique_idx": "ACTION_SET_RINGTONE-1647-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to use content://media/ringtone02 as my incoming call tone. -> Okay, using content://media/ringtone02 as your new ringtone.", "turn 2: But what others do you have? -> Alright, have a look at these options!"], "query": "Let's give it a listen.", "rewrited_query": "Let's give content://media/ringtone02 a listen.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone02"}}, "unique_idx": "ACTION_SET_RINGTONE-1648-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please replace my ringtone with the track located at content://media/ringtone04 immediately. -> I've updated your ringtone to content://media/ringtone04.", "turn 2: Can you list other ringtones? -> Sure, here's a list of available ringtones for you to choose from."], "query": "Can I audition it?", "rewrited_query": "Can I audition content://media/ringtone04?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone04"}}, "unique_idx": "ACTION_SET_RINGTONE-1649-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Set my new alert tone to content://media/ringtone05. -> Your ringtone has been successfully set to content://media/ringtone05.", "turn 2: Show me more ringtone choices. -> No problem, please check out these other ringtone options."], "query": "Play it for me.", "rewrited_query": "Play content://media/ringtone05 for me.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone05"}}, "unique_idx": "ACTION_SET_RINGTONE-1650-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Update my ringtone to content://media/ringtone06 since I'm tired of the old one. -> Okay, I've changed your ringtone to content://media/ringtone06.", "turn 2: Let me see the ringtone options. -> Sure thing, please select your new ringtone from the options below."], "query": "Can you play it?", "rewrited_query": "Can you play content://media/ringtone06?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone06"}}, "unique_idx": "ACTION_SET_RINGTONE-1651-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Could you assign content://media/ringtone07 as my ringtone for incoming calls? -> Successfully set your ringtone to content://media/ringtone07.", "turn 2: Show me other available tones. -> Of course, here are some other ringtones you might like."], "query": "Let me hear it now.", "rewrited_query": "Let me hear content://media/ringtone07 now.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone07"}}, "unique_idx": "ACTION_SET_RINGTONE-1652-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Switch the ringtone of my device to content://media/ringtone08 now, please. -> OK, I've updated your ringtone to content://media/ringtone08.", "turn 2: Can you show me the list of other ringtones? -> No problem, here's a selection of other ringtones."], "query": "Let's try playing that.", "rewrited_query": "Let's try playing content://media/ringtone08.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/ringtone08"}}, "unique_idx": "ACTION_SET_RINGTONE-1653-ACTION_GET_RINGTONE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Make the track found at content://media/ringtone09 my new ringtone. -> Your ringtone has been successfully changed to content://media/ringtone09.", "turn 2: Can I preview other options? -> Sure, take your time and pick a new ringtone."], "query": "Set an alarm for 6 AM using it.", "rewrited_query": "Set an alarm for 6 AM using content://media/ringtone09.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone09"}}, "unique_idx": "ACTION_SET_RINGTONE-1654-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I got a new ringtone at content://media/ringtone10, set it please. -> No problem, setting your ringtone to content://media/ringtone10 now.", "turn 2: Let me see what else is available. -> Here are some more ringtone options for you to choose from."], "query": "Use it for my 7:00 AM wake up alarm.", "rewrited_query": "Use content://media/ringtone10 for my 7:00 AM wake up alarm.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 0, "EXTRA_MESSAGE": "wake up", "EXTRA_RINGTONE": "content://media/ringtone10"}}, "unique_idx": "ACTION_SET_RINGTONE-1655-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set default ringtone as content://media/ringtone11 for all calls. -> Alright, I've set content://media/ringtone11 as your default ringtone.", "turn 2: Show me the ringtone options please. -> Okay, opening up the ringtone selector now."], "query": "Use it for the alarm I set for 12 PM.", "rewrited_query": "Use content://media/ringtone11 for the alarm I set for 12 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 12, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone11"}}, "unique_idx": "ACTION_SET_RINGTONE-1656-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please update my phone to play content://media/ringtone12 when someone calls. -> I've changed your ringtone. Now, content://media/ringtone12 will play when you get a call.", "turn 2: What other ringtones do you have? -> Here's the ringtone picker. Feel free to explore."], "query": "Set it as the ringtone for my 9 AM alarm.", "rewrited_query": "Set content://media/ringtone12 as the ringtone for my 9 AM alarm.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 9, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone12"}}, "unique_idx": "ACTION_SET_RINGTONE-1657-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Change the ringtone to the one at content://media/ringtone13. -> OK, the ringtone has been updated to content://media/ringtone13.", "turn 2: Could you list a few more ringtones for me to choose from? -> Displaying available ringtones."], "query": "Set it as the ringtone for an alarm at 10:30 AM.", "rewrited_query": "Set content://media/ringtone13 as the ringtone for an alarm at 10:30 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 10, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "content://media/ringtone13"}}, "unique_idx": "ACTION_SET_RINGTONE-1658-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I would like to change my call alert to content://media/ringtone14. -> Done! Your new call alert is content://media/ringtone14.", "turn 2: Can you open the ringtone picker? -> You got it. Here is the ringtone picker."], "query": "Use it for my 4 PM alarm.", "rewrited_query": "Use content://media/ringtone14 for my 4 PM alarm.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 16, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone14"}}, "unique_idx": "ACTION_SET_RINGTONE-1659-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Switch my ringtone, I prefer content://media/ringtone16. -> I've switched your ringtone to content://media/ringtone16 as requested.", "turn 2: Could you display other available options? -> Certainly, let me show you what's available. Please select your new ringtone."], "query": "Set it for my 7:15 AM alarm.", "rewrited_query": "Set content://media/ringtone16 for my 7:15 AM alarm.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 15, "EXTRA_RINGTONE": "content://media/ringtone16"}}, "unique_idx": "ACTION_SET_RINGTONE-1660-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I would like to have a new ringer sound at content://media/ringtone18. -> Setting your new ringer sound to content://media/ringtone18.", "turn 2: Show me other sounds. -> Here are a few other ringtones you can preview."], "query": "Set an alarm at 5 PM using it.", "rewrited_query": "Set an alarm at 5 PM using content://media/ringtone18.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 17, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone18"}}, "unique_idx": "ACTION_SET_RINGTONE-1661-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please use content://media/ringtone19 as my incoming call ringtone. -> Okay, I'll set your incoming call ringtone to content://media/ringtone19.", "turn 2: What other ringtones are there? -> Let's find you something new. Here's the ringtone selection screen."], "query": "Can you use it for my 8:30 AM alarm?", "rewrited_query": "Can you use content://media/ringtone19 for my 8:30 AM alarm?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 30, "EXTRA_RINGTONE": "content://media/ringtone19"}}, "unique_idx": "ACTION_SET_RINGTONE-1662-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Assign content://media/ringtone20 as my phone's ringtone as early as possible. -> Affirmative. The ringtone has been successfully set to content://media/ringtone20.", "turn 2: Can you show me the list of available ringtones? -> Sure, I can do that. Please choose a new ringtone."], "query": "Use it when my 11 AM alarm goes off.", "rewrited_query": "Use content://media/ringtone20 when my 11 AM alarm goes off.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 11, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "content://media/ringtone20"}}, "unique_idx": "ACTION_SET_RINGTONE-1663-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Alter my ring tone to content://media/ringtone19 as soon as you can. -> No problem, the ringtone is now set to content://media/ringtone19.", "turn 2: Show me different ringtones, please. -> Please choose from the available ringtones."], "query": "Set an alarm for 6 AM with one of those ringtones.", "rewrited_query": "Set an alarm for 6 AM with one of the ringtones from the available ringtones.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "available"}}, "unique_idx": "ACTION_SET_RINGTONE-1674-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Would you please enable content://media/ringtone20 as the ring sound for my calls? -> You got it! Your ringtone has been successfully changed to content://media/ringtone20.", "turn 2: Let me preview some ringtones. -> Okay, select a ringtone you would like to preview."], "query": "Set an alarm at 7:00 AM using one of them.", "rewrited_query": "Set an alarm at 7:00 AM using one of the ringtones from the selected ringtone you would like to preview.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "selected"}}, "unique_idx": "ACTION_SET_RINGTONE-1675-ACTION_GET_RINGTONE-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I would like to take a photo; open the still image camera for me. -> No problem, opening the still image camera.", "turn 2: Please take the picture. -> Taking the picture now."], "query": "Email it to support@company.com with the body 'Here is the photo'.", "rewrited_query": "Email the picture to support@company.com with the body 'Here is the photo'.", "answer": {"plan": "send_email", "arguments": {"to": "support@company.com", "body": "Here is the photo"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-814-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Activate the camera app in photo mode. -> Activating the camera app in photo mode now.", "turn 2: Take a picture now. -> Taking the picture."], "query": "Can you email that to sarah with no subject?", "rewrited_query": "Can you email the picture to sarah with no subject?", "answer": {"plan": "send_email", "arguments": {"to": "sarah"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-815-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Launch the device's still photo camera so I can capture an image. -> Launching the still photo camera to capture your image.", "turn 2: Okay, take the photo. -> I have taken the photo."], "query": "Send that to my boss with the subject 'urgent' and body 'please check'.", "rewrited_query": "Send the photo to my boss with the subject 'urgent' and body 'please check'.", "answer": {"plan": "send_email", "arguments": {"to": "my boss", "subject": "urgent", "body": "please check"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-816-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Start the photo taking application on my phone. -> Starting the photo taking application.", "turn 2: Capture a photo, please. -> Capturing the photo."], "query": "Email it to myself.", "rewrited_query": "Email the photo to myself.", "answer": {"plan": "send_email", "arguments": {"to": "myself"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-817-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Please open the still image camera – I need to snap a quick picture. -> Will do. Opening the still image camera for a quick snap.", "turn 2: Now, take the photo. -> I'm on it, taking the photo."], "query": "Email that to my friend.", "rewrited_query": "Email the photo to my friend.", "answer": {"plan": "send_email", "arguments": {"to": "my friend"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-818-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Could you initiate the camera for taking a still picture? -> Initiating the camera for a still picture.", "turn 2: Alright, capture a photo. -> Capturing the photo for you!"], "query": "Can you email it to jane.doe@example.com?", "rewrited_query": "Can you email the photo to jane.doe@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "jane.doe@example.com"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-819-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Fire up the photo camera app so I can take a shot. -> Firing up the photo camera app now!", "turn 2: Please capture the image. -> Capturing the image now."], "query": "Email that to my sister.", "rewrited_query": "Email the image to my sister.", "answer": {"plan": "send_email", "arguments": {"to": "my sister"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-820-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: I want to capture a moment—please open my device's still photo camera. -> Sure, opening the still image camera now.", "turn 2: Take a picture. -> Taking the picture now."], "query": "Email that to test@example.com.", "rewrited_query": "Email the picture to test@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "test@example.com"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-821-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Can you open my camera in photo mode? I need to click a picture. -> Alright, switching to photo mode and opening your camera.", "turn 2: Please take the photo. -> Photo taken! The URI is content://media/external/images/media/67890."], "query": "Show me that.", "rewrited_query": "Show me content://media/external/images/media/67890.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/67890"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-824-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Could you please start the still image camera app so I can take a photo? -> No problem, the still image camera app is now active.", "turn 2: Alright, capture an image. -> Captured! The image is saved at content://media/external/images/media/98765."], "query": "Can you open the image?", "rewrited_query": "Can you open content://media/external/images/media/98765?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/98765"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-825-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Launch my device's camera in photo mode, please. -> Photo mode activated! The camera app is now open.", "turn 2: Then, take the picture. -> Picture taken! You can find it here: content://com.google.android.apps.photos/local/image/123."], "query": "Open it up.", "rewrited_query": "Open content://com.google.android.apps.photos/local/image/123 up.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://com.google.android.apps.photos/local/image/123"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-826-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I need a shot; open up the still image camera on my phone. -> Opening your still image camera now. Get ready to shoot!", "turn 2: Shoot it. -> And... captured! The URI is: content://media/external/images/media/45678."], "query": "Could you show me the photo?", "rewrited_query": "Could you show me content://media/external/images/media/45678?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/45678"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-827-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Open the camera application in still image mode so I can take a clear photo. -> Certainly, opening the camera app in still image mode.", "turn 2: Capture the image. -> Image captured successfully! Saved to content://media/external/images/media/13579."], "query": "Let me see it.", "rewrited_query": "Let me see content://media/external/images/media/13579.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/13579"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-828-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please kick start the still image camera so I can capture a moment. -> Initiating the still image camera. Capture that moment!", "turn 2: Please take a photo now. -> Done! The photo is saved as content://downloads/public_downloads/123."], "query": "Display the photo.", "rewrited_query": "Display content://downloads/public_downloads/123.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://downloads/public_downloads/123"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-829-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I want to snap a picture; initiate the photo mode on my smartphone's camera. -> OK, starting the camera in photo mode.", "turn 2: Take a picture with the camera. -> Got it! The image has been saved to content://com.android.providers.media.documents/document/image%3A345."], "query": "Please display the picture.", "rewrited_query": "Please display content://com.android.providers.media.documents/document/image%3A345.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://com.android.providers.media.documents/document/image%3A345"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-830-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Could you open the photo-taking camera on my device? -> Okay, opening the camera for you to take photos!", "turn 2: Capture the image now. -> Captured! The image is located at content://media/external/images/media/54321."], "query": "Show the captured image.", "rewrited_query": "Show content://media/external/images/media/54321.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/54321"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-832-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Kick start the camera app so I can snap a high-quality image. -> Got it! Your camera is now ready to capture that high-quality image.", "turn 2: Can you snap the picture now? -> Snapping the picture! It's saved as content://com.android.providers.media.documents/document/image%3A1627."], "query": "Send it to John with the text 'Check this out'.", "rewrited_query": "Send content://com.android.providers.media.documents/document/image%3A1627 to John with the text 'Check this out'.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Check this out.", "attachments": ["content://com.android.providers.media.documents/document/image%3A1627"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-823-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Can you open my camera in photo mode? I need to click a picture. -> Alright, switching to photo mode and opening your camera.", "turn 2: Please take the photo. -> Photo taken! The URI is content://media/external/images/media/67890."], "query": "Text it to +15551234567 saying 'Just took this!'", "rewrited_query": "Text content://media/external/images/media/67890 to +15551234567 saying 'Just took this!'", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "Just took this!", "attachments": ["content://media/external/images/media/67890"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-824-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you please start the still image camera app so I can take a photo? -> No problem, the still image camera app is now active.", "turn 2: Alright, capture an image. -> Captured! The image is saved at content://media/external/images/media/98765."], "query": "Send that to my sister with the message 'How do you like this?'", "rewrited_query": "Send content://media/external/images/media/98765 to my sister with the message 'How do you like this?'", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "How do you like this?", "attachments": ["content://media/external/images/media/98765"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-825-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Launch my device's camera in photo mode, please. -> Photo mode activated! The camera app is now open.", "turn 2: Then, take the picture. -> Picture taken! You can find it here: content://com.google.android.apps.photos/local/image/123."], "query": "Can you send it to Mom with the message 'Look what I did today!'?", "rewrited_query": "Can you send content://com.google.android.apps.photos/local/image/123 to Mom with the message 'Look what I did today!'?", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "Look what I did today!", "attachments": ["content://com.google.android.apps.photos/local/image/123"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-826-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I need a shot; open up the still image camera on my phone. -> Opening your still image camera now. Get ready to shoot!", "turn 2: Shoot it. -> And... captured! The URI is: content://media/external/images/media/45678."], "query": "Send that to David with the message 'Guess where I am?'", "rewrited_query": "Send content://media/external/images/media/45678 to David with the message 'Guess where I am?'", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "Guess where I am?", "attachments": ["content://media/external/images/media/45678"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-827-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Open the camera application in still image mode so I can take a clear photo. -> Certainly, opening the camera app in still image mode.", "turn 2: Capture the image. -> Image captured successfully! Saved to content://media/external/images/media/13579."], "query": "Text it to my friend, Amy, saying 'I thought you'd like this.'", "rewrited_query": "Text content://media/external/images/media/13579 to my friend, Amy, saying 'I thought you'd like this.'", "answer": {"plan": "send_message", "arguments": {"to": "my friend, Amy", "message": "I thought you'd like this.", "attachments": ["content://media/external/images/media/13579"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-828-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please kick start the still image camera so I can capture a moment. -> Initiating the still image camera. Capture that moment!", "turn 2: Please take a photo now. -> Done! The photo is saved as content://downloads/public_downloads/123."], "query": "Send it in a message to my group chat saying 'New profile pic?'", "rewrited_query": "Send content://downloads/public_downloads/123 in a message to my group chat saying 'New profile pic?'", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "New profile pic?", "attachments": ["content://downloads/public_downloads/123"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-829-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I want to snap a picture; initiate the photo mode on my smartphone's camera. -> OK, starting the camera in photo mode.", "turn 2: Take a picture with the camera. -> Got it! The image has been saved to content://com.android.providers.media.documents/document/image%3A345."], "query": "Text it to Emily with the message 'Check out this photo I took today.'", "rewrited_query": "Text content://com.android.providers.media.documents/document/image%3A345 to Emily with the message 'Check out this photo I took today.'", "answer": {"plan": "send_message", "arguments": {"to": "Emily", "message": "Check out this photo I took today.", "attachments": ["content://com.android.providers.media.documents/document/image%3A345"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-830-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you open the photo-taking camera on my device? -> Okay, opening the camera for you to take photos!", "turn 2: Capture the image now. -> Captured! The image is located at content://media/external/images/media/54321."], "query": "Send that picture to my brother with caption 'What do you think?'", "rewrited_query": "Send content://media/external/images/media/54321 to my brother with caption 'What do you think?'", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "What do you think?", "attachments": ["content://media/external/images/media/54321"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-832-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Fire up the camera for still image capture now. -> Initiating the still image camera.", "turn 2: Can you snap a photo? -> Here is the URI of the saved photo: content://media/external/images/media/123"], "query": "Show me the saved photo.", "rewrited_query": "Show me content://media/external/images/media/123.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/123"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-834-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I need to capture a still photo; can you initiate the camera app for me? -> No problem, opening the camera app.", "turn 2: Alright, take the shot. -> Captured! The image is saved at content://com.android.providers.media.documents/document/image%3A456"], "query": "Can you display it?", "rewrited_query": "Can you display content://com.android.providers.media.documents/document/image%3A456?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://com.android.providers.media.documents/document/image%3A456"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-835-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Open the device's still photo camera so I can take a quick snapshot. -> Opening the still photo camera for you.", "turn 2: Ok, now snap the picture. -> Picture snapped! You can find it here: content://media/external/file/789"], "query": "Open it, please.", "rewrited_query": "Open content://media/external/file/789, please.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/file/789"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-836-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please load up the camera in still image mode. -> Loading the camera in still image mode now.", "turn 2: Go ahead and capture a photo. -> Got it! The photo's URI is: content://com.android.providers.media.documents/document/image%3A101"], "query": "Can you show me that photo?", "rewrited_query": "Can you show me content://com.android.providers.media.documents/document/image%3A101 photo?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://com.android.providers.media.documents/document/image%3A101", "mime_type": "image/*"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-837-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Could you fire up the still image camera so I can snap a quick shot? -> You got it! Firing up the still image camera.", "turn 2: Take the picture. -> Captured and saved. The URI is: content://media/external/images/media/112"], "query": "Display the captured image.", "rewrited_query": "Display content://media/external/images/media/112.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/112"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-840-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Kindly open my camera in still picture mode for a quick click. -> Alright, opening the camera in still picture mode.", "turn 2: Can you focus and take the picture? -> Alright, the image is captured! The URI is: content://com.android.providers.media.documents/document/image%3A123"], "query": "Show that.", "rewrited_query": "Show content://com.android.providers.media.documents/document/image%3A123.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://com.android.providers.media.documents/document/image%3A123"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-842-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I would like to take a still image. Activate my camera application, please. -> No problem, activating the camera for still images now.", "turn 2: Now, take a photo. -> Photo taken! It's saved at: content://media/external/file/456"], "query": "Open it up.", "rewrited_query": "Open content://media/external/file/456 up.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/file/456"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-843-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please launch the photo camera so I can capture a still image. -> Okay, launching the photo camera.", "turn 2: Snap a picture, please. -> Snapped! The image is located at content://media/external/images/media/789"], "query": "Show me the picture.", "rewrited_query": "Show me content://media/external/images/media/789 picture.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/789", "mime_type": "image/*"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-844-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Initiate the still picture mode on my smartphone's camera. -> Initiating the still picture mode now.", "turn 2: Please take a picture now. -> Picture taken. The URI is content://com.android.providers.media.documents/document/image%3A012"], "query": "Let me see it.", "rewrited_query": "Let me see content://com.android.providers.media.documents/document/image%3A012.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://com.android.providers.media.documents/document/image%3A012"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-845-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Open my camera app in still mode to capture a photo. -> Opening camera app in still mode.", "turn 2: Take a snapshot. -> Snapshot taken! It's saved at: content://media/external/file/345"], "query": "Display that snapshot.", "rewrited_query": "Display content://media/external/file/345 snapshot.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/file/345"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-846-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Fire up the camera for still image capture now. -> Initiating the still image camera.", "turn 2: Can you snap a photo? -> Here is the URI of the saved photo: content://media/external/images/media/123"], "query": "Email it to john.doe@example.com", "rewrited_query": "Email content://media/external/images/media/123 to john.doe@example.com", "answer": {"plan": "send_email", "arguments": {"to": "john.doe@example.com", "attachments": ["content://media/external/images/media/123"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-834-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Open the device's still photo camera so I can take a quick snapshot. -> Opening the still photo camera for you.", "turn 2: Ok, now snap the picture. -> Picture snapped! You can find it here: content://media/external/file/789"], "query": "Can you email it with the subject 'Here is the picture' to jane.doe@example.com?", "rewrited_query": "Can you email content://media/external/file/789 with the subject 'Here is the picture' to jane.doe@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "jane.doe@example.com", "subject": "Here is the picture", "attachments": ["content://media/external/file/789"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-836-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Please load up the camera in still image mode. -> Loading the camera in still image mode now.", "turn 2: Go ahead and capture a photo. -> Got it! The photo's URI is: content://com.android.providers.media.documents/document/image%3A101"], "query": "Send it to my mom at mom@example.com.", "rewrited_query": "Send content://com.android.providers.media.documents/document/image%3A101 to my mom at mom@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "mom@example.com", "attachments": ["content://com.android.providers.media.documents/document/image%3A101"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-837-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Could you fire up the still image camera so I can snap a quick shot? -> You got it! Firing up the still image camera.", "turn 2: Take the picture. -> Captured and saved. The URI is: content://media/external/images/media/112"], "query": "Email that to support@company.com.", "rewrited_query": "Email content://media/external/images/media/112 to support@company.com.", "answer": {"plan": "send_email", "arguments": {"to": "support@company.com", "attachments": ["content://media/external/images/media/112"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-840-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: I would like to take a still image. Activate my camera application, please. -> No problem, activating the camera for still images now.", "turn 2: Now, take a photo. -> Photo taken! It's saved at: content://media/external/file/456"], "query": "Email it to marketing team lead at lead@example.com.", "rewrited_query": "Email content://media/external/file/456 to marketing team lead at lead@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "lead@example.com", "attachments": ["content://media/external/file/456"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-843-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Initiate the still picture mode on my smartphone's camera. -> Initiating the still picture mode now.", "turn 2: Please take a picture now. -> Picture taken. The URI is content://com.android.providers.media.documents/document/image%3A012"], "query": "Email that with a body saying 'Here's the picture' to my client at client@email.com.", "rewrited_query": "Email content://com.android.providers.media.documents/document/image%3A012 with a body saying 'Here's the picture' to my client at client@email.com.", "answer": {"plan": "send_email", "arguments": {"to": "client@email.com", "body": "Here's the picture", "attachments": ["content://com.android.providers.media.documents/document/image%3A012"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-845-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Open my camera app in still mode to capture a photo. -> Opening camera app in still mode.", "turn 2: Take a snapshot. -> Snapshot taken! It's saved at: content://media/external/file/345"], "query": "Can you email it to my friend bob@example.com?", "rewrited_query": "Can you email content://media/external/file/345 to my friend bob@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "bob@example.com", "attachments": ["content://media/external/file/345"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-846-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Fire up the camera for still image capture now. -> Initiating the still image camera.", "turn 2: Can you snap a photo? -> Here is the URI of the saved photo: content://media/external/images/media/123"], "query": "Send it to John.", "rewrited_query": "Send content://media/external/images/media/123 to John.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "", "attachments": ["content://media/external/images/media/123"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-834-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I need to capture a still photo; can you initiate the camera app for me? -> No problem, opening the camera app.", "turn 2: Alright, take the shot. -> Captured! The image is saved at content://com.android.providers.media.documents/document/image%3A456"], "query": "Text it to Sarah with the message 'Here you go!'", "rewrited_query": "Text content://com.android.providers.media.documents/document/image%3A456 to Sarah with the message 'Here you go!'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Here you go!", "attachments": ["content://com.android.providers.media.documents/document/image%3A456"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-835-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Open the device's still photo camera so I can take a quick snapshot. -> Opening the still photo camera for you.", "turn 2: Ok, now snap the picture. -> Picture snapped! You can find it here: content://media/external/file/789"], "query": "Can you send it to my sister?", "rewrited_query": "Can you send content://media/external/file/789 to my sister?", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "", "attachments": ["content://media/external/file/789"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-836-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please load up the camera in still image mode. -> Loading the camera in still image mode now.", "turn 2: Go ahead and capture a photo. -> Got it! The photo's URI is: content://com.android.providers.media.documents/document/image%3A101"], "query": "Send it to +15551234567 with 'Check this out!'", "rewrited_query": "Send content://com.android.providers.media.documents/document/image%3A101 to +15551234567 with 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "Check this out!", "attachments": ["content://com.android.providers.media.documents/document/image%3A101"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-837-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you fire up the still image camera so I can snap a quick shot? -> You got it! Firing up the still image camera.", "turn 2: Take the picture. -> Captured and saved. The URI is: content://media/external/images/media/112"], "query": "Send it to my mom with the message 'Just took this!'", "rewrited_query": "Send content://media/external/images/media/112 to my mom with the message 'Just took this!'", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "Just took this!", "attachments": ["content://media/external/images/media/112"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-840-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly open my camera in still picture mode for a quick click. -> Alright, opening the camera in still picture mode.", "turn 2: Can you focus and take the picture? -> Alright, the image is captured! The URI is: content://com.android.providers.media.documents/document/image%3A123"], "query": "Send it to David, the message is 'Here is the picture.'", "rewrited_query": "Send content://com.android.providers.media.documents/document/image%3A123 to David, the message is 'Here is the picture.'", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "Here is the picture.", "attachments": ["content://com.android.providers.media.documents/document/image%3A123"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-842-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to take a still image. Activate my camera application, please. -> No problem, activating the camera for still images now.", "turn 2: Now, take a photo. -> Photo taken! It's saved at: content://media/external/file/456"], "query": "Text it to my friend with the message 'Look what I found!'", "rewrited_query": "Text content://media/external/file/456 to my friend with the message 'Look what I found!'", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "Look what I found!", "attachments": ["content://media/external/file/456"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-843-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please launch the photo camera so I can capture a still image. -> Okay, launching the photo camera.", "turn 2: Snap a picture, please. -> Snapped! The image is located at content://media/external/images/media/789"], "query": "Send it to 555-555-5555 saying 'I'm here!'", "rewrited_query": "Send content://media/external/images/media/789 to 555-555-5555 saying 'I'm here!'", "answer": {"plan": "send_message", "arguments": {"to": "555-555-5555", "message": "I'm here!", "attachments": ["content://media/external/images/media/789"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-844-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Initiate the still picture mode on my smartphone's camera. -> Initiating the still picture mode now.", "turn 2: Please take a picture now. -> Picture taken. The URI is content://com.android.providers.media.documents/document/image%3A012"], "query": "Text it to Bob.", "rewrited_query": "Text content://com.android.providers.media.documents/document/image%3A012 to Bob.", "answer": {"plan": "send_message", "arguments": {"to": "Bob", "message": "content://com.android.providers.media.documents/document/image%3A012"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-845-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Open my camera app in still mode to capture a photo. -> Opening camera app in still mode.", "turn 2: Take a snapshot. -> Snapshot taken! It's saved at: content://media/external/file/345"], "query": "Send it to my group chat.", "rewrited_query": "Send content://media/external/file/345 to my group chat.", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "content://media/external/file/345"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-846-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly bring up my camera for still image capture. -> Bringing up the camera for still image capture.", "turn 2: Capture a photo with the camera. -> Okay, capturing the photo now."], "query": "Email it to john.doe@example.com", "rewrited_query": "Email the photo to john.doe@example.com", "answer": {"plan": "send_email", "arguments": {"to": "john.doe@example.com"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-847-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: I need to take a still picture; please open the camera application. -> Got it, opening the camera app.", "turn 2: Alright, I'm ready to take the picture. -> Smile! Capturing the image."], "query": "Send that to support with the subject 'New issue'", "rewrited_query": "Send the image to support with the subject 'New issue'", "answer": {"plan": "send_email", "arguments": {"to": "support", "subject": "New issue"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-848-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Please switch on the still image camera so I can take a snapshot. -> Switching on the still image camera.", "turn 2: Please capture the image now. -> Taking the shot now."], "query": "Email it to my supervisor and add 'Important' as subject", "rewrited_query": "Email the image to my supervisor and add 'Important' as subject", "answer": {"plan": "send_email", "arguments": {"to": "my supervisor", "subject": "Important"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-849-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: I'd appreciate it if you could open the still capture camera app. -> Initiating the still image camera application now.", "turn 2: Can you take a photo with the still image camera application? -> Capturing the photo with the still image camera application."], "query": "Please email it to the team with 'urgent' subject", "rewrited_query": "Please email the photo to the team with 'urgent' subject", "answer": {"plan": "send_email", "arguments": {"to": "the team", "subject": "urgent"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-851-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Could you please bring up my still image mode so I can click a photo? -> Sure, launching the still image camera mode.", "turn 2: Please capture an image with the still image camera mode. -> Capturing image using still image camera mode."], "query": "Email it to jane.doe@example.com with body 'see attached'", "rewrited_query": "Email the image to jane.doe@example.com with body 'see attached'", "answer": {"plan": "send_email", "arguments": {"to": "jane.doe@example.com", "body": "see attached"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-853-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Start the camera for taking a photo in still mode, please. -> Starting the still image camera now.", "turn 2: Capture the current view. -> Capturing the current view now."], "query": "Send it to my mom with the body 'Just wanted to share!'", "rewrited_query": "Send the current view to my mom with the body 'Just wanted to share!'", "answer": {"plan": "send_email", "arguments": {"to": "my mom", "body": "Just wanted to share!"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-854-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: I want to take a quick still shot; get the camera app running. -> Firing up the camera for your still shot!", "turn 2: Okay, take the picture now. -> Got it, capturing now!"], "query": "Now email that to the product team", "rewrited_query": "Now email the picture to the product team", "answer": {"plan": "send_email", "arguments": {"to": "the product team"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-855-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Please open the picture-taking mode in my camera for a still image. -> Opening the still image capture mode.", "turn 2: Could you capture a photo with the picture-taking mode in my camera? -> Taking a photo with the picture-taking mode."], "query": "Send it to bob@example.com", "rewrited_query": "Send the photo to bob@example.com", "answer": {"plan": "send_email", "arguments": {"to": "bob@example.com"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-856-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Could you activate my camera to click a still photo? -> Activating the still image camera.", "turn 2: Take a picture with the still image camera now. -> Snapping the picture with the still image camera!"], "query": "Send that via email to the group.", "rewrited_query": "Send the picture via email to the group.", "answer": {"plan": "send_email", "arguments": {"to": "the group"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-858-ACTION_IMAGE_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Kindly bring up my camera for still image capture. -> Bringing up the camera for still image capture.", "turn 2: Capture a photo with the camera. -> Okay, capturing the photo now."], "query": "Text that to my sister.", "rewrited_query": "Text Okay, capturing the photo now. to my sister.", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "Okay, capturing the photo now."}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-847-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I need to take a still picture; please open the camera application. -> Got it, opening the camera app.", "turn 2: Alright, I'm ready to take the picture. -> Smile! Capturing the image."], "query": "Send it to John and tell him 'Here is the picture I promised'.", "rewrited_query": "Send Smile! Capturing the image. to John and tell him 'Here is the picture I promised'.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Smile! Capturing the image. Here is the picture I promised"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-848-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please switch on the still image camera so I can take a snapshot. -> Switching on the still image camera.", "turn 2: Please capture the image now. -> Taking the shot now."], "query": "Send that to my mom with the message 'I love you'.", "rewrited_query": "Send Taking the shot now. to my mom with the message 'I love you'.", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "Taking the shot now. I love you"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-849-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Activate the still image camera mode on my phone, please. -> Activating the still image camera mode.", "turn 2: Okay, take the picture. -> Picture taken!"], "query": "Send it to 555-123-4567 saying 'Just took this!'", "rewrited_query": "Send Picture taken! to 555-123-4567 saying 'Just took this!'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Picture taken! Just took this!"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-850-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I'd appreciate it if you could open the still capture camera app. -> Initiating the still image camera application now.", "turn 2: Can you take a photo with the still image camera application? -> Capturing the photo with the still image camera application."], "query": "Text it to the group chat 'Family Fun'.", "rewrited_query": "Text Capturing the photo with the still image camera application. to the group chat 'Family Fun'.", "answer": {"plan": "send_message", "arguments": {"to": "Family Fun", "message": "Capturing the photo with the still image camera application."}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-851-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you please bring up my still image mode so I can click a photo? -> Sure, launching the still image camera mode.", "turn 2: Please capture an image with the still image camera mode. -> Capturing image using still image camera mode."], "query": "Send it to Sarah and tell her 'Check this out!'", "rewrited_query": "Send Capturing image using still image camera mode. to Sarah and tell her 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Capturing image using still image camera mode. Check this out!"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-853-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Start the camera for taking a photo in still mode, please. -> Starting the still image camera now.", "turn 2: Capture the current view. -> Capturing the current view now."], "query": "Send that via text to David with the message 'Wish you were here!'", "rewrited_query": "Send Capturing the current view now. via text to David with the message 'Wish you were here!'", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "Capturing the current view now. Wish you were here!"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-854-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please open the picture-taking mode in my camera for a still image. -> Opening the still image capture mode.", "turn 2: Could you capture a photo with the picture-taking mode in my camera? -> Taking a photo with the picture-taking mode."], "query": "Send that to my friend Alex.", "rewrited_query": "Send Taking a photo with the picture-taking mode. to my friend Alex.", "answer": {"plan": "send_message", "arguments": {"to": "Alex", "message": "Taking a photo with the picture-taking mode."}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-856-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you activate my camera to click a still photo? -> Activating the still image camera.", "turn 2: Take a picture with the still image camera now. -> Snapping the picture with the still image camera!"], "query": "Send it to the work group chat with the message 'Update on the project'.", "rewrited_query": "Send Snapping the picture with the still image camera! to the work group chat with the message 'Update on the project'.", "answer": {"plan": "send_message", "arguments": {"to": "the work group chat", "message": "Update on the project. Snapping the picture with the still image camera!"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-858-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Open my camera's still image mode immediately so I can snap a photo. -> Immediately opening your camera in still image mode.", "turn 2: Take the photo. -> Captured! The image is saved at content://media/external/images/media/123."], "query": "Show me that image.", "rewrited_query": "Show me content://media/external/images/media/123 image.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/images/media/123"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-860-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Would you please power up the camera for a still photo session? -> Firing up the still image camera now!", "turn 2: Can you snap a picture? -> Picture taken! You can find it at content://com.android.providers.media.documents/document/image%3A456."], "query": "Can I see it now?", "rewrited_query": "Can I see content://com.android.providers.media.documents/document/image%3A456 now?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://com.android.providers.media.documents/document/image%3A456"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-861-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Kindly initialize the still photo camera on my smartphone. -> Okay, initializing the still photo camera.", "turn 2: Take a photo with the still photo camera. -> Got it! Photo saved to content://camera/external/images/789."], "query": "Display it for me.", "rewrited_query": "Display content://camera/external/images/789 for me.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://camera/external/images/789"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-862-ACTION_IMAGE_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Open my camera's still image mode immediately so I can snap a photo. -> Immediately opening your camera in still image mode.", "turn 2: Take the photo. -> Captured! The image is saved at content://media/external/images/media/123."], "query": "Send it to John with the message 'Here's the photo I took.'", "rewrited_query": "Send content://media/external/images/media/123 to John with the message 'Here's the photo I took.'", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Here's the photo I took.", "attachments": ["content://media/external/images/media/123"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-860-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Would you please power up the camera for a still photo session? -> Firing up the still image camera now!", "turn 2: Can you snap a picture? -> Picture taken! You can find it at content://com.android.providers.media.documents/document/image%3A456."], "query": "Text it to my mom with the message: I wanted to share this with you.", "rewrited_query": "Text content://com.android.providers.media.documents/document/image%3A456 to my mom with the message: I wanted to share this with you.", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "I wanted to share this with you.", "attachments": ["content://com.android.providers.media.documents/document/image%3A456"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-861-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly initialize the still photo camera on my smartphone. -> Okay, initializing the still photo camera.", "turn 2: Take a photo with the still photo camera. -> Got it! Photo saved to content://camera/external/images/789."], "query": "Send that to my brother with the text 'Check this out!'", "rewrited_query": "Send content://camera/external/images/789 to my brother with the text 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "Check this out!", "attachments": ["content://camera/external/images/789"]}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-862-ACTION_IMAGE_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please initiate a call to 800-555-1212. -> Initiating call to 800-555-1212.", "turn 2: Create a new contact for 800-555-1212 number. -> Alright, new contact creation is initiated for number 800-555-1212. Please provide a contact name."], "query": "Then call that number.", "rewrited_query": "Then call 800-555-1212.", "answer": {"plan": "dial", "arguments": {"phone_number": "800-555-1212"}}, "unique_idx": "dial-916-ACTION_INSERT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Could you connect the call for me using 212-555-0198? -> Connecting you to 212-555-0198.", "turn 2: Please add 212-555-0198 to my contacts. -> Okay, I'm creating a new contact with the number 212-555-0198. You can now add a name and any other details."], "query": "Once it's saved, dial it for me.", "rewrited_query": "Once 212-555-0198 is saved, dial 212-555-0198 for me.", "answer": {"plan": "dial", "arguments": {"phone_number": "212-555-0198"}}, "unique_idx": "dial-917-ACTION_INSERT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Dial the number 010-1234-5678, please. -> Dialing 010-1234-5678.", "turn 2: Save 010-1234-5678 as a new contact. -> Creating a new contact for 010-1234-5678. Please input the contact's name to proceed."], "query": "Call that number", "rewrited_query": "Call 010-1234-5678", "answer": {"plan": "dial", "arguments": {"phone_number": "010-1234-5678"}}, "unique_idx": "dial-918-ACTION_INSERT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I need to speak with someone; please call 9876543210. -> Calling 9876543210 to connect you.", "turn 2: Add 9876543210 to my contacts as a new entry. -> No problem, I will add 9876543210 to your contacts. Please provide the contact name."], "query": "Dial this number now.", "rewrited_query": "Dial 9876543210 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "9876543210"}}, "unique_idx": "dial-919-ACTION_INSERT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Can you help me by dialing +1-234-567-8901? -> Sure, dialing +1-234-567-8901.", "turn 2: Can you save +1-234-567-8901 as contact? -> Sure, saving +1-234-567-8901 to contacts. What name would you like to save it under?"], "query": "After saving it, please call it for me.", "rewrited_query": "After saving +1-234-567-8901, please call +1-234-567-8901 for me.", "answer": {"plan": "dial", "arguments": {"phone_number": "+1-234-567-8901"}}, "unique_idx": "dial-920-ACTION_INSERT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Place a telephone call to 020-7946-0018, please. -> Placing a call to 020-7946-0018.", "turn 2: Add 020-7946-0018 to my contacts. -> I'm creating a new contact. The number 020-7946-0018 has been pre-filled. What is the contact's name?"], "query": "Okay, dial that.", "rewrited_query": "Okay, dial 020-7946-0018.", "answer": {"plan": "dial", "arguments": {"phone_number": "020-7946-0018"}}, "unique_idx": "dial-921-ACTION_INSERT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I need to dial the number 555-1234 right now. -> Okay, dialing 555-1234 for you.", "turn 2: Can you save 555-1234 as a new contact? -> Sure, I'll create a new contact entry for 555-1234. Please enter the contact's name."], "query": "Text that number: 'Hi, this is [Your Name].'", "rewrited_query": "Text 555-1234: 'Hi, this is [Your Name].'", "answer": {"plan": "send_message", "arguments": {"to": "555-1234", "message": "Hi, this is [Your Name]."}}, "unique_idx": "dial-915-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please initiate a call to 800-555-1212. -> Initiating call to 800-555-1212.", "turn 2: Create a new contact for 800-555-1212 number. -> Alright, new contact creation is initiated for number 800-555-1212. Please provide a contact name."], "query": "Send a text to that number saying, 'Just saved your contact!'", "rewrited_query": "Send a text to 800-555-1212 saying, 'Just saved your contact!'", "answer": {"plan": "send_message", "arguments": {"to": "800-555-1212", "message": "Just saved your contact!"}}, "unique_idx": "dial-916-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you connect the call for me using 212-555-0198? -> Connecting you to 212-555-0198.", "turn 2: Please add 212-555-0198 to my contacts. -> Okay, I'm creating a new contact with the number 212-555-0198. You can now add a name and any other details."], "query": "Text that number 'This is [Your Name]'", "rewrited_query": "Text 212-555-0198 'This is [Your Name]'", "answer": {"plan": "send_message", "arguments": {"to": "212-555-0198", "message": "This is [Your Name]"}}, "unique_idx": "dial-917-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Dial the number 010-1234-5678, please. -> Dialing 010-1234-5678.", "turn 2: Save 010-1234-5678 as a new contact. -> Creating a new contact for 010-1234-5678. Please input the contact's name to proceed."], "query": "Send that number a message saying 'Hi, it's me'", "rewrited_query": "Send 010-1234-5678 a message saying 'Hi, it's me'", "answer": {"plan": "send_message", "arguments": {"to": "010-1234-5678", "message": "Hi, it's me"}}, "unique_idx": "dial-918-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to speak with someone; please call 9876543210. -> Calling 9876543210 to connect you.", "turn 2: Add 9876543210 to my contacts as a new entry. -> No problem, I will add 9876543210 to your contacts. Please provide the contact name."], "query": "Send a message to that number with the text 'Hello, it's [Your Name]'", "rewrited_query": "Send a message to 9876543210 with the text 'Hello, it's [Your Name]'", "answer": {"plan": "send_message", "arguments": {"to": "9876543210", "message": "Hello, it's [Your Name]"}}, "unique_idx": "dial-919-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you help me by dialing +1-234-567-8901? -> Sure, dialing +1-234-567-8901.", "turn 2: Can you save +1-234-567-8901 as contact? -> Sure, saving +1-234-567-8901 to contacts. What name would you like to save it under?"], "query": "Send a text to that number 'Hi, this is [Your Name].'", "rewrited_query": "Send a text to +1-234-567-8901 'Hi, this is [Your Name].'", "answer": {"plan": "send_message", "arguments": {"to": "+1-234-567-8901", "message": "Hi, this is [Your Name]."}}, "unique_idx": "dial-920-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Place a telephone call to 020-7946-0018, please. -> Placing a call to 020-7946-0018.", "turn 2: Add 020-7946-0018 to my contacts. -> I'm creating a new contact. The number 020-7946-0018 has been pre-filled. What is the contact's name?"], "query": "Send that number a text 'Hi from [Your Name]!'", "rewrited_query": "Send 020-7946-0018 a text 'Hi from [Your Name]!'", "answer": {"plan": "send_message", "arguments": {"to": "020-7946-0018", "message": "Hi from [Your Name]!"}}, "unique_idx": "dial-921-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to access my latest call history. Can you pull it up? -> Sure, retrieving your call history now: Mom (Incoming) - Today, 8:00 AM; Work +1-222-333-4444 (Outgoing) - Yesterday, 4:00 PM; Unknown Number +1-999-888-7777 (Missed) - 2 days ago, 1:00 PM.", "turn 2: Save the unknown number +1-999-888-7777 as a new contact. -> Adding the unknown number +1-999-888-7777 as a new contact named 'unknown'. You can edit additional details now."], "query": "Send the unknown number a text message saying, 'Hello, this is [Your Name].'", "rewrited_query": "Send the unknown number +1-999-888-7777 a text message saying, 'Hello, this is [Your Name].'", "answer": {"plan": "send_message", "arguments": {"to": "+1-999-888-7777", "message": "Hello, this is [Your Name]."}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1975-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to dial the number 555-1234 right now. -> Okay, dialing 555-1234 for you.", "turn 2: Can you save 555-1234 as a new contact? -> Sure, I'll create a new contact entry for 555-1234. Please enter the contact's name."], "query": "Look up that number's location.", "rewrited_query": "Look up the number 555-1234's location.", "answer": {"plan": "search_location", "arguments": {"query": "555-1234"}}, "unique_idx": "dial-915-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please initiate a call to 800-555-1212. -> Initiating call to 800-555-1212.", "turn 2: Create a new contact for 800-555-1212 number. -> Alright, new contact creation is initiated for number 800-555-1212. Please provide a contact name."], "query": "Search for that number's address.", "rewrited_query": "Search for the number 800-555-1212's address.", "answer": {"plan": "search_location", "arguments": {"query": "800-555-1212"}}, "unique_idx": "dial-916-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Could you connect the call for me using 212-555-0198? -> Connecting you to 212-555-0198.", "turn 2: Please add 212-555-0198 to my contacts. -> Okay, I'm creating a new contact with the number 212-555-0198. You can now add a name and any other details."], "query": "Can you search for that number location?", "rewrited_query": "Can you search for the number 212-555-0198 location?", "answer": {"plan": "search_location", "arguments": {"query": "212-555-0198"}}, "unique_idx": "dial-917-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Dial the number 010-1234-5678, please. -> Dialing 010-1234-5678.", "turn 2: Save 010-1234-5678 as a new contact. -> Creating a new contact for 010-1234-5678. Please input the contact's name to proceed."], "query": "Find the address of that number.", "rewrited_query": "Find the address of the number 010-1234-5678.", "answer": {"plan": "search_location", "arguments": {"query": "010-1234-5678"}}, "unique_idx": "dial-918-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to speak with someone; please call 9876543210. -> Calling 9876543210 to connect you.", "turn 2: Add 9876543210 to my contacts as a new entry. -> No problem, I will add 9876543210 to your contacts. Please provide the contact name."], "query": "Find that contact on the map", "rewrited_query": "Find the contact 9876543210 on the map", "answer": {"plan": "search_location", "arguments": {"query": "9876543210"}}, "unique_idx": "dial-919-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you help me by dialing +1-234-567-8901? -> Sure, dialing +1-234-567-8901.", "turn 2: Can you save +1-234-567-8901 as contact? -> Sure, saving +1-234-567-8901 to contacts. What name would you like to save it under?"], "query": "Check that number's location.", "rewrited_query": "Check the number +1-234-567-8901's location.", "answer": {"plan": "search_location", "arguments": {"query": "+1-234-567-8901"}}, "unique_idx": "dial-920-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Place a telephone call to 020-7946-0018, please. -> Placing a call to 020-7946-0018.", "turn 2: Add 020-7946-0018 to my contacts. -> I'm creating a new contact. The number 020-7946-0018 has been pre-filled. What is the contact's name?"], "query": "Search location with that number.", "rewrited_query": "Search location with the number 020-7946-0018.", "answer": {"plan": "search_location", "arguments": {"query": "020-7946-0018"}}, "unique_idx": "dial-921-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to access my latest call history. Can you pull it up? -> Sure, retrieving your call history now: Mom (Incoming) - Today, 8:00 AM; Work +1-222-333-4444 (Outgoing) - Yesterday, 4:00 PM; Unknown Number +1-999-888-7777 (Missed) - 2 days ago, 1:00 PM.", "turn 2: Save the unknown number +1-999-888-7777 as a new contact. -> Adding the unknown number +1-999-888-7777 as a new contact named 'unknown'. You can edit additional details now."], "query": "Search for the location of that contact.", "rewrited_query": "Search for the location of the contact +1-999-888-7777.", "answer": {"plan": "search_location", "arguments": {"query": "+1-999-888-7777"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1975-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Display the recent calls on my phone, including missed, answered, and outgoing calls. -> Here's your recent call log: Dad +1-111-222-3333 (Incoming) - Today at 11:00 AM; Pizza Place +1-444-555-6666 (Outgoing) - Yesterday at 7:00 PM; Blocked Number (Missed) - 2 days ago at 3:00 PM.", "turn 2: Add Pizza Place number +1-444-555-6666 to contacts -> Okay, I'm opening the contact creation screen with the name 'Pizza Place' and number +1-444-555-6666. Please confirm the details to save."], "query": "Then dial that number", "rewrited_query": "Then dial number +1-444-555-6666", "answer": {"plan": "dial", "arguments": {"phone_number": "+1-444-555-6666"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1976-ACTION_INSERT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Show my phone's call log from today and yesterday. -> Displaying call log: Doctor's Office +1-777-888-9999 (Outgoing) - Today at 9:00 AM; Friend +1-000-111-2222 (Incoming) - Yesterday at 5:00 PM.", "turn 2: Can you save Doctor's Office's number +1-777-888-9999? -> Sure, I'm creating a new contact for 'Doctor's Office' with the number +1-777-888-9999. Please review and save."], "query": "Call them now.", "rewrited_query": "Call +1-777-888-9999 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "+1-777-888-9999"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1977-ACTION_INSERT_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Display the recent calls on my phone, including missed, answered, and outgoing calls. -> Here's your recent call log: Dad +1-111-222-3333 (Incoming) - Today at 11:00 AM; Pizza Place +1-444-555-6666 (Outgoing) - Yesterday at 7:00 PM; Blocked Number (Missed) - 2 days ago at 3:00 PM.", "turn 2: Add Pizza Place number +1-444-555-6666 to contacts -> Okay, I'm opening the contact creation screen with the name 'Pizza Place' and number +1-444-555-6666. Please confirm the details to save."], "query": "Send them a text saying 'We will be there in 30 minutes!'", "rewrited_query": "Send +1-444-555-6666 a text saying 'We will be there in 30 minutes!'", "answer": {"plan": "send_message", "arguments": {"to": "+1-444-555-6666", "message": "We will be there in 30 minutes!"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1976-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Show my phone's call log from today and yesterday. -> Displaying call log: Doctor's Office +1-777-888-9999 (Outgoing) - Today at 9:00 AM; Friend +1-000-111-2222 (Incoming) - Yesterday at 5:00 PM.", "turn 2: Can you save Doctor's Office's number +1-777-888-9999? -> Sure, I'm creating a new contact for 'Doctor's Office' with the number +1-777-888-9999. Please review and save."], "query": "Send them a text that says 'Thank you for your service'", "rewrited_query": "Send +1-777-888-9999 a text that says 'Thank you for your service'", "answer": {"plan": "send_message", "arguments": {"to": "+1-777-888-9999", "message": "Thank you for your service"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1977-ACTION_INSERT_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Display the recent calls on my phone, including missed, answered, and outgoing calls. -> Here's your recent call log: Dad +1-111-222-3333 (Incoming) - Today at 11:00 AM; Pizza Place +1-444-555-6666 (Outgoing) - Yesterday at 7:00 PM; Blocked Number (Missed) - 2 days ago at 3:00 PM.", "turn 2: Add Pizza Place number +1-444-555-6666 to contacts -> Okay, I'm opening the contact creation screen with the name 'Pizza Place' and number +1-444-555-6666. Please confirm the details to save."], "query": "Can you find that place on the map?", "rewrited_query": "Can you find Pizza Place on the map?", "answer": {"plan": "search_location", "arguments": {"query": "Pizza Place"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1976-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show my phone's call log from today and yesterday. -> Displaying call log: Doctor's Office +1-777-888-9999 (Outgoing) - Today at 9:00 AM; Friend +1-000-111-2222 (Incoming) - Yesterday at 5:00 PM.", "turn 2: Can you save Doctor's Office's number +1-777-888-9999? -> Sure, I'm creating a new contact for 'Doctor's Office' with the number +1-777-888-9999. Please review and save."], "query": "Where is that located?", "rewrited_query": "Where is Doctor's Office located?", "answer": {"plan": "search_location", "arguments": {"query": "Doctor's Office"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1977-ACTION_INSERT_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please track down the location of the Anne Frank House in Amsterdam. -> Sure, I'm locating the Anne Frank House in Amsterdam for you.", "turn 2: Set up a calendar event to visit the Anne Frank House in Amsterdam on July 1st at 10 AM for 2 hours, titled Anne Frank Visit. -> Alright, 'Anne Frank Visit' has been added to your calendar for July 1st at 10 AM at the Anne Frank House in Amsterdam, lasting 2 hours. The URI is content://calender/event/2"], "query": "Can you find it on the map?", "rewrited_query": "Can you find the Anne Frank House in Amsterdam on the map?", "answer": {"plan": "search_location", "arguments": {"query": "Anne Frank House in Amsterdam"}}, "unique_idx": "search_location-1193-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: Could you help me find 500 Main Street in Los Angeles? -> I will find 500 Main Street in Los Angeles for you now.", "turn 2: Let's schedule a meeting at 500 Main Street in Los Angeles next Monday at 3 PM. Call it 'Meeting at 500 Main'. It will last 1 hour, and the description is 'Project Discussion'. -> OK, 'Meeting at 500 Main' has been added to your calendar for next Monday at 3 PM at 500 Main Street in Los Angeles. Duration: 1 hour. Description: Project Discussion. The URI is content://calender/event/3."], "query": "Show me where that is.", "rewrited_query": "Show me where 500 Main Street in Los Angeles is.", "answer": {"plan": "search_location", "arguments": {"query": "500 Main Street in Los Angeles"}}, "unique_idx": "search_location-1194-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: I'm looking for the location of the Metro Center station in Washington, D.C. Please search it. -> Searching for the Metro Center station in Washington, D.C...", "turn 2: Create a calendar event for a commute at the Metro Center station in Washington, D.C. next Tuesday at 8 AM, with a duration of 30 minutes. Title it 'Morning Commute'. -> I've added 'Morning Commute' to your calendar for next Tuesday at 8 AM at the Metro Center station in Washington, D.C., lasting 30 minutes. The URI is content://calender/event/4"], "query": "Where is that located?", "rewrited_query": "Where is the Metro Center station in Washington, D.C. located?", "answer": {"plan": "search_location", "arguments": {"query": "Metro Center station in Washington, D.C."}}, "unique_idx": "search_location-1195-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: Search for the University of Oxford on the map. -> Alright, pinpointing the University of Oxford on the map.", "turn 2: Add a 'Visit Oxford' event at the University of Oxford next Friday at 11 AM, lasting 4 hours, with the description 'Campus Tour'. -> Okay, I've scheduled 'Visit Oxford' at the University of Oxford for next Friday at 11 AM. It will last 4 hours and the description is 'Campus Tour'. The URI is content://calender/event/5."], "query": "Can you show me the location of it?", "rewrited_query": "Can you show me the location of the University of Oxford?", "answer": {"plan": "search_location", "arguments": {"query": "University of Oxford"}}, "unique_idx": "search_location-1196-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: Find the location of Westminster Abbey in London. -> I'm on it! Locating Westminster Abbey in London.", "turn 2: Set up a visit at Westminster Abbey in London next month on the 15th at 9 AM for 3 hours, naming it 'Westminster Abbey Tour'. -> 'Westminster Abbey Tour' is scheduled for next month on the 15th at 9 AM for 3 hours at Westminster Abbey in London. The URI is content://calender/event/6"], "query": "Let me see that on the map.", "rewrited_query": "Let me see Westminster Abbey in London on the map.", "answer": {"plan": "search_location", "arguments": {"query": "Westminster Abbey in London"}}, "unique_idx": "search_location-1197-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: I'd like to see where Central Station in Sydney is located. -> Let me show you where Central Station is in Sydney.", "turn 2: Schedule a 'Train Commute' event at Central Station in Sydney for next Wednesday at 7:30 AM, lasting 45 minutes. -> Got it. 'Train Commute' is scheduled for next Wednesday at 7:30 AM at Central Station in Sydney, lasting 45 minutes. The URI is content://calender/event/7"], "query": "Show me the location.", "rewrited_query": "Show me the location of Central Station in Sydney.", "answer": {"plan": "search_location", "arguments": {"query": "Central Station in Sydney"}}, "unique_idx": "search_location-1198-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: Please search the address for 100 King Street, Toronto. -> I am searching for 100 King Street, Toronto.", "turn 2: Create an event at 100 King Street, Toronto this Thursday at 1 PM for 2 hours, called 'Meeting at King Street'. -> Confirmed. 'Meeting at King Street' has been created for this Thursday at 1 PM at 100 King Street, Toronto, lasting 2 hours. The URI is content://calender/event/8"], "query": "Can you show it to me on the map?", "rewrited_query": "Can you show 100 King Street, Toronto to me on the map?", "answer": {"plan": "search_location", "arguments": {"query": "100 King Street, Toronto"}}, "unique_idx": "search_location-1199-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you locate the Space Needle in Seattle? -> Yes, I can locate the Space Needle in Seattle for you.", "turn 2: Add a 'Space Needle Visit' event at the Space Needle in Seattle for this Sunday at 10 AM, lasting 3 hours. The description is 'Family Outing'. -> OK, I've added 'Space Needle Visit' to your calendar for this Sunday at 10 AM at the Space Needle in Seattle, lasting 3 hours. Description: Family Outing. The URI is content://calender/event/9."], "query": "Where is that?", "rewrited_query": "Where is the Space Needle in Seattle?", "answer": {"plan": "search_location", "arguments": {"query": "Space Needle in Seattle"}}, "unique_idx": "search_location-1200-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: I need the map location for the Royal Palace of Madrid. -> Sure, I will pull up the map location for the Royal Palace of Madrid.", "turn 2: Create an event to visit the Royal Palace of Madrid next Tuesday at 2 PM for 4 hours, called 'Palace Tour'. -> No problem. 'Palace Tour' is scheduled for next Tuesday at 2 PM at the Royal Palace of Madrid, lasting 4 hours. The URI is content://calender/event/10"], "query": "Find that on the map for me, please.", "rewrited_query": "Find the Royal Palace of Madrid on the map for me, please.", "answer": {"plan": "search_location", "arguments": {"query": "Royal Palace of Madrid"}}, "unique_idx": "search_location-1201-ACTION_INSERT_EVENT-1-search_location-1"}
{"conversation_history": ["turn 1: I'm looking for the location of the Metro Center station in Washington, D.C. Please search it. -> Searching for the Metro Center station in Washington, D.C...", "turn 2: Create a calendar event for a commute at the Metro Center station in Washington, D.C. next Tuesday at 8 AM, with a duration of 30 minutes. Title it 'Morning Commute'. -> I've added 'Morning Commute' to your calendar for next Tuesday at 8 AM at the Metro Center station in Washington, D.C., lasting 30 minutes. The URI is content://calender/event/4"], "query": "Email it to schedule@example.com, please.", "rewrited_query": "Email next tuesday Morning Commute to schedule@example.com, please.", "answer": {"plan": "send_email", "arguments": {"to": "schedule@example.com", "body": "next tuesday Morning Commute"}}, "unique_idx": "search_location-1195-ACTION_INSERT_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Search for the University of Oxford on the map. -> Alright, pinpointing the University of Oxford on the map.", "turn 2: Add a 'Visit Oxford' event at the University of Oxford next Friday at 11 AM, lasting 4 hours, with the description 'Campus Tour'. -> Okay, I've scheduled 'Visit Oxford' at the University of Oxford for next Friday at 11 AM. It will last 4 hours and the description is 'Campus Tour'. The URI is content://calender/event/5."], "query": "Send the details to my friend at friend@example.com.", "rewrited_query": "Send the next friday Visit Oxford at the University of Oxford for next Friday at 11 AM. It will last 4 hours and the description is Campus Tour details to my friend at friend@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "friend@example.com", "body": "the next friday Visit Oxford at the University of Oxford for next Friday at 11 AM. It will last 4 hours and the description is Campus Tour details"}}, "unique_idx": "search_location-1196-ACTION_INSERT_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Find the location of Westminster Abbey in London. -> I'm on it! Locating Westminster Abbey in London.", "turn 2: Set up a visit at Westminster Abbey in London next month on the 15th at 9 AM for 3 hours, naming it 'Westminster Abbey Tour'. -> 'Westminster Abbey Tour' is scheduled for next month on the 15th at 9 AM for 3 hours at Westminster Abbey in London. The URI is content://calender/event/6"], "query": "Email it to my family at family@example.com.", "rewrited_query": "Email next month Westminster Abbey Tour to my family at family@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "family@example.com", "body": "next month Westminster Abbey Tour"}}, "unique_idx": "search_location-1197-ACTION_INSERT_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I'd like to see where Central Station in Sydney is located. -> Let me show you where Central Station is in Sydney.", "turn 2: Schedule a 'Train Commute' event at Central Station in Sydney for next Wednesday at 7:30 AM, lasting 45 minutes. -> Got it. 'Train Commute' is scheduled for next Wednesday at 7:30 AM at Central Station in Sydney, lasting 45 minutes. The URI is content://calender/event/7"], "query": "Send it to my boss, boss@example.com.", "rewrited_query": "Send next wednesday Train Commute to my boss, boss@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "boss@example.com", "body": "next wednesday Train Commute"}}, "unique_idx": "search_location-1198-ACTION_INSERT_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please search the address for 100 King Street, Toronto. -> I am searching for 100 King Street, Toronto.", "turn 2: Create an event at 100 King Street, Toronto this Thursday at 1 PM for 2 hours, called 'Meeting at King Street'. -> Confirmed. 'Meeting at King Street' has been created for this Thursday at 1 PM at 100 King Street, Toronto, lasting 2 hours. The URI is content://calender/event/8"], "query": "Send this information to my group, group@example.com.", "rewrited_query": "Send this thursday Meeting at King Street information to my group, group@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "group@example.com", "body": "this thursday Meeting at King Street information"}}, "unique_idx": "search_location-1199-ACTION_INSERT_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need the map location for the Royal Palace of Madrid. -> Sure, I will pull up the map location for the Royal Palace of Madrid.", "turn 2: Create an event to visit the Royal Palace of Madrid next Tuesday at 2 PM for 4 hours, called 'Palace Tour'. -> No problem. 'Palace Tour' is scheduled for next Tuesday at 2 PM at the Royal Palace of Madrid, lasting 4 hours. The URI is content://calender/event/10"], "query": "Please email those details to everyone in my department at department@example.com.", "rewrited_query": "Please email next tuesday Palace Tour details to everyone in my department at department@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "department@example.com", "subject": "Palace Tour details", "body": "next tuesday"}}, "unique_idx": "search_location-1201-ACTION_INSERT_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please track down the location of the Anne Frank House in Amsterdam. -> Sure, I'm locating the Anne Frank House in Amsterdam for you.", "turn 2: Set up a calendar event to visit the Anne Frank House in Amsterdam on July 1st at 10 AM for 2 hours, titled Anne Frank Visit. -> Alright, 'Anne Frank Visit' has been added to your calendar for July 1st at 10 AM at the Anne Frank House in Amsterdam, lasting 2 hours. The URI is content://calender/event/2"], "query": "Send a message to my brother about it.", "rewrited_query": "Send a message to my brother about the 'Anne Frank Visit' event at the Anne Frank House in Amsterdam on July 1st at 10 AM for 2 hours.", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "Anne Frank Visit' event at the Anne Frank House in Amsterdam on July 1st at 10 AM for 2 hours."}}, "unique_idx": "search_location-1193-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you help me find 500 Main Street in Los Angeles? -> I will find 500 Main Street in Los Angeles for you now.", "turn 2: Let's schedule a meeting at 500 Main Street in Los Angeles next Monday at 3 PM. Call it 'Meeting at 500 Main'. It will last 1 hour, and the description is 'Project Discussion'. -> OK, 'Meeting at 500 Main' has been added to your calendar for next Monday at 3 PM at 500 Main Street in Los Angeles. Duration: 1 hour. Description: Project Discussion. The URI is content://calender/event/3."], "query": "Send a text to John about it.", "rewrited_query": "Send a text to John about the 'Meeting at 500 Main' event at 500 Main Street in Los Angeles next Monday at 3 PM.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Meeting at 500 Main' event at 500 Main Street in Los Angeles next Monday at 3 PM."}}, "unique_idx": "search_location-1194-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: I'm looking for the location of the Metro Center station in Washington, D.C. Please search it. -> Searching for the Metro Center station in Washington, D.C...", "turn 2: Create a calendar event for a commute at the Metro Center station in Washington, D.C. next Tuesday at 8 AM, with a duration of 30 minutes. Title it 'Morning Commute'. -> I've added 'Morning Commute' to your calendar for next Tuesday at 8 AM at the Metro Center station in Washington, D.C., lasting 30 minutes. The URI is content://calender/event/4"], "query": "Tell my boss about that.", "rewrited_query": "Tell my boss about the 'Morning Commute' event at the Metro Center station in Washington, D.C. next Tuesday at 8 AM.", "answer": {"plan": "send_message", "arguments": {"to": "my boss", "message": "Morning Commute event at the Metro Center station in Washington, D.C. next Tuesday at 8 AM."}}, "unique_idx": "search_location-1195-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: Search for the University of Oxford on the map. -> Alright, pinpointing the University of Oxford on the map.", "turn 2: Add a 'Visit Oxford' event at the University of Oxford next Friday at 11 AM, lasting 4 hours, with the description 'Campus Tour'. -> Okay, I've scheduled 'Visit Oxford' at the University of Oxford for next Friday at 11 AM. It will last 4 hours and the description is 'Campus Tour'. The URI is content://calender/event/5."], "query": "Text my friend about it.", "rewrited_query": "Text my friend about the 'Visit Oxford' event at the University of Oxford next Friday at 11 AM.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "Visit Oxford event at the University of Oxford next Friday at 11 AM."}}, "unique_idx": "search_location-1196-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: Find the location of Westminster Abbey in London. -> I'm on it! Locating Westminster Abbey in London.", "turn 2: Set up a visit at Westminster Abbey in London next month on the 15th at 9 AM for 3 hours, naming it 'Westminster Abbey Tour'. -> 'Westminster Abbey Tour' is scheduled for next month on the 15th at 9 AM for 3 hours at Westminster Abbey in London. The URI is content://calender/event/6"], "query": "Text my mom about that.", "rewrited_query": "Text my mom about the 'Westminster Abbey Tour' event at Westminster Abbey in London next month on the 15th at 9 AM.", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "Westminster Abbey Tour event at Westminster Abbey in London next month on the 15th at 9 AM."}}, "unique_idx": "search_location-1197-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: I'd like to see where Central Station in Sydney is located. -> Let me show you where Central Station is in Sydney.", "turn 2: Schedule a 'Train Commute' event at Central Station in Sydney for next Wednesday at 7:30 AM, lasting 45 minutes. -> Got it. 'Train Commute' is scheduled for next Wednesday at 7:30 AM at Central Station in Sydney, lasting 45 minutes. The URI is content://calender/event/7"], "query": "Send the details to my colleague.", "rewrited_query": "Send the details of the 'Train Commute' event at Central Station in Sydney for next Wednesday at 7:30 AM to my colleague.", "answer": {"plan": "send_message", "arguments": {"to": "my colleague", "message": "Train Commute event at Central Station in Sydney for next Wednesday at 7:30 AM."}}, "unique_idx": "search_location-1198-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: Please search the address for 100 King Street, Toronto. -> I am searching for 100 King Street, Toronto.", "turn 2: Create an event at 100 King Street, Toronto this Thursday at 1 PM for 2 hours, called 'Meeting at King Street'. -> Confirmed. 'Meeting at King Street' has been created for this Thursday at 1 PM at 100 King Street, Toronto, lasting 2 hours. The URI is content://calender/event/8"], "query": "Send a reminder to myself about it.", "rewrited_query": "Send a reminder to myself about the 'Meeting at King Street' event at 100 King Street, Toronto this Thursday at 1 PM.", "answer": {"plan": "send_message", "arguments": {"to": "myself", "message": "Reminder: Meeting at King Street event at 100 King Street, Toronto this Thursday at 1 PM."}}, "unique_idx": "search_location-1199-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you locate the Space Needle in Seattle? -> Yes, I can locate the Space Needle in Seattle for you.", "turn 2: Add a 'Space Needle Visit' event at the Space Needle in Seattle for this Sunday at 10 AM, lasting 3 hours. The description is 'Family Outing'. -> OK, I've added 'Space Needle Visit' to your calendar for this Sunday at 10 AM at the Space Needle in Seattle, lasting 3 hours. Description: Family Outing. The URI is content://calender/event/9."], "query": "Send the details to my family.", "rewrited_query": "Send the details of the 'Space Needle Visit' event at the Space Needle in Seattle for this Sunday at 10 AM to my family.", "answer": {"plan": "send_message", "arguments": {"to": "my family", "message": "Space Needle Visit event at the Space Needle in Seattle for this Sunday at 10 AM."}}, "unique_idx": "search_location-1200-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: I need the map location for the Royal Palace of Madrid. -> Sure, I will pull up the map location for the Royal Palace of Madrid.", "turn 2: Create an event to visit the Royal Palace of Madrid next Tuesday at 2 PM for 4 hours, called 'Palace Tour'. -> No problem. 'Palace Tour' is scheduled for next Tuesday at 2 PM at the Royal Palace of Madrid, lasting 4 hours. The URI is content://calender/event/10"], "query": "Send a message to my friend about that.", "rewrited_query": "Send a message to my friend about the 'Palace Tour' event at the Royal Palace of Madrid next Tuesday at 2 PM.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "Palace Tour event at the Royal Palace of Madrid next Tuesday at 2 PM."}}, "unique_idx": "search_location-1201-ACTION_INSERT_EVENT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you help me find 500 Main Street in Los Angeles? -> I will find 500 Main Street in Los Angeles for you now.", "turn 2: Let's schedule a meeting at 500 Main Street in Los Angeles next Monday at 3 PM. Call it 'Meeting at 500 Main'. It will last 1 hour, and the description is 'Project Discussion'. -> OK, 'Meeting at 500 Main' has been added to your calendar for next Monday at 3 PM at 500 Main Street in Los Angeles. Duration: 1 hour. Description: Project Discussion. The URI is content://calender/event/3."], "query": "How do I get there?", "rewrited_query": "How do I get to 500 Main Street in Los Angeles?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "500 Main Street, Los Angeles"}}, "unique_idx": "search_location-1194-ACTION_INSERT_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I'm looking for the location of the Metro Center station in Washington, D.C. Please search it. -> Searching for the Metro Center station in Washington, D.C...", "turn 2: Create a calendar event for a commute at the Metro Center station in Washington, D.C. next Tuesday at 8 AM, with a duration of 30 minutes. Title it 'Morning Commute'. -> I've added 'Morning Commute' to your calendar for next Tuesday at 8 AM at the Metro Center station in Washington, D.C., lasting 30 minutes. The URI is content://calender/event/4"], "query": "Let's get directions.", "rewrited_query": "Let's get directions to the Metro Center station in Washington, D.C.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Metro Center station, Washington, D.C."}}, "unique_idx": "search_location-1195-ACTION_INSERT_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Search for the University of Oxford on the map. -> Alright, pinpointing the University of Oxford on the map.", "turn 2: Add a 'Visit Oxford' event at the University of Oxford next Friday at 11 AM, lasting 4 hours, with the description 'Campus Tour'. -> Okay, I've scheduled 'Visit Oxford' at the University of Oxford for next Friday at 11 AM. It will last 4 hours and the description is 'Campus Tour'. The URI is content://calender/event/5."], "query": "Start navigating.", "rewrited_query": "Start navigating to the University of Oxford.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "University of Oxford"}}, "unique_idx": "search_location-1196-ACTION_INSERT_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Find the location of Westminster Abbey in London. -> I'm on it! Locating Westminster Abbey in London.", "turn 2: Set up a visit at Westminster Abbey in London next month on the 15th at 9 AM for 3 hours, naming it 'Westminster Abbey Tour'. -> 'Westminster Abbey Tour' is scheduled for next month on the 15th at 9 AM for 3 hours at Westminster Abbey in London. The URI is content://calender/event/6"], "query": "Please navigate me there.", "rewrited_query": "Please navigate me to Westminster Abbey in London.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Westminster Abbey, London"}}, "unique_idx": "search_location-1197-ACTION_INSERT_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I'd like to see where Central Station in Sydney is located. -> Let me show you where Central Station is in Sydney.", "turn 2: Schedule a 'Train Commute' event at Central Station in Sydney for next Wednesday at 7:30 AM, lasting 45 minutes. -> Got it. 'Train Commute' is scheduled for next Wednesday at 7:30 AM at Central Station in Sydney, lasting 45 minutes. The URI is content://calender/event/7"], "query": "OK, navigate me to that place.", "rewrited_query": "OK, navigate me to Central Station in Sydney.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Central Station, Sydney"}}, "unique_idx": "search_location-1198-ACTION_INSERT_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please search the address for 100 King Street, Toronto. -> I am searching for 100 King Street, Toronto.", "turn 2: Create an event at 100 King Street, Toronto this Thursday at 1 PM for 2 hours, called 'Meeting at King Street'. -> Confirmed. 'Meeting at King Street' has been created for this Thursday at 1 PM at 100 King Street, Toronto, lasting 2 hours. The URI is content://calender/event/8"], "query": "Get me directions.", "rewrited_query": "Get me directions to 100 King Street, Toronto.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "100 King Street, Toronto"}}, "unique_idx": "search_location-1199-ACTION_INSERT_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Can you locate the Space Needle in Seattle? -> Yes, I can locate the Space Needle in Seattle for you.", "turn 2: Add a 'Space Needle Visit' event at the Space Needle in Seattle for this Sunday at 10 AM, lasting 3 hours. The description is 'Family Outing'. -> OK, I've added 'Space Needle Visit' to your calendar for this Sunday at 10 AM at the Space Needle in Seattle, lasting 3 hours. Description: Family Outing. The URI is content://calender/event/9."], "query": "Could you navigate me there, please?", "rewrited_query": "Could you navigate me to the Space Needle in Seattle, please?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Space Needle, Seattle"}}, "unique_idx": "search_location-1200-ACTION_INSERT_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need the map location for the Royal Palace of Madrid. -> Sure, I will pull up the map location for the Royal Palace of Madrid.", "turn 2: Create an event to visit the Royal Palace of Madrid next Tuesday at 2 PM for 4 hours, called 'Palace Tour'. -> No problem. 'Palace Tour' is scheduled for next Tuesday at 2 PM at the Royal Palace of Madrid, lasting 4 hours. The URI is content://calender/event/10"], "query": "Okay, take me there now.", "rewrited_query": "Okay, take me to the Royal Palace of Madrid now.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Royal Palace of Madrid"}}, "unique_idx": "search_location-1201-ACTION_INSERT_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Display the set alarm times on my device. -> Alarm times set on your device: [alarm_id: 1 - 10:30 PM, Read, alarm_id: 2 - 7:45 AM, Get Ready]", "turn 2: Input a calendar event for 'Business Strategy Meeting' intended to review our growth plans at the Main Office Conference Room. It should be scheduled from 1703200000000 to 1703207200000. -> Great, the 'Business Strategy Meeting' is now scheduled for January 22, 2024, 7:33:20 PM to January 22, 2024, 9:33:20 PM at Main Office Conference Room. You can find the event here: content://calender/event/1"], "query": "Can you find it for me?", "rewrited_query": "Can you find Main Office Conference Room for me?", "answer": {"plan": "search_location", "arguments": {"query": "Main Office Conference Room"}}, "unique_idx": "ACTION_SHOW_ALARMS-702-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I'd appreciate having the audio file available at content://audio/announcement.aac; please open it. -> Sure, I am opening the audio file from content://audio/announcement.aac.", "turn 2: Could you schedule an 'Evening Study Group' for a collaborative learning session? It should run from 1703000000000 to 1703003600000 and no location is needed, with the description 'Group study session'. -> No problem, I've scheduled 'Evening Study Group' for January 20, 2024, 11:06:40 PM to January 21, 2024, 12:06:40 AM. It's saved at content://calender/event/1."], "query": "Search nearby library.", "rewrited_query": "Search nearby library.", "answer": {"plan": "search_location", "arguments": {"query": "nearby library"}}, "unique_idx": "ACTION_OPEN_CONTENT-270-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Display the set alarm times on my device. -> Alarm times set on your device: [alarm_id: 1 - 10:30 PM, Read, alarm_id: 2 - 7:45 AM, Get Ready]", "turn 2: Input a calendar event for 'Business Strategy Meeting' intended to review our growth plans at the Main Office Conference Room. It should be scheduled from 1703200000000 to 1703207200000. -> Great, the 'Business Strategy Meeting' is now scheduled for January 22, 2024, 7:33:20 PM to January 22, 2024, 9:33:20 PM at Main Office Conference Room. You can find the event here: content://calender/event/1"], "query": "Can you send a text to remind participants about it?", "rewrited_query": "Can you send a text to remind participants about the 'Business Strategy Meeting'?", "answer": {"plan": "send_message", "arguments": {"to": "participants", "message": "Business Strategy Meeting"}}, "unique_idx": "ACTION_SHOW_ALARMS-702-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I'd appreciate having the audio file available at content://audio/announcement.aac; please open it. -> Sure, I am opening the audio file from content://audio/announcement.aac.", "turn 2: Could you schedule an 'Evening Study Group' for a collaborative learning session? It should run from 1703000000000 to 1703003600000 and no location is needed, with the description 'Group study session'. -> No problem, I've scheduled 'Evening Study Group' for January 20, 2024, 11:06:40 PM to January 21, 2024, 12:06:40 AM. It's saved at content://calender/event/1."], "query": "Send the study group a text to remind them about it.", "rewrited_query": "Send the study group a text to remind them about the 'Evening Study Group'.", "answer": {"plan": "send_message", "arguments": {"to": "the study group", "message": "Evening Study Group"}}, "unique_idx": "ACTION_OPEN_CONTENT-270-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Display the set alarm times on my device. -> Alarm times set on your device: [alarm_id: 1 - 10:30 PM, Read, alarm_id: 2 - 7:45 AM, Get Ready]", "turn 2: Input a calendar event for 'Business Strategy Meeting' intended to review our growth plans at the Main Office Conference Room. It should be scheduled from 1703200000000 to 1703207200000. -> Great, the 'Business Strategy Meeting' is now scheduled for January 22, 2024, 7:33:20 PM to January 22, 2024, 9:33:20 PM at Main Office Conference Room. You can find the event here: content://calender/event/1"], "query": "Navigate to that room.", "rewrited_query": "Navigate to Main Office Conference Room.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Main Office Conference Room"}}, "unique_idx": "ACTION_SHOW_ALARMS-702-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I'd appreciate having the audio file available at content://audio/announcement.aac; please open it. -> Sure, I am opening the audio file from content://audio/announcement.aac.", "turn 2: Could you schedule an 'Evening Study Group' for a collaborative learning session? It should run from 1703000000000 to 1703003600000 and no location is needed, with the description 'Group study session'. -> No problem, I've scheduled 'Evening Study Group' for January 20, 2024, 11:06:40 PM to January 21, 2024, 12:06:40 AM. It's saved at content://calender/event/1."], "query": "Navigate me home.", "rewrited_query": "Navigate me home.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "home"}}, "unique_idx": "ACTION_OPEN_CONTENT-270-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you look up the latest reviews on high-end gaming laptops? -> Sure, I'm looking up the latest reviews on high-end gaming laptops: Check out the performance and user feedback on top-tier gaming laptops.", "turn 2: Set a calendar event for 'Meditation Retreat', a full-day mindfulness practice session. No explicit location is mentioned and it is set from 1702700000000 to 1702707200000. -> I've scheduled 'Meditation Retreat' for you, a full-day mindfulness practice session, starting December 16, 2023, at 6:53:20 PM and ending December 16, 2023, at 8:53:20 PM. Event URI is content://calender/event/1"], "query": "Could you search for the location of that event?", "rewrited_query": "Could you search for the location of Meditation Retreat event?", "answer": {"plan": "search_location", "arguments": {"query": "Meditation Retreat event"}}, "unique_idx": "web_search-1380-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Retrieve and present the recent web history entries so I can track my browsing. -> Here are your recent web history entries:  Google Maps; Yelp; TripAdvisor.", "turn 2: Organize an event titled 'Coding Bootcamp' that is an intensive programming course covering Python and JavaScript. It should be held at Tech Center from 1702600000000 to 1702607200000. -> OK, the 'Coding Bootcamp' event, an intensive programming course covering Python and JavaScript at Tech Center, has been added to your calendar from December 15, 2023, at 7:26:40 PM to December 15, 2023, at 9:26:40 PM. The calendar entry is available at content://calender/event/1"], "query": "Can you pull up the location of that?", "rewrited_query": "Can you pull up the location of Tech Center?", "answer": {"plan": "search_location", "arguments": {"query": "Tech Center"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2214-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you add a 'Podcast Recording' session to record the new episode at the Studio? It starts at 1705200000000 and ends at 1705203600000. -> OK, I've added 'Podcast Recording' at the Studio to your calendar. It starts on January 14, 2024, at 6:00:00 PM and ends on January 14, 2024, at 7:00:00 PM. Here's the URI: content://calender/event/1", "turn 2: I would like to add an event called 'Sculpture Workshop'. The description is 'Learn sculpting basics under expert guidance'. It will be hosted at the Art Institute from 1702500000000 to 1702505400000. -> I've added 'Sculpture Workshop' to your calendar, described as 'Learn sculpting basics under expert guidance' at the Art Institute, from December 14, 2023, at 7:53:20 PM to December 14, 2023, at 9:23:20 PM. Event location can be found at content://calender/event/2"], "query": "Can you search that place for me?", "rewrited_query": "Can you search the Art Institute for me?", "answer": {"plan": "search_location", "arguments": {"query": "Art Institute"}}, "unique_idx": "ACTION_INSERT_EVENT-486-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Set up a 'Charity Run' event, a 5K run for charity at City Park. It starts at 1705100000000 and ends at 1705105400000. -> OK, the 'Charity Run' at City Park has been scheduled from 1705100000000 to 1705105400000. Event URI: content://calender/event/10", "turn 2: Input an event for 'Photography Walk' with the description 'An early morning stroll to capture city life'. No location is provided, and it should be scheduled from 1702000000000 to 1702003600000. -> OK, I've scheduled 'Photography Walk' for you, described as 'An early morning stroll to capture city life', starting December 9, 2023, at 10:06:40 PM and ending December 9, 2023, at 11:06:40 PM. Event URI is content://calender/event/11"], "query": "Find the location for the photography walk.", "rewrited_query": "Find the location for the photography walk.", "answer": {"plan": "search_location", "arguments": {"query": "photography walk"}}, "unique_idx": "ACTION_INSERT_EVENT-485-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Set up a 'Charity Run' event, a 5K run for charity at City Park. It starts at 1705100000000 and ends at 1705105400000. -> OK, the 'Charity Run' at City Park has been scheduled from 1705100000000 to 1705105400000. Event URI: content://calender/event/10", "turn 2: Input an event for 'Photography Walk' with the description 'An early morning stroll to capture city life'. No location is provided, and it should be scheduled from 1702000000000 to 1702003600000. -> OK, I've scheduled 'Photography Walk' for you, described as 'An early morning stroll to capture city life', starting December 9, 2023, at 10:06:40 PM and ending December 9, 2023, at 11:06:40 PM. Event URI is content://calender/event/11"], "query": "Could you email details about this to photographygroup@email.com?", "rewrited_query": "Could you email details about Photography Walk event to photographygroup@email.com?", "answer": {"plan": "send_email", "arguments": {"to": "photographygroup@email.com", "subject": "Photography Walk event details"}}, "unique_idx": "ACTION_INSERT_EVENT-485-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Could you look up the latest reviews on high-end gaming laptops? -> Sure, I'm looking up the latest reviews on high-end gaming laptops: Check out the performance and user feedback on top-tier gaming laptops.", "turn 2: Set a calendar event for 'Meditation Retreat', a full-day mindfulness practice session. No explicit location is mentioned and it is set from 1702700000000 to 1702707200000. -> I've scheduled 'Meditation Retreat' for you, a full-day mindfulness practice session, starting December 16, 2023, at 6:53:20 PM and ending December 16, 2023, at 8:53:20 PM. Event URI is content://calender/event/1"], "query": "Text my friend to remind him to come.", "rewrited_query": "Text my friend to remind him to come to 'Meditation Retreat'.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "Meditation Retreat"}}, "unique_idx": "web_search-1380-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Retrieve and present the recent web history entries so I can track my browsing. -> Here are your recent web history entries:  Google Maps; Yelp; TripAdvisor.", "turn 2: Organize an event titled 'Coding Bootcamp' that is an intensive programming course covering Python and JavaScript. It should be held at Tech Center from 1702600000000 to 1702607200000. -> OK, the 'Coding Bootcamp' event, an intensive programming course covering Python and JavaScript at Tech Center, has been added to your calendar from December 15, 2023, at 7:26:40 PM to December 15, 2023, at 9:26:40 PM. The calendar entry is available at content://calender/event/1"], "query": "Send a text to my colleague about it.", "rewrited_query": "Send a text to my colleague about the 'Coding Bootcamp' event.", "answer": {"plan": "send_message", "arguments": {"to": "my colleague", "message": "Coding Bootcamp event"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2214-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you add a 'Podcast Recording' session to record the new episode at the Studio? It starts at 1705200000000 and ends at 1705203600000. -> OK, I've added 'Podcast Recording' at the Studio to your calendar. It starts on January 14, 2024, at 6:00:00 PM and ends on January 14, 2024, at 7:00:00 PM. Here's the URI: content://calender/event/1", "turn 2: I would like to add an event called 'Sculpture Workshop'. The description is 'Learn sculpting basics under expert guidance'. It will be hosted at the Art Institute from 1702500000000 to 1702505400000. -> I've added 'Sculpture Workshop' to your calendar, described as 'Learn sculpting basics under expert guidance' at the Art Institute, from December 14, 2023, at 7:53:20 PM to December 14, 2023, at 9:23:20 PM. Event location can be found at content://calender/event/2"], "query": "Text my friend to see if she wants to join me.", "rewrited_query": "Text my friend to see if she wants to join me in the 'Sculpture Workshop'.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "See if she wants to join me in the 'Sculpture Workshop'."}}, "unique_idx": "ACTION_INSERT_EVENT-486-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Set up a 'Charity Run' event, a 5K run for charity at City Park. It starts at 1705100000000 and ends at 1705105400000. -> OK, the 'Charity Run' at City Park has been scheduled from 1705100000000 to 1705105400000. Event URI: content://calender/event/10", "turn 2: Input an event for 'Photography Walk' with the description 'An early morning stroll to capture city life'. No location is provided, and it should be scheduled from 1702000000000 to 1702003600000. -> OK, I've scheduled 'Photography Walk' for you, described as 'An early morning stroll to capture city life', starting December 9, 2023, at 10:06:40 PM and ending December 9, 2023, at 11:06:40 PM. Event URI is content://calender/event/11"], "query": "Text my friend the details.", "rewrited_query": "Text my friend the details of the 'Photography Walk'.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "The details of the 'Photography Walk'."}}, "unique_idx": "ACTION_INSERT_EVENT-485-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you look up the latest reviews on high-end gaming laptops? -> Sure, I'm looking up the latest reviews on high-end gaming laptops: Check out the performance and user feedback on top-tier gaming laptops.", "turn 2: Set a calendar event for 'Meditation Retreat', a full-day mindfulness practice session. No explicit location is mentioned and it is set from 1702700000000 to 1702707200000. -> I've scheduled 'Meditation Retreat' for you, a full-day mindfulness practice session, starting December 16, 2023, at 6:53:20 PM and ending December 16, 2023, at 8:53:20 PM. Event URI is content://calender/event/1"], "query": "Navigate me to that location.", "rewrited_query": "Navigate me to the location of 'Meditation Retreat'.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Meditation Retreat"}}, "unique_idx": "web_search-1380-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Retrieve and present the recent web history entries so I can track my browsing. -> Here are your recent web history entries:  Google Maps; Yelp; TripAdvisor.", "turn 2: Organize an event titled 'Coding Bootcamp' that is an intensive programming course covering Python and JavaScript. It should be held at Tech Center from 1702600000000 to 1702607200000. -> OK, the 'Coding Bootcamp' event, an intensive programming course covering Python and JavaScript at Tech Center, has been added to your calendar from December 15, 2023, at 7:26:40 PM to December 15, 2023, at 9:26:40 PM. The calendar entry is available at content://calender/event/1"], "query": "Take me there.", "rewrited_query": "Take me to Tech Center.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Tech Center"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2214-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you add a 'Podcast Recording' session to record the new episode at the Studio? It starts at 1705200000000 and ends at 1705203600000. -> OK, I've added 'Podcast Recording' at the Studio to your calendar. It starts on January 14, 2024, at 6:00:00 PM and ends on January 14, 2024, at 7:00:00 PM. Here's the URI: content://calender/event/1", "turn 2: I would like to add an event called 'Sculpture Workshop'. The description is 'Learn sculpting basics under expert guidance'. It will be hosted at the Art Institute from 1702500000000 to 1702505400000. -> I've added 'Sculpture Workshop' to your calendar, described as 'Learn sculpting basics under expert guidance' at the Art Institute, from December 14, 2023, at 7:53:20 PM to December 14, 2023, at 9:23:20 PM. Event location can be found at content://calender/event/2"], "query": "Start navigation to that place.", "rewrited_query": "Start navigation to the Art Institute.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Art Institute"}}, "unique_idx": "ACTION_INSERT_EVENT-486-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Locate the site known as the Plaza de Cibeles in Madrid. -> Searching for Plaza de Cibeles in Madrid.", "turn 2: Please schedule an event called 'Fitness Bootcamp'. It's described as an intense morning workout session at a local fitness center from 1701800000000 to 1701803600000. -> OK, I've added 'Fitness Bootcamp' to your calendar at the Local fitness center, starting from 1701800000000 to 1701803600000. Event URI is content://calender/event/1."], "query": "Could you search for it on the map?", "rewrited_query": "Could you search for the Local fitness center on the map?", "answer": {"plan": "search_location", "arguments": {"query": "Local fitness center"}}, "unique_idx": "search_location-1216-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I need to add a 'Finance Meeting' to discuss quarterly results in the Office Boardroom. It commences at 1705000000000 and ends at 1705003600000. -> I've added the 'Finance Meeting' in the Office Boardroom to your calendar from 1705000000000 to 1705003600000. Event URI: content://calender/event/9", "turn 2: Plan an event 'Restaurant Reservation' for a dinner with friends at Bella Italia to celebrate a special occasion. It should run from 1701700000000 to 1701705400000. -> Alright, I've scheduled 'Restaurant Reservation' at Bella Italia from 1701700000000 to 1701705400000. The event URI is content://calender/event/10."], "query": "Show me where that is.", "rewrited_query": "Show me where Bella Italia is.", "answer": {"plan": "search_location", "arguments": {"query": "Bella Italia"}}, "unique_idx": "ACTION_INSERT_EVENT-484-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Cast an eye on the scanned receipt at content://receipts/receipt.pdf; it's a PDF document. -> Alright, opening the scanned receipt at content://receipts/receipt.pdf now.", "turn 2: Create an event titled 'Music Rehearsal' for a band practice session. It will take place at Studio 7 starting at 1701500000000 and ending at 1701503600000. -> Successfully scheduled 'Music Rehearsal' at Studio 7 from 1701500000000 to 1701503600000. The event URI is content://calender/event/12."], "query": "Search that location.", "rewrited_query": "Search Studio 7 location.", "answer": {"plan": "search_location", "arguments": {"query": "Studio 7"}}, "unique_idx": "ACTION_OPEN_CONTENT-269-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I want to send an email to rachel@health.org stating 'Appointment confirmed for next week'. -> Okay, emailing 'Appointment confirmed for next week' to rachel@health.org.", "turn 2: Please add an event called 'Gardening Workshop' that encourages community gardening. It will be held at City Park from 1701300000000 to 1701305400000. -> OK, I've scheduled 'Gardening Workshop' at City Park from 1701300000000 to 1701305400000. Event URI: content://calender/event/14."], "query": "Find it on the map.", "rewrited_query": "Find City Park on the map.", "answer": {"plan": "search_location", "arguments": {"query": "City Park"}}, "unique_idx": "send_email-1269-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Locate the site known as the Plaza de Cibeles in Madrid. -> Searching for Plaza de Cibeles in Madrid.", "turn 2: Please schedule an event called 'Fitness Bootcamp'. It's described as an intense morning workout session at a local fitness center from 1701800000000 to 1701803600000. -> OK, I've added 'Fitness Bootcamp' to your calendar at the Local fitness center, starting from 1701800000000 to 1701803600000. Event URI is content://calender/event/1."], "query": "Email the details to the team at team@fitness.com.", "rewrited_query": "Email the Fitness Bootcamp details to the team at team@fitness.com.", "answer": {"plan": "send_email", "arguments": {"to": "team@fitness.com", "subject": "Fitness Bootcamp details"}}, "unique_idx": "search_location-1216-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I need to add a 'Finance Meeting' to discuss quarterly results in the Office Boardroom. It commences at 1705000000000 and ends at 1705003600000. -> I've added the 'Finance Meeting' in the Office Boardroom to your calendar from 1705000000000 to 1705003600000. Event URI: content://calender/event/9", "turn 2: Plan an event 'Restaurant Reservation' for a dinner with friends at Bella Italia to celebrate a special occasion. It should run from 1701700000000 to 1701705400000. -> Alright, I've scheduled 'Restaurant Reservation' at Bella Italia from 1701700000000 to 1701705400000. The event URI is content://calender/event/10."], "query": "Could you email these details to my friends at friends@email.com?", "rewrited_query": "Could you email the Restaurant Reservation details to my friends at friends@email.com?", "answer": {"plan": "send_email", "arguments": {"to": "friends@email.com", "subject": "Restaurant Reservation details"}}, "unique_idx": "ACTION_INSERT_EVENT-484-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I want to send an email to rachel@health.org stating 'Appointment confirmed for next week'. -> Okay, emailing 'Appointment confirmed for next week' to rachel@health.org.", "turn 2: Please add an event called 'Gardening Workshop' that encourages community gardening. It will be held at City Park from 1701300000000 to 1701305400000. -> OK, I've scheduled 'Gardening Workshop' at City Park from 1701300000000 to 1701305400000. Event URI: content://calender/event/14."], "query": "Email the particulars to volunteers@garden.org.", "rewrited_query": "Email the Gardening Workshop particulars to volunteers@garden.org.", "answer": {"plan": "send_email", "arguments": {"to": "volunteers@garden.org", "subject": "Gardening Workshop particulars"}}, "unique_idx": "send_email-1269-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I need directions to The National Mall in Washington D.C. Could you please help? -> Okay, starting navigation to The National Mall in Washington D.C.", "turn 2: I would like to set up an event titled 'Art Exhibition'. It's a public display of local art at Downtown Gallery from 1701100000000 to 1701103600000. -> Okay, 'Art Exhibition' has been scheduled at Downtown Gallery from 1701100000000 to 1701103600000. Event URI is content://calender/event/16."], "query": "Email the invite to localartists@art.com, please.", "rewrited_query": "Email the Art Exhibition invite to localartists@art.com, please.", "answer": {"plan": "send_email", "arguments": {"to": "localartists@art.com", "subject": "Art Exhibition invite"}}, "unique_idx": "ACTION_NAVIGATE_TO_LOCATION-1835-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Locate the site known as the Plaza de Cibeles in Madrid. -> Searching for Plaza de Cibeles in Madrid.", "turn 2: Please schedule an event called 'Fitness Bootcamp'. It's described as an intense morning workout session at a local fitness center from 1701800000000 to 1701803600000. -> OK, I've added 'Fitness Bootcamp' to your calendar at the Local fitness center, starting from 1701800000000 to 1701803600000. Event URI is content://calender/event/1."], "query": "Send a text about it to John at 555-1234.", "rewrited_query": "Send a text about 'Fitness Bootcamp' to John at 555-1234.", "answer": {"plan": "send_message", "arguments": {"to": "555-1234", "message": "About 'Fitness Bootcamp'."}}, "unique_idx": "search_location-1216-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need to add a 'Finance Meeting' to discuss quarterly results in the Office Boardroom. It commences at 1705000000000 and ends at 1705003600000. -> I've added the 'Finance Meeting' in the Office Boardroom to your calendar from 1705000000000 to 1705003600000. Event URI: content://calender/event/9", "turn 2: Plan an event 'Restaurant Reservation' for a dinner with friends at Bella Italia to celebrate a special occasion. It should run from 1701700000000 to 1701705400000. -> Alright, I've scheduled 'Restaurant Reservation' at Bella Italia from 1701700000000 to 1701705400000. The event URI is content://calender/event/10."], "query": "Text my friend Amy at 555-5678 about that.", "rewrited_query": "Text my friend Amy at 555-5678 about 'Restaurant Reservation'.", "answer": {"plan": "send_message", "arguments": {"to": "555-5678", "message": "About 'Restaurant Reservation'."}}, "unique_idx": "ACTION_INSERT_EVENT-484-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Cast an eye on the scanned receipt at content://receipts/receipt.pdf; it's a PDF document. -> Alright, opening the scanned receipt at content://receipts/receipt.pdf now.", "turn 2: Create an event titled 'Music Rehearsal' for a band practice session. It will take place at Studio 7 starting at 1701500000000 and ending at 1701503600000. -> Successfully scheduled 'Music Rehearsal' at Studio 7 from 1701500000000 to 1701503600000. The event URI is content://calender/event/12."], "query": "Send a text message to the band at 555-3456 about it.", "rewrited_query": "Send a text message to the band at 555-3456 about 'Music Rehearsal'.", "answer": {"plan": "send_message", "arguments": {"to": "555-3456", "message": "Music Rehearsal"}}, "unique_idx": "ACTION_OPEN_CONTENT-269-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I want to send an email to rachel@health.org stating 'Appointment confirmed for next week'. -> Okay, emailing 'Appointment confirmed for next week' to rachel@health.org.", "turn 2: Please add an event called 'Gardening Workshop' that encourages community gardening. It will be held at City Park from 1701300000000 to 1701305400000. -> OK, I've scheduled 'Gardening Workshop' at City Park from 1701300000000 to 1701305400000. Event URI: content://calender/event/14."], "query": "Send a text message to the community group at 555-2345 about it.", "rewrited_query": "Send a text message to the community group at 555-2345 about 'Gardening Workshop'.", "answer": {"plan": "send_message", "arguments": {"to": "555-2345", "message": "Gardening Workshop"}}, "unique_idx": "send_email-1269-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need directions to The National Mall in Washington D.C. Could you please help? -> Okay, starting navigation to The National Mall in Washington D.C.", "turn 2: I would like to set up an event titled 'Art Exhibition'. It's a public display of local art at Downtown Gallery from 1701100000000 to 1701103600000. -> Okay, 'Art Exhibition' has been scheduled at Downtown Gallery from 1701100000000 to 1701103600000. Event URI is content://calender/event/16."], "query": "Text the gallery at 555-7890 to confirm about it.", "rewrited_query": "Text the gallery at 555-7890 to confirm about 'Art Exhibition'.", "answer": {"plan": "send_message", "arguments": {"to": "555-7890", "message": "Art Exhibition"}}, "unique_idx": "ACTION_NAVIGATE_TO_LOCATION-1835-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Locate the site known as the Plaza de Cibeles in Madrid. -> Searching for Plaza de Cibeles in Madrid.", "turn 2: Please schedule an event called 'Fitness Bootcamp'. It's described as an intense morning workout session at a local fitness center from 1701800000000 to 1701803600000. -> OK, I've added 'Fitness Bootcamp' to your calendar at the Local fitness center, starting from 1701800000000 to 1701803600000. Event URI is content://calender/event/1."], "query": "Navigate to there.", "rewrited_query": "Navigate to the Local fitness center.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Local fitness center"}}, "unique_idx": "search_location-1216-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to add a 'Finance Meeting' to discuss quarterly results in the Office Boardroom. It commences at 1705000000000 and ends at 1705003600000. -> I've added the 'Finance Meeting' in the Office Boardroom to your calendar from 1705000000000 to 1705003600000. Event URI: content://calender/event/9", "turn 2: Plan an event 'Restaurant Reservation' for a dinner with friends at Bella Italia to celebrate a special occasion. It should run from 1701700000000 to 1701705400000. -> Alright, I've scheduled 'Restaurant Reservation' at Bella Italia from 1701700000000 to 1701705400000. The event URI is content://calender/event/10."], "query": "Take me there.", "rewrited_query": "Take me to Bella Italia.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Bella Italia"}}, "unique_idx": "ACTION_INSERT_EVENT-484-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Cast an eye on the scanned receipt at content://receipts/receipt.pdf; it's a PDF document. -> Alright, opening the scanned receipt at content://receipts/receipt.pdf now.", "turn 2: Create an event titled 'Music Rehearsal' for a band practice session. It will take place at Studio 7 starting at 1701500000000 and ending at 1701503600000. -> Successfully scheduled 'Music Rehearsal' at Studio 7 from 1701500000000 to 1701503600000. The event URI is content://calender/event/12."], "query": "Navigate to it, please.", "rewrited_query": "Navigate to Studio 7, please.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Studio 7"}}, "unique_idx": "ACTION_OPEN_CONTENT-269-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I want to send an email to rachel@health.org stating 'Appointment confirmed for next week'. -> Okay, emailing 'Appointment confirmed for next week' to rachel@health.org.", "turn 2: Please add an event called 'Gardening Workshop' that encourages community gardening. It will be held at City Park from 1701300000000 to 1701305400000. -> OK, I've scheduled 'Gardening Workshop' at City Park from 1701300000000 to 1701305400000. Event URI: content://calender/event/14."], "query": "Start navigation to that place.", "rewrited_query": "Start navigation to City Park.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "City Park"}}, "unique_idx": "send_email-1269-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Launch Tinder as I'm looking to check out new profiles. -> Tinder is now active.", "turn 2: Add an event named 'Dance Class' for a hip-hop session at City Dance Studio. It should start at 1700800000000 and end at 1700805400000. -> Alright, I've added 'Dance Class' to your calendar for a hip-hop session at City Dance Studio. It starts at 1700800000000 and ends at 1700805400000. Event added with URI content://calender/event/1."], "query": "Can you show me where that is?", "rewrited_query": "Can you show me where City Dance Studio is?", "answer": {"plan": "search_location", "arguments": {"query": "City Dance Studio"}}, "unique_idx": "launch_application-1545-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I would like to see my active alarms. Provide the list, please. -> Listing your active alarms: [alarm_id: 1 - 6:45 AM, Exercise, alarm_id: 2 - 1:00 PM, Lunch]", "turn 2: I want to book an event called 'Dinner Party' described as a celebration dinner for the team. It will take place at Alex's Restaurant from 1700400000000 to 1700407200000. -> I've added the 'Dinner Party' at Alex's Restaurant, a celebration dinner for the team, from 1700400000000 to 1700407200000 to your calendar. Event saved as content://calender/event/4."], "query": "Where is that?", "rewrited_query": "Where is Alex's Restaurant?", "answer": {"plan": "search_location", "arguments": {"query": "Alex's Restaurant"}}, "unique_idx": "ACTION_SHOW_ALARMS-701-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Add an event for a 'Coding Bootcamp' where participants learn to code fast. The session will be held online from 1704800000000 to 1704805400000. -> 'Coding Bootcamp' scheduled online from 1704800000000 to 1704805400000. It's now on your calendar. Event URI: content://calender/event/8", "turn 2: Add to my calendar an event named 'Interview Session'. The description is 'Discussing candidate roles'. No location is specified. Please set it from 1701500000000 to 1701505400000. -> I've added 'Interview Session' to your calendar, described as 'Discussing candidate roles', scheduled from 1701500000000 to 1701505400000. Event URI: content://calender/event/9"], "query": "Find a nearby coffee shop.", "rewrited_query": "Find a nearby coffee shop.", "answer": {"plan": "search_location", "arguments": {"query": "nearby coffee shop"}}, "unique_idx": "ACTION_INSERT_EVENT-483-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Activate Shazam; I want to identify the song playing in the background. -> Okay, opening Shazam for you.", "turn 2: Please schedule an 'Evening Meditation' session, described as a meditation for stress relief. It will take place at Zen Garden, starting at 1701400000000 and ending at 1701403600000. -> I've added 'Evening Meditation' at Zen Garden, described as a meditation for stress relief, scheduled from 1701400000000 to 1701403600000. Event saved with URI content://calender/event/10."], "query": "Could you show me where that is located?", "rewrited_query": "Could you show me where Zen Garden is located?", "answer": {"plan": "search_location", "arguments": {"query": "Zen Garden"}}, "unique_idx": "launch_application-1544-ACTION_INSERT_EVENT-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Launch Tinder as I'm looking to check out new profiles. -> Tinder is now active.", "turn 2: Add an event named 'Dance Class' for a hip-hop session at City Dance Studio. It should start at 1700800000000 and end at 1700805400000. -> Alright, I've added 'Dance Class' to your calendar for a hip-hop session at City Dance Studio. It starts at 1700800000000 and ends at 1700805400000. Event added with URI content://calender/event/1."], "query": "Email it to my team members at team@example.com.", "rewrited_query": "Email Dance Class for a hip-hop session at City Dance Studio. It should start at 1700800000000 and end at 1700805400000 to my team members at team@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "team@example.com", "subject": "Dance Class", "body": "hip-hop session at City Dance Studio. It should start at 1700800000000 and end at 1700805400000"}}, "unique_idx": "launch_application-1545-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I require editing for the document located at content://docs/summaries/313. Load it with 'Summary for review'. -> No problem, opening content://docs/summaries/313 with 'Summary for review' ready to go.", "turn 2: Could you please create an event for a 'Client Meeting'? The discussion will be about contract details at Downtown Office from 1700600000000 to 1700603600000. -> Okay, I've scheduled 'Client Meeting' at Downtown Office from 1700600000000 to 1700603600000 for a discussion about contract details. Event saved with URI content://calender/event/2."], "query": "Send it to all the attendees at attend@example.com.", "rewrited_query": "Send Client Meeting at Downtown Office from 1700600000000 to 1700603600000 for a discussion about contract details to all the attendees at attend@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "attend@example.com", "subject": "Client Meeting", "body": "at Downtown Office from 1700600000000 to 1700603600000 for a discussion about contract details"}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1601-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Add an event for a 'Coding Bootcamp' where participants learn to code fast. The session will be held online from 1704800000000 to 1704805400000. -> 'Coding Bootcamp' scheduled online from 1704800000000 to 1704805400000. It's now on your calendar. Event URI: content://calender/event/8", "turn 2: Add to my calendar an event named 'Interview Session'. The description is 'Discussing candidate roles'. No location is specified. Please set it from 1701500000000 to 1701505400000. -> I've added 'Interview Session' to your calendar, described as 'Discussing candidate roles', scheduled from 1701500000000 to 1701505400000. Event URI: content://calender/event/9"], "query": "Email these details to recruitment@example.com.", "rewrited_query": "Email Interview Session described as Discussing candidate roles, scheduled from 1701500000000 to 1701505400000 to recruitment@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "recruitment@example.com", "subject": "Interview Session", "body": "Discussing candidate roles, scheduled from 1701500000000 to 1701505400000"}}, "unique_idx": "ACTION_INSERT_EVENT-483-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Activate Shazam; I want to identify the song playing in the background. -> Okay, opening Shazam for you.", "turn 2: Please schedule an 'Evening Meditation' session, described as a meditation for stress relief. It will take place at Zen Garden, starting at 1701400000000 and ending at 1701403600000. -> I've added 'Evening Meditation' at Zen Garden, described as a meditation for stress relief, scheduled from 1701400000000 to 1701403600000. Event saved with URI content://calender/event/10."], "query": "Can you email that to mindfulnessgroup@example.com?", "rewrited_query": "Can you email Evening Meditation at Zen Garden, described as a meditation for stress relief, scheduled from 1701400000000 to 1701403600000 to mindfulnessgroup@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "mindfulnessgroup@example.com", "subject": "Evening Meditation at Zen Garden", "body": "meditation for stress relief, scheduled from 1701400000000 to 1701403600000"}}, "unique_idx": "launch_application-1544-ACTION_INSERT_EVENT-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Launch Tinder as I'm looking to check out new profiles. -> Tinder is now active.", "turn 2: Add an event named 'Dance Class' for a hip-hop session at City Dance Studio. It should start at 1700800000000 and end at 1700805400000. -> Alright, I've added 'Dance Class' to your calendar for a hip-hop session at City Dance Studio. It starts at 1700800000000 and ends at 1700805400000. Event added with URI content://calender/event/1."], "query": "Send a text to my brother about it.", "rewrited_query": "Send a text to my brother about 'Dance Class'.", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "Dance Class"}}, "unique_idx": "launch_application-1545-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I require editing for the document located at content://docs/summaries/313. Load it with 'Summary for review'. -> No problem, opening content://docs/summaries/313 with 'Summary for review' ready to go.", "turn 2: Could you please create an event for a 'Client Meeting'? The discussion will be about contract details at Downtown Office from 1700600000000 to 1700603600000. -> Okay, I've scheduled 'Client Meeting' at Downtown Office from 1700600000000 to 1700603600000 for a discussion about contract details. Event saved with URI content://calender/event/2."], "query": "Can you text my boss about that?", "rewrited_query": "Can you text my boss about 'Client Meeting'?", "answer": {"plan": "send_message", "arguments": {"to": "my boss", "message": "Client Meeting"}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1601-ACTION_INSERT_EVENT-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Launch Tinder as I'm looking to check out new profiles. -> Tinder is now active.", "turn 2: Add an event named 'Dance Class' for a hip-hop session at City Dance Studio. It should start at 1700800000000 and end at 1700805400000. -> Alright, I've added 'Dance Class' to your calendar for a hip-hop session at City Dance Studio. It starts at 1700800000000 and ends at 1700805400000. Event added with URI content://calender/event/1."], "query": "Take me there.", "rewrited_query": "Take me to City Dance Studio.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "City Dance Studio"}}, "unique_idx": "launch_application-1545-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I would like to see my active alarms. Provide the list, please. -> Listing your active alarms: [alarm_id: 1 - 6:45 AM, Exercise, alarm_id: 2 - 1:00 PM, Lunch]", "turn 2: I want to book an event called 'Dinner Party' described as a celebration dinner for the team. It will take place at Alex's Restaurant from 1700400000000 to 1700407200000. -> I've added the 'Dinner Party' at Alex's Restaurant, a celebration dinner for the team, from 1700400000000 to 1700407200000 to your calendar. Event saved as content://calender/event/4."], "query": "Please navigate me there.", "rewrited_query": "Please navigate me to Alex's Restaurant.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Alex's Restaurant"}}, "unique_idx": "ACTION_SHOW_ALARMS-701-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Activate Shazam; I want to identify the song playing in the background. -> Okay, opening Shazam for you.", "turn 2: Please schedule an 'Evening Meditation' session, described as a meditation for stress relief. It will take place at Zen Garden, starting at 1701400000000 and ending at 1701403600000. -> I've added 'Evening Meditation' at Zen Garden, described as a meditation for stress relief, scheduled from 1701400000000 to 1701403600000. Event saved with URI content://calender/event/10."], "query": "Could you navigate me there?", "rewrited_query": "Could you navigate me to Zen Garden?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Zen Garden"}}, "unique_idx": "launch_application-1544-ACTION_INSERT_EVENT-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please arrange a 'Meetup: Startup Founders' event at the Innovation Hub. The event runs from 1704400000000 to 1704403600000. -> I've scheduled 'Meetup: Startup Founders' at the Innovation Hub from 1704400000000 to 1704403600000. Event URI: content://calender/event/5", "turn 2: Choose a person's address from my set of saved contacts. -> You got it. Please select the desired contact to view their address."], "query": "Send them a text saying 'What is your zip code?'", "rewrited_query": "Send the selected contact a text saying 'What is your zip code?'", "answer": {"plan": "send_message", "arguments": {"to": "selected contact", "message": "What is your zip code?"}}, "unique_idx": "ACTION_INSERT_EVENT-480-ACTION_PICK-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Per favore, chiama il 555-0034. -> Chiamo il 555-0034.", "turn 2: I'm looking for someone's email contact details. -> OK, I'll bring up a list of your contacts. Select one to see their email."], "query": "Send that person a text message saying 'Did you get the file?'", "rewrited_query": "Send the selected person a text message saying 'Did you get the file?'", "answer": {"plan": "send_message", "arguments": {"to": "selected person", "message": "Did you get the file?"}}, "unique_idx": "dial-991-ACTION_PICK-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please start navigation to the Summer Palace located in Beijing. -> Commencing navigation to the Summer Palace in Beijing. Estimated time of arrival will depend on current traffic conditions.", "turn 2: Get me a phone contact from my list, please. -> No problem, accessing your contacts now to pick a phone number."], "query": "Text them 'I'm on my way.'", "rewrited_query": "Text the selected phone contact 'I'm on my way.'", "answer": {"plan": "send_message", "arguments": {"to": "selected phone contact", "message": "I'm on my way."}}, "unique_idx": "ACTION_NAVIGATE_TO_LOCATION-1832-ACTION_PICK-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Change alarm 34 to ring at 15:15 and use the ringtone 'ringtone://jazz'. -> Alarm 34 is now scheduled for 3:15 PM with 'ringtone://jazz' as the ringtone.", "turn 2: Fetch a telephone number from one of my contacts. -> Sure, accessing your contacts to select a phone number."], "query": "Text that number saying 'I will call you later.'", "rewrited_query": "Text the phone number from my contacts saying 'I will call you later.'", "answer": {"plan": "send_message", "arguments": {"to": "phone number from my contacts", "message": "I will call you later."}}, "unique_idx": "ACTION_EDIT_ALARM-1724-ACTION_PICK-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Retrieve a presentation file for me; I'm looking for a PowerPoint document. -> Okay, I'm opening the file selector for PowerPoint documents now.", "turn 2: Please pick a contact from my saved contacts. -> No problem, please select a contact from the list."], "query": "Send a text to that contact saying 'Running late!'", "rewrited_query": "Send a text to the contact from the list saying 'Running late!'", "answer": {"plan": "send_message", "arguments": {"to": "contact from the list", "message": "Running late!"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-161-ACTION_PICK-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need an alarm for 05:00 but please skip showing the clock user interface. -> Okay, an alarm has been set for 5:00 AM without showing the clock UI.", "turn 2: Can I see the alarms? -> Here are your alarms: [alarm_id: 1 - 5:00 AM]"], "query": "Please set it for 11:15 PM and skip the UI.", "rewrited_query": "Please set an alarm for 11:15 PM and skip the UI.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 23, "EXTRA_MINUTES": 15, "EXTRA_SKIP_UI": true}}, "unique_idx": "ACTION_SET_ALARM-548-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Display an alarm set for 9:05 AM with the ringtone 'ringtone://morning' and the note 'Get Ready'. -> I've set an alarm for 9:05 AM with the 'Get Ready' note and the 'ringtone://morning' ringtone.", "turn 2: What are my current alarms? -> Currently active alarms: [alarm_id: 1 - 9:05 AM, Get Ready, ringtone: ringtone://morning]"], "query": "Okay, now set one for 10:00 AM with ringtone ringtone://new.", "rewrited_query": "Okay, now set an alarm for 10:00 AM with ringtone ringtone://new.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 10, "EXTRA_MINUTES": 0, "EXTRA_RINGTONE": "ringtone://new"}}, "unique_idx": "ACTION_SET_ALARM-549-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Could you kindly set an alarm for 23:59 without any extra embellishments? -> You got it. An alarm is now scheduled for 11:59 PM.", "turn 2: Check my alarms please. -> Here's a look at your alarms: [alarm_id: 1 - 11:59 PM]"], "query": "Add an alarm for 1 PM with message 'Lunch break'.", "rewrited_query": "Add an alarm for 1 PM with message 'Lunch break'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 13, "EXTRA_MINUTES": 0, "EXTRA_MESSAGE": "Lunch break"}}, "unique_idx": "ACTION_SET_ALARM-550-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set an alarm for midnight (0:00) with the label 'New Year's countdown'. -> I've set an alarm for 12:00 AM with the label 'New Year's countdown'.", "turn 2: Could you show me all of my alarms? -> Right now, you have: [alarm_id: 1 - 12:00 AM, New Year's countdown]"], "query": "Please set another one for 3:15 AM.", "rewrited_query": "Please set another alarm for 3:15 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 3, "EXTRA_MINUTES": 15}}, "unique_idx": "ACTION_SET_ALARM-551-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please set a 15:30 alarm that repeats on Saturday with the note 'Afternoon nap'. -> I've set a repeating alarm for 3:30 PM every Saturday with the message 'Afternoon nap'.", "turn 2: Show me all set alarms. -> Displaying your alarms: [alarm_id: 1 - 3:30 PM, Afternoon nap, repeats on Saturday]"], "query": "Set one for 4:45 PM, repeating on Sundays.", "rewrited_query": "Set an alarm for 4:45 PM, repeating on Sundays.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 16, "EXTRA_MINUTES": 45, "EXTRA_DAYS": ["Sunday"]}}, "unique_idx": "ACTION_SET_ALARM-552-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I require an alarm at 11:11 every Monday for a weekly check-in—label it appropriately. -> Done. I've scheduled a repeating alarm for 11:11 AM every Monday with the label 'weekly check-in'.", "turn 2: Let me see the alarms I have. -> Currently, the active alarms include: [alarm_id: 1 - 11:11 AM, weekly check-in, repeats on Monday]"], "query": "Can you set an alarm for 2:22 PM that repeats on Wednesdays with the message 'Mid-week meeting'?", "rewrited_query": "Can you set an alarm for 2:22 PM that repeats on Wednesdays with the message 'Mid-week meeting'?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 22, "EXTRA_MESSAGE": "Mid-week meeting", "EXTRA_DAYS": ["Wednesday"]}}, "unique_idx": "ACTION_SET_ALARM-553-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set an alarm for 18:20 with the message 'Dinner time' and ensure the clock UI doesn't pop up. -> OK, alarm set for 6:20 PM with the message 'Dinner time', and the UI confirmation has been skipped.", "turn 2: Let me see my current alarms. -> Currently, you have one alarm set: [alarm_id: 1 - 6:20 PM, Dinner time]."], "query": "Also set one for 7:30 AM.", "rewrited_query": "Also set an alarm for 7:30 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_SET_ALARM-554-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please create an 8:50 AM alarm labeled 'Meeting', and make sure it skips the UI confirmation and doesn't vibrate. -> Alright, an alarm is set for 8:50 AM with the label 'Meeting'. It will not vibrate, and I've skipped the UI confirmation.", "turn 2: Can you list all the alarms? -> Displaying your alarm: [alarm_id: 1 - 8:50 AM, Meeting]."], "query": "Add another one at 9:45 PM.", "rewrited_query": "Add another alarm at 9:45 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 21, "EXTRA_MINUTES": 45}}, "unique_idx": "ACTION_SET_ALARM-555-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Arrange an alarm for 19:25 that repeats on Wednesday, Thursday, and Sunday, and tag it 'Study Time'. -> OK, I've set an alarm for 7:25 PM, repeating every Wednesday, Thursday, and Sunday, labeled as 'Study Time'.", "turn 2: Display current alarms. -> Here's your alarm: [alarm_id: 1 - 7:25 PM, Study Time, repeats on Wednesday, Thursday, and Sunday]."], "query": "Set a new one for 6:00 AM.", "rewrited_query": "Set a new alarm for 6:00 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_ALARM-557-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set my alarm to 12:00 with the label 'Noon Reminder' and use the ringtone at 'http://example.com/ringtone.mp3'. -> Alarm set for 12:00 PM with the label 'Noon Reminder', and using the custom ringtone from http://example.com/ringtone.mp3.", "turn 2: Can you show me my alarms? -> Showing your current alarm: [alarm_id: 1 - 12:00 PM, Noon Reminder, using ringtone from http://example.com/ringtone.mp3]."], "query": "Set it for 3:30 PM as well.", "rewrited_query": "Set alarm for 3:30 PM as well.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 15, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_SET_ALARM-558-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set an alarm for 5:30 AM with the label 'Gym'. -> Alright, I've set your 'Gym' alarm for 5:30 AM.", "turn 2: Show me all of them. -> Here's the alarm you've set: [alarm_id: 1 - 5:30 AM, Gym]."], "query": "Also, set an alarm for 11:11 AM.", "rewrited_query": "Also, set an alarm for 11:11 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 11, "EXTRA_MINUTES": 11}}, "unique_idx": "ACTION_SET_ALARM-559-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Alarm at 22:15 with the note 'Bed time'. Also, please bypass the confirmation UI. -> No problem, alarm set for 10:15 PM with the message 'Bed time'. The confirmation UI has been skipped.", "turn 2: What are my set alarms? -> You have one alarm set: [alarm_id: 1 - 10:15 PM, Bed time]."], "query": "Please set a new alarm for 06:45.", "rewrited_query": "Please set a new alarm for 06:45.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 45}}, "unique_idx": "ACTION_SET_ALARM-560-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Could you set up an alarm for 23:45? -> Okay, alarm set for 11:45 PM.", "turn 2: Show all alarms. -> Currently, you've got one alarm: [alarm_id: 1 - 11:45 PM]."], "query": "Set another for 7:15 in the morning.", "rewrited_query": "Set another alarm for 7:15 in the morning.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 15}}, "unique_idx": "ACTION_SET_ALARM-561-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please set my alarm at 7:00 AM so that it rings every Tuesday and Thursday with the message 'Work'. -> I've set an alarm for 7:00 AM that repeats every Tuesday and Thursday with the label 'Work'.", "turn 2: What alarms do I have? -> You have the following alarm set: [alarm_id: 1 - 7:00 AM, Work, repeats on Tuesday and Thursday]."], "query": "Can you set one for 4:45 PM?", "rewrited_query": "Can you set an alarm for 4:45 PM?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 16, "EXTRA_MINUTES": 45}}, "unique_idx": "ACTION_SET_ALARM-562-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set a 10:20 alarm but ensure that it does not vibrate. -> The alarm is set for 10:20 AM, and vibration is turned off.", "turn 2: Can you display my alarms? -> Here is the alarm you've set: [alarm_id: 1 - 10:20 AM, vibration off]."], "query": "Please create one for 1:23 AM.", "rewrited_query": "Please create an alarm for 1:23 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 1, "EXTRA_MINUTES": 23}}, "unique_idx": "ACTION_SET_ALARM-563-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Would you schedule a reminder at 14:10 with the tag 'Study'? -> OK, alarm set for 2:10 PM with the label 'Study'.", "turn 2: Can you list all my alarms? -> I found one alarm: [alarm_id: 1 - 2:10 PM, Study]."], "query": "Set one for 2 PM.", "rewrited_query": "Set an alarm for 2 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_ALARM-564-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I need an alarm set for 6:00 AM without any additional bells or whistles. -> Alright, I've set an alarm for 6:00 AM.", "turn 2: What are the current alarms? -> Currently, there's one alarm: [alarm_id: 1 - 6:00 AM]."], "query": "Set another one for 7:15 AM.", "rewrited_query": "Set another alarm for 7:15 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 15}}, "unique_idx": "ACTION_SET_ALARM-565-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Make an alarm for 18:30 labeled 'Dinner time' and use the ringtone 'ringtone://dinner'. -> Alarm set for 6:30 PM with 'Dinner time' label using the ringtone 'ringtone://dinner'.", "turn 2: Can I see all the alarms that are set? -> Displaying your active alarms: [alarm_id: 1 - 6:30 PM, Dinner time]."], "query": "Then set up another for 7:45 PM with the message 'Late Dinner'.", "rewrited_query": "Then set up another alarm for 7:45 PM with the message 'Late Dinner'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 19, "EXTRA_MINUTES": 45, "EXTRA_MESSAGE": "Late Dinner"}}, "unique_idx": "ACTION_SET_ALARM-566-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Remind me with an alarm at 20:05 that carries the message 'Evening walk'. -> Okay, an alarm has been set for 8:05 PM with the message 'Evening walk'.", "turn 2: Show me the list of alarms. -> Here's the alarm list: [alarm_id: 1 - 8:05 PM, Evening walk]."], "query": "Please add one more for 10:00 AM.", "rewrited_query": "Please add one more alarm for 10:00 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 10, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_ALARM-567-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Schedule an alarm for 9:15 that repeats every Friday. -> Got it! Setting an alarm for 9:15 AM that repeats every Friday.", "turn 2: Could you display all the alarms? -> Showing all alarms: [alarm_id: 1 - 9:15 AM, repeats: Friday]."], "query": "Create one for 14:00 repeating on Mondays and Tuesdays.", "rewrited_query": "Create an alarm for 14:00 repeating on Mondays and Tuesdays.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 0, "EXTRA_DAYS": ["Monday", "Tuesday"]}}, "unique_idx": "ACTION_SET_ALARM-568-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set an alarm for 3:25 PM labeled 'Tea Break'. -> No problem, alarm set for 3:25 PM with label 'Tea Break'.", "turn 2: Tell me what alarms are active. -> Active alarms include: [alarm_id: 1 - 3:25 PM, Tea Break]."], "query": "Okay, also set it for 4:45 PM.", "rewrited_query": "Okay, also set an alarm for 4:45 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 16, "EXTRA_MINUTES": 45}}, "unique_idx": "ACTION_SET_ALARM-569-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please arrange an alarm at 11:00 with the label 'Lunch'. -> Sure, I've set an alarm for 11:00 AM with the label 'Lunch'.", "turn 2: What alarms are currently scheduled? -> Currently scheduled alarms: [alarm_id: 1 - 11:00 AM, Lunch]."], "query": "Also, make one for 16:30.", "rewrited_query": "Also, make one alarm for 16:30.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 16, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_SET_ALARM-570-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Alarm at 19:45 with a custom ringtone available at 'http://xyz.com/alert.mp3'. -> Alarm set for 7:45 PM with the ringtone from 'http://xyz.com/alert.mp3'.", "turn 2: I want to see the alarms I have set. -> Here are the alarms you've set: [alarm_id: 1 - 7:45 PM, ringtone: http://xyz.com/alert.mp3]."], "query": "Set another one for 11:11 PM with the ringtone from 'http://abc.com/ring.mp3'.", "rewrited_query": "Set another alarm for 11:11 PM with the ringtone from 'http://abc.com/ring.mp3'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 23, "EXTRA_MINUTES": 11, "EXTRA_RINGTONE": "http://abc.com/ring.mp3"}}, "unique_idx": "ACTION_SET_ALARM-571-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I'm setting an alarm for 8:55. No extra settings are needed. -> OK. Alarm is set for 8:55 AM.", "turn 2: Show me my alarms. -> Your alarms: [alarm_id: 1 - 8:55 AM]."], "query": "Can you set it for 1:23 PM too?", "rewrited_query": "Can you set an alarm for 1:23 PM too?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 13, "EXTRA_MINUTES": 23}}, "unique_idx": "ACTION_SET_ALARM-572-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set an alarm at 12:30 that repeats on Sundays and has the note 'Family Time'. -> An alarm is scheduled for 12:30 PM every Sunday with the label 'Family Time'.", "turn 2: Display the alarms. -> Displaying alarms: [alarm_id: 1 - 12:30 PM, repeats: Sunday, Family Time]."], "query": "Can you add one more for 5:00 PM on weekdays?", "rewrited_query": "Can you add one more alarm for 5:00 PM on weekdays?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 17, "EXTRA_MINUTES": 0, "EXTRA_DAYS": ["Monday", "Tuesday", "Wednesday", "Thursday", "Friday"]}}, "unique_idx": "ACTION_SET_ALARM-573-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Could you program a 10:00 alarm with the ringtone 'ringtone://chime'? -> I've set an alarm for 10:00 AM with the ringtone 'ringtone://chime'.", "turn 2: List all my alarms. -> Listing your alarms: [alarm_id: 1 - 10:00 AM, ringtone: ringtone://chime]."], "query": "Set another one for 14:00, and vibrate it.", "rewrited_query": "Set another alarm for 14:00, and vibrate it.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 0, "EXTRA_VIBRATE": true}}, "unique_idx": "ACTION_SET_ALARM-575-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Register an alarm at 17:42 with the label 'Gym Time' that repeats on Monday. -> Alright, I've scheduled an alarm for 5:42 PM labeled 'Gym Time' that will repeat every Monday.", "turn 2: Can you show me all of them? -> Currently, I only have one alarm set: [alarm_id: 1 - 5:42 PM, Gym Time, repeats on Monday]"], "query": "Also set one for 6 AM.", "rewrited_query": "Also set an alarm for 6 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_ALARM-576-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I need an alarm for 4:10 PM with the message 'Evening Meeting' and no vibration. -> Got it, alarm set for 4:10 PM with the message 'Evening Meeting', vibration is off.", "turn 2: Let me see the current alarms. -> Here's the alarm I have set for you: [alarm_id: 1 - 4:10 PM, Evening Meeting, vibration off]"], "query": "Please set another one for 7:25 AM.", "rewrited_query": "Please set another alarm for 7:25 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 25}}, "unique_idx": "ACTION_SET_ALARM-577-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please set an alarm at 2:05 AM with the message 'Early bird'. -> OK, I've set an alarm for 2:05 AM with the label 'Early bird'.", "turn 2: Can you display the alarms? -> Here is the alarm you requested: [alarm_id: 1 - 2:05 AM, Early bird]"], "query": "Also, add one for 10:30 PM.", "rewrited_query": "Also, add an alarm for 10:30 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 22, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_SET_ALARM-578-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set an alarm for 13:30 on Wednesday with a note saying 'Lunch Break'. -> Alarm is set for 1:30 PM every Wednesday, labeled 'Lunch Break'.", "turn 2: List all the alarms. -> Okay, here's the alarm I found: [alarm_id: 1 - 1:30 PM, Lunch Break, repeats on Wednesday]"], "query": "Please set another for 16:45.", "rewrited_query": "Please set another alarm for 16:45.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 16, "EXTRA_MINUTES": 45}}, "unique_idx": "ACTION_SET_ALARM-579-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Alarm for 15:55 with the message 'Study Time' and please disable the vibrate function. -> Done! Alarm created for 3:55 PM with the message 'Study Time' and no vibration.", "turn 2: Can I see what alarms are set? -> Here's the alarm you have: [alarm_id: 1 - 3:55 PM, Study Time, vibration off]"], "query": "Set one more for 11:11 AM.", "rewrited_query": "Set one more alarm for 11:11 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 11, "EXTRA_MINUTES": 11}}, "unique_idx": "ACTION_SET_ALARM-580-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Schedule a clock alarm at 17:15 with the reminder 'Wrap up work' that repeats on Thursday and Friday. -> OK, an alarm is scheduled for 5:15 PM with the message 'Wrap up work' that will repeat every Thursday and Friday.", "turn 2: Display all alarm settings. -> Currently, you have this alarm set: [alarm_id: 1 - 5:15 PM, Wrap up work, repeats on Thursday and Friday]"], "query": "Set a new one for 8:00 AM.", "rewrited_query": "Set a new alarm for 8:00 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_SET_ALARM-582-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Trigger an alarm for 6:35 with the label 'Morning jog'. -> I've set an alarm for 6:35 AM labeled 'Morning jog'.", "turn 2: What's on my alarm list? -> Alright, showing you the current alarms: [alarm_id: 1 - 6:35 AM, Morning jog]"], "query": "Can you set one for 14:20?", "rewrited_query": "Can you set an alarm for 14:20?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 20}}, "unique_idx": "ACTION_SET_ALARM-583-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I need an alarm at 23:00 with the label 'Late Night' and a specific ringtone from 'http://alerttone.com/late.mp3'. -> Okay, I've set an alarm for 11:00 PM with the label 'Late Night' and the ringtone from http://alerttone.com/late.mp3.", "turn 2: Can I see all my alarms? -> Here's a look at your alarms: [alarm_id: 1 - 11:00 PM, Late Night, ringtone from http://alerttone.com/late.mp3]"], "query": "Add one more for 3:45 AM.", "rewrited_query": "Add one more alarm for 3:45 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 3, "EXTRA_MINUTES": 45}}, "unique_idx": "ACTION_SET_ALARM-584-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please program an alarm for 7:10 with vibrate disabled and the message 'Exercise'. -> Alright, I've scheduled an alarm for 7:10 AM with the message 'Exercise', and vibration is turned off.", "turn 2: Display all alarms. -> Displaying your current alarm: [alarm_id: 1 - 7:10 AM, Exercise, vibration off]"], "query": "Also, set an alarm for 19:50.", "rewrited_query": "Also, set an alarm for 19:50.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 19, "EXTRA_MINUTES": 50}}, "unique_idx": "ACTION_SET_ALARM-585-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set my alarm to go off at 12:05 with the label 'Lunch Reminder'. -> Done! Alarm set for 12:05 PM with the label 'Lunch Reminder'.", "turn 2: What are the alarms I have right now? -> The current alarms are: [alarm_id: 1 - 12:05 PM, Lunch Reminder]"], "query": "Please create another one for 2:22 PM.", "rewrited_query": "Please create another alarm for 2:22 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 22}}, "unique_idx": "ACTION_SET_ALARM-586-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Can you change my alarm with id 10 to ring at 12:05 PM? -> Sure, alarm 10 is now set to 12:05 PM.", "turn 2: Can you show me all alarms? -> Displaying your alarms: [alarm_id: 10 - 12:05 PM]"], "query": "Please set one for 1:00 PM with the message 'Meeting'.", "rewrited_query": "Please set an alarm for 1:00 PM with the message 'Meeting'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 13, "EXTRA_MINUTES": 0, "EXTRA_MESSAGE": "Meeting"}}, "unique_idx": "ACTION_EDIT_ALARM-1680-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I need to modify alarm 4 so that it rings at 18:50, uses the ringtone at 'ringtone://unique', and doesn't show the confirmation UI. -> Alarm 4 will ring at 6:50 PM with the specified ringtone. No confirmation UI will be shown.", "turn 2: Can you display a list of alarms? -> Here's a list of your alarms: [alarm_id: 4 - 6:50 PM, ringtone: ringtone://unique]"], "query": "Could you set one for 10:30 PM?", "rewrited_query": "Could you set an alarm for 10:30 PM?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 22, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_EDIT_ALARM-1681-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Update my alarm with id 8 to 3:30 in the afternoon, set it to repeat on weekends (Saturday and Sunday), and ensure vibration is enabled. -> Got it. Alarm 8 is updated to 3:30 PM, repeating on Saturdays and Sundays, with vibration enabled.", "turn 2: Can I see all of the alarms that are currently set? -> Your alarms: [alarm_id: 8 - 3:30 PM, repeats on Saturday and Sunday, vibration enabled]"], "query": "Set another one for 4:45 AM with label 'Workout'.", "rewrited_query": "Set another alarm for 4:45 AM with label 'Workout'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 4, "EXTRA_MINUTES": 45, "EXTRA_MESSAGE": "Workout"}}, "unique_idx": "ACTION_EDIT_ALARM-1682-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please set alarm 12 to ring at 06:00 with the label 'Meeting' and turn off vibration. -> OK, alarm 12 is set to 6:00 AM with label 'Meeting', and vibration is off.", "turn 2: List my alarms please. -> Here's your alarm list: [alarm_id: 12 - 6:00 AM, Meeting, vibration off]"], "query": "Please set one for 11:11 AM.", "rewrited_query": "Please set an alarm for 11:11 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 11, "EXTRA_MINUTES": 11}}, "unique_idx": "ACTION_EDIT_ALARM-1683-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Adjust alarm id 9 to go off at 11:45 PM and remove any repeat days settings. -> Understood. Alarm 9 is adjusted to 11:45 PM, and repeat days are removed.", "turn 2: Let me see my alarms -> Your alarm: [alarm_id: 9 - 11:45 PM]"], "query": "Set one for 2:22 PM please.", "rewrited_query": "Set an alarm for 2:22 PM please.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 22}}, "unique_idx": "ACTION_EDIT_ALARM-1684-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Change alarm number 6 to 7:10 AM, set its label to 'Workout', and configure it to repeat on Monday, Wednesday, and Friday. -> Done. Alarm 6 is updated to 7:10 AM, labeled 'Workout', and will repeat on Monday, Wednesday, and Friday.", "turn 2: List out alarms that I have -> Here are the alarms you have set: [alarm_id: 6 - 7:10 AM, Workout, repeats on Monday, Wednesday, and Friday]"], "query": "Set it to 8:15 AM with message 'Wake up'.", "rewrited_query": "Set an alarm to 8:15 AM with message 'Wake up'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 15, "EXTRA_MESSAGE": "Wake up"}}, "unique_idx": "ACTION_EDIT_ALARM-1685-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Revise the alarm with id 11 to sound at 14:25 and include a note saying 'Lunch reminder'. -> Alright, alarm 11 is now set to 2:25 PM with the label 'Lunch reminder'.", "turn 2: Can you list all alarms that are currently set? -> Displaying the list of alarms: [alarm_id: 11 - 2:25 PM, Lunch reminder]"], "query": "Add one to go off at 6:00 PM.", "rewrited_query": "Add an alarm to go off at 6:00 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 18, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_EDIT_ALARM-1687-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Could you please update alarm 14 so that it rings at 8:35 AM with the message 'School', and make it repeat on weekdays? -> Sure thing! Alarm 14 is now set for 8:35 AM with the message 'School', repeating every weekday.", "turn 2: Show me all of the alarms. -> Here are your alarms: [alarm_id: 14 - 8:35 AM, School, repeats on weekdays]"], "query": "Set another one for 17:45.", "rewrited_query": "Set another alarm for 17:45.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 17, "EXTRA_MINUTES": 45}}, "unique_idx": "ACTION_EDIT_ALARM-1689-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Would you modify alarm id 20 to go off at 16:40 and prevent the clock UI from showing, while keeping the default message? -> Done. Alarm 20 will now ring at 4:40 PM without showing the clock UI.", "turn 2: What alarms do I have set? -> Currently set alarms: [alarm_id: 20 - 4:40 PM]"], "query": "Set another one for 5:50 PM.", "rewrited_query": "Set another alarm for 5:50 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 17, "EXTRA_MINUTES": 50}}, "unique_idx": "ACTION_EDIT_ALARM-1690-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please adjust alarm 1 to ring at 07:00 and set the label to 'Wake Up'. -> Affirmative, alarm 1 is now scheduled for 7:00 AM with the label 'Wake Up'.", "turn 2: Can you display all set alarms? -> Displaying all alarms: [alarm_id: 1 - 7:00 AM, Wake Up]"], "query": "Add an alarm for 14:30 with the message 'Afternoon'.", "rewrited_query": "Add an alarm for 14:30 with the message 'Afternoon'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 30, "EXTRA_MESSAGE": "Afternoon"}}, "unique_idx": "ACTION_EDIT_ALARM-1691-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Modify my alarm no. 2 so that it rings at 8:30 AM with the notification 'Breakfast time'. -> Okay, alarm 2 has been changed to 8:30 AM with the message 'Breakfast time'.", "turn 2: List my current alarms. -> Here are your current alarms: [alarm_id: 2 - 8:30 AM, Breakfast time]"], "query": "Set one for 10:00 PM to remind me to sleep.", "rewrited_query": "Set an alarm for 10:00 PM to remind me to sleep.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 22, "EXTRA_MINUTES": 0, "EXTRA_MESSAGE": "remind me to sleep"}}, "unique_idx": "ACTION_EDIT_ALARM-1692-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I need alarm 3 changed to 22:45 and want the vibration turned off. -> Understood. Alarm 3 is set to 10:45 PM, and vibration is disabled.", "turn 2: Can you show the alarms that are set? -> Showing your set alarms: [alarm_id: 3 - 10:45 PM]"], "query": "Set another one for 6:00 AM with vibration and without showing the UI.", "rewrited_query": "Set another alarm for 6:00 AM with vibration and without showing the clock app UI for confirmation.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0, "EXTRA_VIBRATE": true, "EXTRA_SKIP_UI": true}}, "unique_idx": "ACTION_EDIT_ALARM-1693-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Switch the settings for alarm id 4: set it to 6:15 AM and give it the label 'School'. -> Alarm 4 is now set to 6:15 AM and labeled 'School'.", "turn 2: What alarms are active now? -> Active alarms: [alarm_id: 4 - 6:15 AM, School]"], "query": "Set another one for 17:30 with the message 'Gym'.", "rewrited_query": "Set another alarm for 17:30 with the message 'Gym'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 17, "EXTRA_MINUTES": 30, "EXTRA_MESSAGE": "Gym"}}, "unique_idx": "ACTION_EDIT_ALARM-1694-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Update alarm 5 to go off at 9:50 AM with the title 'Meeting Alert' and disable the clock app's UI confirmation. -> All set! Alarm 5 will go off at 9:50 AM with the title 'Meeting Alert', and I've disabled the confirmation screen.", "turn 2: Show me the list of my alarms, please. -> Here's a list of your alarms: [alarm_id: 5 - 9:50 AM, Meeting Alert]"], "query": "Please create one for 11:11 AM.", "rewrited_query": "Please create an alarm for 11:11 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 11, "EXTRA_MINUTES": 11}}, "unique_idx": "ACTION_EDIT_ALARM-1695-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Change alarm number 6 to ring at 7:05 AM and repeat on Monday and Friday. -> OK, alarm number 6 is now set for 7:05 AM, repeating on Mondays and Fridays.", "turn 2: Could you show me all the alarms? -> All alarms: [alarm_id: 6 - 7:05 AM, repeats on Monday and Friday]"], "query": "Could you set one for 3 PM and repeat it on Tuesdays?", "rewrited_query": "Could you set an alarm for 3 PM and repeat it on Tuesdays?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 15, "EXTRA_MINUTES": 0, "EXTRA_DAYS": ["Tuesday"]}}, "unique_idx": "ACTION_EDIT_ALARM-1696-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Alter alarm 7 to trigger at 20:20 with the label 'Dinner' and ensure the vibration is on. -> Alright, alarm 7 is updated to 8:20 PM with label 'Dinner' and vibration enabled.", "turn 2: Can I see the current alarms? -> Your current alarms are: [alarm_id: 7 - 8:20 PM, Dinner]"], "query": "I want to create another one for 13:45.", "rewrited_query": "I want to create another alarm for 13:45.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 13, "EXTRA_MINUTES": 45}}, "unique_idx": "ACTION_EDIT_ALARM-1697-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please modify alarm 9 so that it sounds at 18:00 using the ringtone located at 'ringtone://classic'. -> Alarm 9 has been updated to 6:00 PM with the 'ringtone://classic' ringtone.", "turn 2: Could you list all my alarms? -> Listing your alarms: [alarm_id: 9 - 6:00 PM]"], "query": "Set a new one for 08:10.", "rewrited_query": "Set a new alarm for 08:10.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 8, "EXTRA_MINUTES": 10}}, "unique_idx": "ACTION_EDIT_ALARM-1699-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Edit alarm id 11 to change its time to 23:15 and tag it with 'Late Night'. -> All set! Alarm 11 is now scheduled for 11:15 PM with the label 'Late Night'.", "turn 2: Could you display my alarms? -> Displaying your alarms: [alarm_id: 11 - 11:15 PM, Late Night]"], "query": "Can you add one for 14:00 with the message 'Lunch'?", "rewrited_query": "Can you add an alarm for 14:00 with the message 'Lunch'?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 0, "EXTRA_MESSAGE": "Lunch"}}, "unique_idx": "ACTION_EDIT_ALARM-1701-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please update alarm 12 to 11:55 PM and bypass the confirmation UI. -> Alarm 12 is updated to 11:55 PM. Skipping confirmation UI.", "turn 2: Show my alarms please. -> Here are your alarms: [alarm_id: 12 - 11:55 PM]"], "query": "Could you add another one for 6:00 AM?", "rewrited_query": "Could you add another alarm for 6:00 AM?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_EDIT_ALARM-1702-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I want alarm 14 reconfigured to ring at 03:20 without any additional message. -> Okay, alarm 14 is reset to ring at 3:20 AM.", "turn 2: Show all the alarms. -> Showing your alarms: [alarm_id: 14 - 3:20 AM]"], "query": "Can you add one for 1:30 PM?", "rewrited_query": "Can you add an alarm for 1:30 PM?", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 13, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_EDIT_ALARM-1704-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Change alarm 16 to trigger at 11:00 AM. -> OK, alarm 16 has been updated to 11:00 AM.", "turn 2: What alarms are currently set? -> The current alarms are: [alarm_id: 16 - 11:00 AM]"], "query": "Add an alarm for 5:00 AM with the message 'Wake up early'.", "rewrited_query": "Add an alarm for 5:00 AM with the message 'Wake up early'.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 5, "EXTRA_MINUTES": 0, "EXTRA_MESSAGE": "Wake up early"}}, "unique_idx": "ACTION_EDIT_ALARM-1706-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Set alarm 18 to ring at 4:40 AM and have it repeat from Monday to Friday. -> Alarm 18 is now set to 4:40 AM, repeating every Monday, Tuesday, Wednesday, Thursday, and Friday.", "turn 2: What are all the alarms I have? -> Here's a list of your alarms: [alarm_id: 18 - 4:40 AM]"], "query": "Please set another one at 10:30 PM.", "rewrited_query": "Please set another alarm at 10:30 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 22, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_EDIT_ALARM-1708-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Modify alarm #19 so that it rings at 16:10 with the note 'Pick up kids'. -> I've updated alarm 19 to 4:10 PM with the label 'Pick up kids'.", "turn 2: Could you show me my current alarms? -> Displaying your current alarms: [alarm_id: 19 - 4:10 PM, Pick up kids]"], "query": "Also, set one for 6:00 AM.", "rewrited_query": "Also, set an alarm for 6:00 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_EDIT_ALARM-1709-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Can you change alarm number 22 to ring at 15:35 and disable vibrations for it? -> All set! Alarm 22 will now ring at 3:35 PM, and vibrations are disabled.", "turn 2: Show my alarms. -> OK. Here are your alarms: [alarm_id: 22 - 3:35 PM]"], "query": "Add an alarm at 12:00 PM.", "rewrited_query": "Add an alarm at 12:00 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 12, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_EDIT_ALARM-1712-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Reconfigure alarm id 23 to ring at 7:45 AM, add the note 'Yoga', and set it to repeat every day of the week. -> Understood. Alarm 23 is now set to 7:45 AM with the label 'Yoga', repeating every day.", "turn 2: What's the current alarm list? -> Here is the alarm list: [alarm_id: 23 - 7:45 AM, Yoga]"], "query": "Set a new one for 2:30 PM.", "rewrited_query": "Set a new alarm for 2:30 PM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 14, "EXTRA_MINUTES": 30}}, "unique_idx": "ACTION_EDIT_ALARM-1713-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: I need to change alarm 24 so that it rings at 13:25 with the ringtone 'ringtone://pop'. -> OK, alarm 24 is now set to 1:25 PM with the ringtone set to 'ringtone://pop'.", "turn 2: What alarms are set right now? -> Right now, you have: [alarm_id: 24 - 1:25 PM]"], "query": "Also, set it at 7:15 AM", "rewrited_query": "Also, set an alarm at 7:15 AM", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 7, "EXTRA_MINUTES": 15}}, "unique_idx": "ACTION_EDIT_ALARM-1714-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Can you modify alarm id 25 to ring at 10:15 with the label 'Team Standup'? -> Done. Alarm 25 has been changed to 10:15 AM with the label 'Team Standup'.", "turn 2: List the alarms. -> Here's the alarm list: [alarm_id: 25 - 10:15 AM, Team Standup]."], "query": "Also, set another one for 6:00 AM.", "rewrited_query": "Also, set another alarm for 6:00 AM.", "answer": {"plan": "ACTION_SET_ALARM", "arguments": {"EXTRA_HOUR": 6, "EXTRA_MINUTES": 0}}, "unique_idx": "ACTION_EDIT_ALARM-1715-ACTION_SHOW_ALARMS-1-ACTION_SET_ALARM-1"}
{"conversation_history": ["turn 1: Please open the video camera app on my phone. -> Okay, opening the video camera app.", "turn 2: Start recording the video. -> Okay, I'm now recording the video."], "query": "Text it to John.", "rewrited_query": "Text the video recording to John.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": null, "attachments": ["video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-864-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you launch my device's video recording application? -> Sure, launching the video recorder now.", "turn 2: Can you start recording with the video recorder? -> Sure, I've started recording the video."], "query": "Send it to my sister via text.", "rewrited_query": "Send the video recording to my sister via text.", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": null, "attachments": ["video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-865-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I need to record a video; open the camera in video mode. -> Alright, opening the camera in video mode.", "turn 2: Record a quick video for me. -> I'm now capturing a video for you."], "query": "Text it to +15551234567 with the message 'Check this out!'", "rewrited_query": "Text the captured video to +15551234567 with the message 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "Check this out!", "attachments": ["captured video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-866-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Open the video recorder on my device, please. -> You got it. The video recorder is now open.", "turn 2: Can you record a video with the video recorder? -> Recording has started."], "query": "Send that to Mom with a note saying 'Having fun!'", "rewrited_query": "Send the recorded video to Mom with a note saying 'Having fun!'", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "Having fun!", "attachments": ["the recorded video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-867-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Start the camera app for capturing videos right away. -> Initiating video capture mode.", "turn 2: Start recording a video now. -> I've started recording."], "query": "Send it to my group chat.", "rewrited_query": "Send the recorded video to my group chat.", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "", "attachments": ["the recorded video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-868-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Launch the system camera to record a video. -> The system camera is launching for video recording.", "turn 2: Go ahead and begin the video capture. -> Commencing video capture."], "query": "Text it to Sarah and say 'Take a look at this'.", "rewrited_query": "Text the video capture to Sarah and say 'Take a look at this'.", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Take a look at this", "attachments": ["the video capture"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-869-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Activate the device's video capture mode by opening the camera. -> Activating video capture mode now.", "turn 2: Now, start the recording process. -> Okay, recording now!"], "query": "Send it via text to 555-222-3333 with the message 'Greetings!'", "rewrited_query": "Send the recording via text to 555-222-3333 with the message 'Greetings!'", "answer": {"plan": "send_message", "arguments": {"to": "555-222-3333", "message": "Greetings!", "attachments": ["the recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-870-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I want to shoot a video; please open the video camera. -> No problem, opening the video camera.", "turn 2: Start recording the video now. -> The video recording has now started."], "query": "Send that recording to my friend Mike.", "rewrited_query": "Send that video recording to my friend Mike.", "answer": {"plan": "send_message", "arguments": {"to": "my friend Mike", "message": "", "attachments": ["that video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-871-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you get the video recording function started? I'd like to record something. -> Starting the video recording function now.", "turn 2: Please begin recording the video. -> I am now starting the video recording."], "query": "Can you send it to David with the message 'I wanted to share this with you'?", "rewrited_query": "Can you send the video recording to David with the message 'I wanted to share this with you'?", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "I wanted to share this with you", "attachments": ["the video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-872-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Initiate my device's video recording application now. -> As you wish, initiating the video recording application.", "turn 2: Let's record a video. -> Alright, initiating video recording."], "query": "Text it to my brother.", "rewrited_query": "Text the recorded video to my brother.", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "", "attachments": ["the recorded video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-873-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Can you open the video recording interface on my smartphone? -> Sure, opening the video camera now.", "turn 2: Start recording now. -> Okay, video recording has started."], "query": "Send that to my mom.", "rewrited_query": "Send the video recording to my mom.", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "", "attachments": ["the video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-875-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Open up the system's video camera app for recording. -> Affirmative. The video camera application is now open.", "turn 2: Start recording and let the camera app decide where to save it. -> Commencing video recording; the camera app will determine the storage location."], "query": "Text that to +15551234567 with the message 'Check this out!'", "rewrited_query": "Text the video recording to +15551234567 with the message 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "Check this out!", "attachments": ["the video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-877-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I require to record a video clip; start the video camera. -> Got it, launching the video camera for you.", "turn 2: Could you begin recording the video now? -> Recording has begun."], "query": "Once it is done, send it to my sister.", "rewrited_query": "Once the video recording is done, send it to my sister.", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "", "attachments": ["the video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-878-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you please launch the video recording app? -> Certainly, opening the video recording app.", "turn 2: Proceed to record a video without a specified save location. -> Understood, I'm now recording video. The video will be saved in the default location."], "query": "Send that with 'Hey, check this out' to John.", "rewrited_query": "Send the video with 'Hey, check this out' to John.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Hey, check this out", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-880-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I need to make a video; open the video camera for me. -> No problem, opening the video camera.", "turn 2: Begin to record a video. -> Initiating video recording."], "query": "Send it to Sarah.", "rewrited_query": "Send the video to Sarah.", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-881-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Boot up the video camera app on my device. -> Booting up the video camera application now.", "turn 2: Start to record a video now. -> Roger, starting the video recording."], "query": "Text that to +15559876543.", "rewrited_query": "Text the video recording to +15559876543.", "answer": {"plan": "send_message", "arguments": {"to": "+15559876543", "message": "", "attachments": ["video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-883-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I want to shoot a video now. Could you start the video camera app? -> Sure, launching the video camera app now.", "turn 2: Can you record the video without specifying the save location? -> Affirmative. Commencing recording. The video will be saved in the default location."], "query": "Send that to my group chat with the message 'Latest update'.", "rewrited_query": "Send the video to my group chat with the message 'Latest update'.", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "Latest update", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-885-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Initiate video recording by launching the camera application. -> Got it, opening the video camera.", "turn 2: Can you begin the video capture now? -> Beginning video capture."], "query": "Send it to my friend.", "rewrited_query": "Send the video capture to my friend.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "", "attachments": ["video capture"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-886-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please switch on the video recording function on my phone. -> Alright, switching to video recording mode.", "turn 2: Go ahead and start recording the video. -> Now recording the video."], "query": "Send that to Mom and Dad.", "rewrited_query": "Send the video to Mom and Dad.", "answer": {"plan": "send_message", "arguments": {"to": "Mom and Dad", "message": "", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-887-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Can you fire up the video mode in my camera app? -> You got it! Firing up the video camera now.", "turn 2: Start capturing video, without any specific file URI. -> Ok, capturing video now and saving to default location."], "query": "Send it to +15558675309 with this message 'Take a look at this!'", "rewrited_query": "Send the video to +15558675309 with this message 'Take a look at this!'", "answer": {"plan": "send_message", "arguments": {"to": "+15558675309", "message": "Take a look at this!", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-888-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Turn on video capture mode on the camera app. -> Turning on video capture mode.", "turn 2: Please start recording the video. -> Now recording. I will save the video for you."], "query": "Send it to marketing@company.com.", "rewrited_query": "Send the video to marketing@company.com.", "answer": {"plan": "send_email", "arguments": {"to": "marketing@company.com", "attachments": ["video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-891-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Fire up the video recording mode on my smartphone's camera. -> Initiating video recording mode.", "turn 2: Go ahead and start the recording. -> Beginning the recording session now."], "query": "Send it to support@example.com", "rewrited_query": "Send the video to support@example.com", "answer": {"plan": "send_email", "arguments": {"to": "support@example.com", "body": "the video"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-898-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Can you get my video camera ready for a recording session? -> Preparing the video camera for recording.", "turn 2: Start the video recording. -> Starting video capture. The video will be saved when you stop recording."], "query": "Email it to feedback@company.com", "rewrited_query": "Email the video to feedback@company.com", "answer": {"plan": "send_email", "arguments": {"to": "feedback@company.com", "body": "the video"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-899-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Launch the video camera mode on my device immediately. -> As you wish! Video camera mode activated.", "turn 2: Great, begin video recording. -> Okay, recording has commenced. The video will be saved automatically."], "query": "Send it to my brother, message him I recorded this video for him", "rewrited_query": "Send the video that has been saved automatically to my brother, message him I recorded this video for him", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "I recorded this video for him", "attachments": ["video that has been saved automatically"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-889-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please initiate the system's video recording software. -> Initiating video recording software.", "turn 2: Okay, please proceed to start capturing video now. -> Commencing video capture now."], "query": "Text it to 555-123-4567 with a message saying 'Check this out!'", "rewrited_query": "Text the video that is being captured now to 555-123-4567 with a message saying 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Check this out!", "attachments": ["video that is being captured now"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-890-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Turn on video capture mode on the camera app. -> Turning on video capture mode.", "turn 2: Please start recording the video. -> Now recording. I will save the video for you."], "query": "Send that to John with the message 'Here is the video'", "rewrited_query": "Send the video that I will save for you to John with the message 'Here is the video'", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "Here is the video", "attachments": ["video that I will save for you"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-891-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly open the video mode in the camera application. -> Certainly, opening video mode for you.", "turn 2: Now, please start recording. -> Video recording started."], "query": "Text it to my mom with the message: I wanted to share this moment with you!", "rewrited_query": "Text the recorded video to my mom with the message: I wanted to share this moment with you!", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "I wanted to share this moment with you!", "attachments": ["the recorded video"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-892-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I need to record an event; start the video camera please. -> Understood. Starting the video camera now.", "turn 2: Start capturing the video. -> Roger that. Recording in progress."], "query": "Send it to Sarah with the message 'Just recorded this'", "rewrited_query": "Send the video that is recording in progress to Sarah with the message 'Just recorded this'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Just recorded this", "attachments": ["the video that is recording in progress"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-893-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you launch the app that lets me record videos? -> Alright, launching the video camera now.", "turn 2: Can you start recording now? -> Initiating video recording."], "query": "Send it to my email group with the message 'sharing is caring'", "rewrited_query": "Send the video that is initiating video recording to my email group with the message 'sharing is caring'", "answer": {"plan": "send_message", "arguments": {"to": "my email group", "message": "sharing is caring", "attachments": ["the video that is initiating video recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-894-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you start the tool that lets me record videos on my device? -> Got it, starting the video recording tool.", "turn 2: Let's begin the video recording. -> Starting the video recording now."], "query": "Send this recording to my friend at 555-555-5555, and tell him to watch it!", "rewrited_query": "Send the video recording now to my friend at 555-555-5555, and tell him to watch it!", "answer": {"plan": "send_message", "arguments": {"to": "555-555-5555", "message": "watch it!", "attachments": ["the video recording now"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-896-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I need the camera app in video mode; please open it up. -> Opening the camera in video mode.", "turn 2: Could you please start recording? -> Affirmative. Video recording has now started."], "query": "Send this to Mom with the message 'Look what I did!'", "rewrited_query": "Send the video recording has now started to Mom with the message 'Look what I did!'", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "Look what I did!", "attachments": ["the video recording has now started"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-897-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Fire up the video recording mode on my smartphone's camera. -> Initiating video recording mode.", "turn 2: Go ahead and start the recording. -> Beginning the recording session now."], "query": "Send that to my family, the message is 'Hey Family, check this out!'", "rewrited_query": "Send the recording session now to my family, the message is 'Hey Family, check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "my family", "message": "Hey Family, check this out!", "attachments": ["the recording session now"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-898-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Can you get my video camera ready for a recording session? -> Preparing the video camera for recording.", "turn 2: Start the video recording. -> Starting video capture. The video will be saved when you stop recording."], "query": "Send it to my friend and tell him 'This is for you'", "rewrited_query": "Send the video that will be saved when you stop recording to my friend and tell him 'This is for you'", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "This is for you", "attachments": ["the video that will be saved when you stop recording"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-899-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to record a scene; open up the video camera function. -> Activating the video camera function.", "turn 2: Please initiate the video capture. -> Capturing video. You can find it at content://recorded_videos/new_video.mp4."], "query": "Please play it for me.", "rewrited_query": "Please play the video at content://recorded_videos/new_video.mp4 for me.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://recorded_videos/new_video.mp4", "mime_type": "video/mp4"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-901-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Kindly initialize the video camera tool so I can record a video. -> Initializing the video camera for recording.", "turn 2: Let’s get started with the recording. -> Starting the recording. The file will be available at content://avc/temp_video.3gp."], "query": "Can you play it?", "rewrited_query": "Can you play the video at content://avc/temp_video.3gp?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://avc/temp_video.3gp", "mime_type": "video/3gpp"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-903-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Record the video now. -> Video recording in progress. Saved to content://myvideos/clip001."], "query": "Open it.", "rewrited_query": "Open the video at content://myvideos/clip001.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://myvideos/clip001"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Activate the camera's video recording mode, please. -> Alright, opening the video camera now.", "turn 2: Can you start recording? -> Now recording. You can access it through content://camera_app/recorded/vid_2024."], "query": "Show me the video.", "rewrited_query": "Show me the video at content://camera_app/recorded/vid_2024.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://camera_app/recorded/vid_2024"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-905-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Could you turn on the video recorder on my smartphone? -> Affirmative, activating video recorder.", "turn 2: Begin the recording. -> Recording has commenced. The resulting video will be stored at content://media/external/video/media/42."], "query": "Play it please.", "rewrited_query": "Play the video at content://media/external/video/media/42 please.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/external/video/media/42"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-907-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Requesting the activation of video capture on my device. -> Acknowledged. Video capture is now active.", "turn 2: Let's start recording. -> Beginning recording. The saved file URI is content://filemanager/videos/2024-01-01_120000.mp4."], "query": "Can I view it?", "rewrited_query": "Can I view the video at content://filemanager/videos/2024-01-01_120000.mp4?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://filemanager/videos/2024-01-01_120000.mp4", "mime_type": "video/mp4"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-908-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please boot the video mode in the camera so I can record now. -> Video mode activated; ready to record.", "turn 2: Start filming, please. -> Filming now! Stored as content://video_storage/DCIM/VID_0001.mp4."], "query": "Please, could you show it to me?", "rewrited_query": "Please, could you show the video at content://video_storage/DCIM/VID_0001.mp4 to me?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://video_storage/DCIM/VID_0001.mp4", "mime_type": "video/mp4"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-909-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I urge you to open the video camera application for recording. -> As you wish. Opening video camera.", "turn 2: Commence recording. -> Commencing video capture. Your video will be located at content://com.android.providers.media.documents/document/video%3A31."], "query": "Can you show me the video?", "rewrited_query": "Can you show me the video at content://com.android.providers.media.documents/document/video%3A31?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://com.android.providers.media.documents/document/video%3A31"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-910-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Kindly trigger the video function in the camera app so I can film. -> Triggering video function now.", "turn 2: Start the video recording process. -> Recording video. Video saved as content://0@media/external/video/media/133."], "query": "Play it back now.", "rewrited_query": "Play the video at content://0@media/external/video/media/133 back now.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://0@media/external/video/media/133"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-911-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: I would like to record a scene; open up the video camera function. -> Activating the video camera function.", "turn 2: Please initiate the video capture. -> Capturing video. You can find it at content://recorded_videos/new_video.mp4."], "query": "Send it to john.d@example.com.", "rewrited_query": "Send content://recorded_videos/new_video.mp4 to john.d@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "john.d@example.com", "attachments": ["content://recorded_videos/new_video.mp4"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-901-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Record the video now. -> Video recording in progress. Saved to content://myvideos/clip001."], "query": "Can you send that video to jane.doe@company.com?", "rewrited_query": "Can you send content://myvideos/clip001 to jane.doe@company.com?", "answer": {"plan": "send_email", "arguments": {"to": "jane.doe@company.com", "attachments": ["content://myvideos/clip001"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Requesting the activation of video capture on my device. -> Acknowledged. Video capture is now active.", "turn 2: Let's start recording. -> Beginning recording. The saved file URI is content://filemanager/videos/2024-01-01_120000.mp4."], "query": "Email it to support@example.com with the subject 'Bug Report'.", "rewrited_query": "Email content://filemanager/videos/2024-01-01_120000.mp4 to support@example.com with the subject 'Bug Report'.", "answer": {"plan": "send_email", "arguments": {"to": "support@example.com", "subject": "Bug Report", "attachments": ["content://filemanager/videos/2024-01-01_120000.mp4"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-908-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Please boot the video mode in the camera so I can record now. -> Video mode activated; ready to record.", "turn 2: Start filming, please. -> Filming now! Stored as content://video_storage/DCIM/VID_0001.mp4."], "query": "Email that video to marketing@company.com.", "rewrited_query": "Email content://video_storage/DCIM/VID_0001.mp4 to marketing@company.com.", "answer": {"plan": "send_email", "arguments": {"to": "marketing@company.com", "attachments": ["content://video_storage/DCIM/VID_0001.mp4"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-909-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Kindly trigger the video function in the camera app so I can film. -> Triggering video function now.", "turn 2: Start the video recording process. -> Recording video. Video saved as content://0@media/external/video/media/133."], "query": "Attach it to an email to test@example.com.", "rewrited_query": "Attach content://0@media/external/video/media/133 to an email to test@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "test@example.com", "attachments": ["content://0@media/external/video/media/133"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-911-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Set the camera to video mode, please. -> Switching camera to video mode.", "turn 2: Record video now. -> Recording video now. The video will be saved to content://media/12345."], "query": "Send it to John.", "rewrited_query": "Send content://media/12345 to John.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "", "attachments": ["content://media/12345"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-900-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to record a scene; open up the video camera function. -> Activating the video camera function.", "turn 2: Please initiate the video capture. -> Capturing video. You can find it at content://recorded_videos/new_video.mp4."], "query": "Text it to my mom with the message 'Check this out!'", "rewrited_query": "Text content://recorded_videos/new_video.mp4 to my mom with the message 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "Check this out!", "attachments": ["content://recorded_videos/new_video.mp4"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-901-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly initialize the video camera tool so I can record a video. -> Initializing the video camera for recording.", "turn 2: Let’s get started with the recording. -> Starting the recording. The file will be available at content://avc/temp_video.3gp."], "query": "Send it to +15551234567.", "rewrited_query": "Send content://avc/temp_video.3gp to +15551234567.", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "", "attachments": ["content://avc/temp_video.3gp"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-903-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Record the video now. -> Video recording in progress. Saved to content://myvideos/clip001."], "query": "Send that to my group chat.", "rewrited_query": "Send content://myvideos/clip001 to my group chat.", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "", "attachments": ["content://myvideos/clip001"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Activate the camera's video recording mode, please. -> Alright, opening the video camera now.", "turn 2: Can you start recording? -> Now recording. You can access it through content://camera_app/recorded/vid_2024."], "query": "Send it via SMS to my brother.", "rewrited_query": "Send content://camera_app/recorded/vid_2024 via SMS to my brother.", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "", "attachments": ["content://camera_app/recorded/vid_2024"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-905-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Could you turn on the video recorder on my smartphone? -> Affirmative, activating video recorder.", "turn 2: Begin the recording. -> Recording has commenced. The resulting video will be stored at content://media/external/video/media/42."], "query": "Send it to Sarah with the message 'Take a look at this'.", "rewrited_query": "Send content://media/external/video/media/42 to Sarah with the message 'Take a look at this'.", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Take a look at this", "attachments": ["content://media/external/video/media/42"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-907-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Requesting the activation of video capture on my device. -> Acknowledged. Video capture is now active.", "turn 2: Let's start recording. -> Beginning recording. The saved file URI is content://filemanager/videos/2024-01-01_120000.mp4."], "query": "Can you text it to David with the message 'I wanted to share this memory with you.'?", "rewrited_query": "Can you text content://filemanager/videos/2024-01-01_120000.mp4 to David with the message 'I wanted to share this memory with you.'?", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "I wanted to share this memory with you.", "attachments": ["content://filemanager/videos/2024-01-01_120000.mp4"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-908-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please boot the video mode in the camera so I can record now. -> Video mode activated; ready to record.", "turn 2: Start filming, please. -> Filming now! Stored as content://video_storage/DCIM/VID_0001.mp4."], "query": "Text it to my friend Emily.", "rewrited_query": "Text content://video_storage/DCIM/VID_0001.mp4 to my friend Emily.", "answer": {"plan": "send_message", "arguments": {"to": "my friend Emily", "message": "", "attachments": ["content://video_storage/DCIM/VID_0001.mp4"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-909-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: I urge you to open the video camera application for recording. -> As you wish. Opening video camera.", "turn 2: Commence recording. -> Commencing video capture. Your video will be located at content://com.android.providers.media.documents/document/video%3A31."], "query": "Send it to +15559876543 with the message 'Funny moment!'", "rewrited_query": "Send content://com.android.providers.media.documents/document/video%3A31 to +15559876543 with the message 'Funny moment!'", "answer": {"plan": "send_message", "arguments": {"to": "+15559876543", "message": "Funny moment!", "attachments": ["content://com.android.providers.media.documents/document/video%3A31"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-910-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly trigger the video function in the camera app so I can film. -> Triggering video function now.", "turn 2: Start the video recording process. -> Recording video. Video saved as content://0@media/external/video/media/133."], "query": "Send it to Bob.", "rewrited_query": "Send content://0@media/external/video/media/133 to Bob.", "answer": {"plan": "send_message", "arguments": {"to": "Bob", "message": "", "attachments": ["content://0@media/external/video/media/133"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-911-ACTION_VIDEO_CAPTURE-1-send_message-1"}
{"conversation_history": ["turn 1: Please start my video recording tool for capturing a live event. -> Starting video recording tool.", "turn 2: Could you record now? -> Okay, I'm now recording the video. The video is saved at content://media/0/Video/MyVideo."], "query": "Can you show it to me?", "rewrited_query": "Can you show content://media/0/Video/MyVideo to me?", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://media/0/Video/MyVideo"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-912-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Engage the video recording application on my phone immediately. -> Engaging video recording application.", "turn 2: Okay, start the recording. -> Understood, video recording has started. The file is being saved to content://recorded_video/file123.mp4."], "query": "Please, play it for me.", "rewrited_query": "Please, play content://recorded_video/file123.mp4 for me.", "answer": {"plan": "ACTION_OPEN_CONTENT", "arguments": {"uri": "content://recorded_video/file123.mp4", "mime_type": "video/mp4"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-913-ACTION_VIDEO_CAPTURE-1-ACTION_OPEN_CONTENT-1"}
{"conversation_history": ["turn 1: Please start my video recording tool for capturing a live event. -> Starting video recording tool.", "turn 2: Could you record now? -> Okay, I'm now recording the video. The video is saved at content://media/0/Video/MyVideo."], "query": "Can you email that video to john@example.com?", "rewrited_query": "Can you email content://media/0/Video/MyVideo to john@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "john@example.com", "attachments": ["content://media/0/Video/MyVideo"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-912-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Engage the video recording application on my phone immediately. -> Engaging video recording application.", "turn 2: Okay, start the recording. -> Understood, video recording has started. The file is being saved to content://recorded_video/file123.mp4."], "query": "Send it to support@company.com, please.", "rewrited_query": "Send content://recorded_video/file123.mp4 to support@company.com, please.", "answer": {"plan": "send_email", "arguments": {"to": "support@company.com", "attachments": ["content://recorded_video/file123.mp4"]}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-913-ACTION_VIDEO_CAPTURE-1-send_email-1"}
{"conversation_history": ["turn 1: Please update the contact for John using URI content://contacts/people/john; his phone number should now be 123-456-7890. -> Okay, I'm updating John's contact with the new phone number 123-456-7890.  The edited contact URI is content://contacts/people/john.", "turn 2: Can I see the updated contact info of content://contacts/people/john? -> Okay, I'm opening the contact details for content://contacts/people/john."], "query": "Send him a text saying 'Your appointment is confirmed.'", "rewrited_query": "Send 123-456-7890 a text saying 'Your appointment is confirmed.'", "answer": {"plan": "send_message", "arguments": {"to": "123-456-7890", "message": "Your appointment is confirmed."}}, "unique_idx": "ACTION_EDIT_CONTACT-56-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you edit the details for my coworker at content://contacts/people/alice to update her email to alice@example.com and set her company to AcmeCorp? -> No problem! I'm updating Alice's contact information with the email alice@example.com and company AcmeCorp. The contact URI is now content://contacts/people/alice.", "turn 2: Show me content://contacts/people/alice contact details now. -> Displaying the contact card for content://contacts/people/alice."], "query": "Send her a message saying 'Please review the new document.'", "rewrited_query": "Send alice@example.com a message saying 'Please review the new document.'", "answer": {"plan": "send_message", "arguments": {"to": "alice@example.com", "message": "Please review the new document."}}, "unique_idx": "ACTION_EDIT_CONTACT-57-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to change the address for the contact at content://contacts/people/robert. Please update his address to '123 Elm Street'. -> I've updated Robert's address to '123 Elm Street'. The edited contact can be found at content://contacts/people/robert.", "turn 2: Can you pull up content://contacts/people/robert contact card? -> Sure, pulling up the contact card for content://contacts/people/robert now."], "query": "Send him a text: 'I'm outside.'", "rewrited_query": "Send Robert a text: 'I'm outside.'", "answer": {"plan": "send_message", "arguments": {"to": "Robert", "message": "I'm outside."}}, "unique_idx": "ACTION_EDIT_CONTACT-58-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Modify the contact data for the person at URI content://contacts/people/sam by changing the name to 'Samuel Lee'. -> I've changed the contact's name to Samuel Lee. The URI for the updated contact is content://contacts/people/sam.", "turn 2: Can you show me content://contacts/people/sam contact? -> Here is the contact information for content://contacts/people/sam."], "query": "Send him a message 'Happy Birthday!'", "rewrited_query": "Send Samuel Lee a message 'Happy Birthday!'", "answer": {"plan": "send_message", "arguments": {"to": "Samuel Lee", "message": "Happy Birthday!"}}, "unique_idx": "ACTION_EDIT_CONTACT-59-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Update my friend Anna's contact that is on content://contacts/people/anna: set her email to anna@domain.org and phone to 555-1234. -> I've updated Anna's contact with the email address anna@domain.org and the phone number 555-1234. Access the contact at content://contacts/people/anna.", "turn 2: Now, can you show me the updated contact at content://contacts/people/anna? -> Alright, opening the contact details for content://contacts/people/anna."], "query": "Send a message to her saying, 'See you tomorrow.'", "rewrited_query": "Send a message to anna@domain.org saying, 'See you tomorrow.'", "answer": {"plan": "send_message", "arguments": {"to": "anna@domain.org", "message": "See you tomorrow."}}, "unique_idx": "ACTION_EDIT_CONTACT-60-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to open the edit interface for the contact at content://contacts/people/michael without any immediate changes. -> Okay, I'm opening the edit interface for the contact at content://contacts/people/michael. You can make your changes there.", "turn 2: Can you show me the current contact card for contact at content://contacts/people/michael? -> Displaying the contact card for content://contacts/people/michael."], "query": "Text him 'Are you free for lunch?'", "rewrited_query": "Text michael 'Are you free for lunch?'", "answer": {"plan": "send_message", "arguments": {"to": "michael", "message": "Are you free for lunch?"}}, "unique_idx": "ACTION_EDIT_CONTACT-61-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please update my mentor's details; use the contact URI content://contacts/people/jane and change her company to TechSoft. -> Alright, I'm updating Jane's company to TechSoft. The updated contact URI is content://contacts/people/jane.", "turn 2: Let me see the current contact card for content://contacts/people/jane. -> Showing the contact card for content://contacts/people/jane."], "query": "Can you send her a message saying 'Thank you for your guidance.'?", "rewrited_query": "Can you send Jane a message saying 'Thank you for your guidance.'?", "answer": {"plan": "send_message", "arguments": {"to": "Jane", "message": "Thank you for your guidance."}}, "unique_idx": "ACTION_EDIT_CONTACT-62-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Edit the contact located at content://contacts/people/roboto: modify the address to '456 Silicon Blvd' and update the phone number to 987-654-3210. -> I've updated the contact at content://contacts/people/roboto. The address is now '456 Silicon Blvd' and the phone number is 987-654-3210.", "turn 2: Show me the content://contacts/people/roboto contact card. -> Here is the contact card for content://contacts/people/roboto."], "query": "Text him 'Meeting at 3 PM today.'", "rewrited_query": "Text 987-654-3210 'Meeting at 3 PM today.'", "answer": {"plan": "send_message", "arguments": {"to": "987-654-3210", "message": "Meeting at 3 PM today."}}, "unique_idx": "ACTION_EDIT_CONTACT-63-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you adjust the contact details for the URI content://contacts/people/carter by changing the email to carter@company.com? -> I've changed Carter's email address to carter@company.com. The updated contact is at content://contacts/people/carter.", "turn 2: Display the updated content://contacts/people/carter contact card. -> Now displaying the contact information for content://contacts/people/carter."], "query": "Send her a text saying 'Can we reschedule our meeting?'", "rewrited_query": "Send carter@company.com a text saying 'Can we reschedule our meeting?'", "answer": {"plan": "send_message", "arguments": {"to": "carter@company.com", "message": "Can we reschedule our meeting?"}}, "unique_idx": "ACTION_EDIT_CONTACT-64-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly update my business partner's contact information at content://contacts/people/kelly so that the name field is now 'Kelly Brown'. -> I've updated the contact's name to Kelly Brown. The URI for the updated contact is content://contacts/people/kelly.", "turn 2: Now, can you show me content://contacts/people/kelly? -> Okay, opening the contact details for content://contacts/people/kelly."], "query": "Send her a message saying 'The contract is ready.'", "rewrited_query": "Send Kelly Brown a message saying 'The contract is ready.'", "answer": {"plan": "send_message", "arguments": {"to": "Kelly Brown", "message": "The contract is ready."}}, "unique_idx": "ACTION_EDIT_CONTACT-65-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Update my friend Anna's contact that is on content://contacts/people/anna: set her email to anna@domain.org and phone to 555-1234. -> I've updated Anna's contact with the email address anna@domain.org and the phone number 555-1234. Access the contact at content://contacts/people/anna.", "turn 2: Now, can you show me the updated contact at content://contacts/people/anna? -> Alright, opening the contact details for content://contacts/people/anna."], "query": "Look up her address.", "rewrited_query": "Look up Anna's address.", "answer": {"plan": "search_location", "arguments": {"query": "Anna's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-60-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I want to open the edit interface for the contact at content://contacts/people/michael without any immediate changes. -> Okay, I'm opening the edit interface for the contact at content://contacts/people/michael. You can make your changes there.", "turn 2: Can you show me the current contact card for contact at content://contacts/people/michael? -> Displaying the contact card for content://contacts/people/michael."], "query": "Find his address on a map.", "rewrited_query": "Find Michael's address on a map.", "answer": {"plan": "search_location", "arguments": {"query": "Michael's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-61-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please update my mentor's details; use the contact URI content://contacts/people/jane and change her company to TechSoft. -> Alright, I'm updating Jane's company to TechSoft. The updated contact URI is content://contacts/people/jane.", "turn 2: Let me see the current contact card for content://contacts/people/jane. -> Showing the contact card for content://contacts/people/jane."], "query": "Can you search for her workplace?", "rewrited_query": "Can you search for TechSoft's address?", "answer": {"plan": "search_location", "arguments": {"query": "TechSoft's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-62-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Edit the contact located at content://contacts/people/roboto: modify the address to '456 Silicon Blvd' and update the phone number to 987-654-3210. -> I've updated the contact at content://contacts/people/roboto. The address is now '456 Silicon Blvd' and the phone number is 987-654-3210.", "turn 2: Show me the content://contacts/people/roboto contact card. -> Here is the contact card for content://contacts/people/roboto."], "query": "Show me that address on the map.", "rewrited_query": "Show me 456 Silicon Blvd on the map.", "answer": {"plan": "search_location", "arguments": {"query": "456 Silicon Blvd"}}, "unique_idx": "ACTION_EDIT_CONTACT-63-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you adjust the contact details for the URI content://contacts/people/carter by changing the email to carter@company.com? -> I've changed Carter's email address to carter@company.com. The updated contact is at content://contacts/people/carter.", "turn 2: Display the updated content://contacts/people/carter contact card. -> Now displaying the contact information for content://contacts/people/carter."], "query": "Find the location of his workplace.", "rewrited_query": "Find the location of Carter's workplace.", "answer": {"plan": "search_location", "arguments": {"query": "Carter's workplace"}}, "unique_idx": "ACTION_EDIT_CONTACT-64-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Kindly update my business partner's contact information at content://contacts/people/kelly so that the name field is now 'Kelly Brown'. -> I've updated the contact's name to Kelly Brown. The URI for the updated contact is content://contacts/people/kelly.", "turn 2: Now, can you show me content://contacts/people/kelly? -> Okay, opening the contact details for content://contacts/people/kelly."], "query": "Search her address.", "rewrited_query": "Search Kelly Brown's address.", "answer": {"plan": "search_location", "arguments": {"query": "Kelly Brown's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-65-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you modify Lucy's information at content://contacts/people/lucy? I'd like to set her email to lucy@home.net. -> Okay, I'm updating Lucy's email to lucy@home.net at content://contacts/people/lucy.", "turn 2: Can I see content://contacts/people/lucy updated contact info? -> Here's the updated contact information for Lucy: content://contacts/people/lucy."], "query": "Text her 'Email updated!'", "rewrited_query": "Text Lucy 'Email updated!'", "answer": {"plan": "send_message", "arguments": {"to": "Lucy", "message": "Email updated!"}}, "unique_idx": "ACTION_EDIT_CONTACT-76-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to update the contact at content://contacts/people/dave: change his phone to 555-0001 and set his company to Innovate Inc. -> I'm on it! I'm updating Dave's phone number to 555-0001 and his company to Innovate Inc. at content://contacts/people/dave.", "turn 2: Can you show me content://contacts/people/dave contact details now? -> Displaying Dave's contact details now: content://contacts/people/dave."], "query": "Send him a text saying 'Your contact info has been updated.'", "rewrited_query": "Send Dave a text saying 'Your contact info has been updated.'", "answer": {"plan": "send_message", "arguments": {"to": "Dave", "message": "Your contact info has been updated."}}, "unique_idx": "ACTION_EDIT_CONTACT-77-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly modify Rachel's contact at content://contacts/people/rachel by setting her address to '789 Cherry Lane'. -> No problem, I'm setting Rachel's address to 789 Cherry Lane at content://contacts/people/rachel.", "turn 2: Show me the updated contact card for content://contacts/people/rachel. -> Here is Rachel's updated contact card: content://contacts/people/rachel."], "query": "Send her a message saying 'Address changed.'", "rewrited_query": "Send Rachel a message saying 'Address changed.'", "answer": {"plan": "send_message", "arguments": {"to": "Rachel", "message": "Address changed."}}, "unique_idx": "ACTION_EDIT_CONTACT-78-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please revise the record at content://contacts/people/paul by updating his phone number to 800-555-1234. -> I am updating Paul's phone number to 800-555-1234 at content://contacts/people/paul.", "turn 2: Can you pull up content://contacts/people/paul contact details? -> Fetching Paul's contact information: content://contacts/people/paul."], "query": "Text him 'Number updated, cheers!'", "rewrited_query": "Text Paul 'Number updated, cheers!'", "answer": {"plan": "send_message", "arguments": {"to": "Paul", "message": "Number updated, cheers!"}}, "unique_idx": "ACTION_EDIT_CONTACT-79-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Edit the contact at URI content://contacts/people/anna2: update the name to 'Anna Lee' and the email to anna.lee@mail.com. -> Ok, I'm updating the name to Anna Lee and the email to anna.lee@mail.com for the contact at content://contacts/people/anna2.", "turn 2: Show me the contact card for content://contacts/people/anna2. -> Opening the contact card for Anna Lee: content://contacts/people/anna2."], "query": "Send her a text that says 'Your contact info has been updated'.", "rewrited_query": "Send Anna Lee a text that says 'Your contact info has been updated'.", "answer": {"plan": "send_message", "arguments": {"to": "Anna Lee", "message": "Your contact info has been updated."}}, "unique_idx": "ACTION_EDIT_CONTACT-80-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: For the contact located at content://contacts/people/jenny, change her phone number to 222-333-4444. -> I've updated Jenny's phone number to 222-333-4444 at content://contacts/people/jenny.", "turn 2: Display content://contacts/people/jenny contact information. -> Here is Jenny's contact information: content://contacts/people/jenny."], "query": "Send her a message: 'I updated your contact info!'", "rewrited_query": "Send Jenny a message: 'I updated your contact info!'", "answer": {"plan": "send_message", "arguments": {"to": "Jenny", "message": "I updated your contact info!"}}, "unique_idx": "ACTION_EDIT_CONTACT-81-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Revise Justin's details at content://contacts/people/justin by updating his company to 'Alpha Tech'. -> Sure, I'm setting Justin's company to Alpha Tech at content://contacts/people/justin.", "turn 2: Can you show me content://contacts/people/justin contact now? -> Displaying Justin's contact: content://contacts/people/justin."], "query": "Send him a text saying 'Company updated to Alpha Tech'", "rewrited_query": "Send Justin a text saying 'Company updated to Alpha Tech'", "answer": {"plan": "send_message", "arguments": {"to": "Justin", "message": "Company updated to Alpha Tech"}}, "unique_idx": "ACTION_EDIT_CONTACT-82-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Adjust the contact details of Linda at content://contacts/people/linda: set her email to linda@work.org. -> I'm updating Linda's email to linda@work.org at content://contacts/people/linda.", "turn 2: Show me content://contacts/people/linda updated details. -> Showing the updated details for Linda: content://contacts/people/linda."], "query": "Text her and say 'Email has been changed.'", "rewrited_query": "Text Linda and say 'Email has been changed.'", "answer": {"plan": "send_message", "arguments": {"to": "Linda", "message": "Email has been changed."}}, "unique_idx": "ACTION_EDIT_CONTACT-83-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to change my colleague Kevin's phone number to 999-888-7777 using contact URI content://contacts/people/kevin. -> Alright, I'm updating Kevin's phone number to 999-888-7777 at content://contacts/people/kevin.", "turn 2: Can you bring up content://contacts/people/kevin contact information? -> Here's Kevin's contact information: content://contacts/people/kevin."], "query": "Send him a text saying 'I've updated your number.'", "rewrited_query": "Send Kevin a text saying 'I've updated your number.'", "answer": {"plan": "send_message", "arguments": {"to": "Kevin", "message": "I've updated your number."}}, "unique_idx": "ACTION_EDIT_CONTACT-84-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Update the contact for Emma at content://contacts/people/emma so that her address becomes '200 Park Ave'. -> Okay, I've updated Emma's address to '200 Park Ave' at content://contacts/people/emma.", "turn 2: Show me the updated contact information for content://contacts/people/emma. -> Displaying the updated contact card for Emma: content://contacts/people/emma."], "query": "Send her a text message saying 'I've updated your address.'", "rewrited_query": "Send Emma a text message saying 'I've updated your address.'", "answer": {"plan": "send_message", "arguments": {"to": "Emma", "message": "I've updated your address."}}, "unique_idx": "ACTION_EDIT_CONTACT-85-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you modify Lucy's information at content://contacts/people/lucy? I'd like to set her email to lucy@home.net. -> Okay, I'm updating Lucy's email to lucy@home.net at content://contacts/people/lucy.", "turn 2: Can I see content://contacts/people/lucy updated contact info? -> Here's the updated contact information for Lucy: content://contacts/people/lucy."], "query": "Send her an email.", "rewrited_query": "Send lucy@home.net an email.", "answer": {"plan": "send_email", "arguments": {"to": "lucy@home.net"}}, "unique_idx": "ACTION_EDIT_CONTACT-76-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you modify Lucy's information at content://contacts/people/lucy? I'd like to set her email to lucy@home.net. -> Okay, I'm updating Lucy's email to lucy@home.net at content://contacts/people/lucy.", "turn 2: Can I see content://contacts/people/lucy updated contact info? -> Here's the updated contact information for Lucy: content://contacts/people/lucy."], "query": "Can you find Lucy's address?", "rewrited_query": "Can you find Lucy's address using search_location tool?", "answer": {"plan": "search_location", "arguments": {"query": "Lucy's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-76-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Kindly modify Rachel's contact at content://contacts/people/rachel by setting her address to '789 Cherry Lane'. -> No problem, I'm setting Rachel's address to 789 Cherry Lane at content://contacts/people/rachel.", "turn 2: Show me the updated contact card for content://contacts/people/rachel. -> Here is Rachel's updated contact card: content://contacts/people/rachel."], "query": "Search her address.", "rewrited_query": "Search Rachel's address.", "answer": {"plan": "search_location", "arguments": {"query": "Rachel's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-78-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please revise the record at content://contacts/people/paul by updating his phone number to 800-555-1234. -> I am updating Paul's phone number to 800-555-1234 at content://contacts/people/paul.", "turn 2: Can you pull up content://contacts/people/paul contact details? -> Fetching Paul's contact information: content://contacts/people/paul."], "query": "Can you find his location?", "rewrited_query": "Can you find Paul's location?", "answer": {"plan": "search_location", "arguments": {"query": "Paul's location"}}, "unique_idx": "ACTION_EDIT_CONTACT-79-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Edit the contact at URI content://contacts/people/anna2: update the name to 'Anna Lee' and the email to anna.lee@mail.com. -> Ok, I'm updating the name to Anna Lee and the email to anna.lee@mail.com for the contact at content://contacts/people/anna2.", "turn 2: Show me the contact card for content://contacts/people/anna2. -> Opening the contact card for Anna Lee: content://contacts/people/anna2."], "query": "Where is she located?", "rewrited_query": "Where is Anna Lee located?", "answer": {"plan": "search_location", "arguments": {"query": "Anna Lee"}}, "unique_idx": "ACTION_EDIT_CONTACT-80-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: For the contact located at content://contacts/people/jenny, change her phone number to 222-333-4444. -> I've updated Jenny's phone number to 222-333-4444 at content://contacts/people/jenny.", "turn 2: Display content://contacts/people/jenny contact information. -> Here is Jenny's contact information: content://contacts/people/jenny."], "query": "Check her address on the map.", "rewrited_query": "Check Jenny's address on the map.", "answer": {"plan": "search_location", "arguments": {"query": "Jenny's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-81-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Revise Justin's details at content://contacts/people/justin by updating his company to 'Alpha Tech'. -> Sure, I'm setting Justin's company to Alpha Tech at content://contacts/people/justin.", "turn 2: Can you show me content://contacts/people/justin contact now? -> Displaying Justin's contact: content://contacts/people/justin."], "query": "Can you show me his address?", "rewrited_query": "Can you show me Justin's address?", "answer": {"plan": "search_location", "arguments": {"query": "Justin's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-82-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Adjust the contact details of Linda at content://contacts/people/linda: set her email to linda@work.org. -> I'm updating Linda's email to linda@work.org at content://contacts/people/linda.", "turn 2: Show me content://contacts/people/linda updated details. -> Showing the updated details for Linda: content://contacts/people/linda."], "query": "Find her address.", "rewrited_query": "Find Linda's address.", "answer": {"plan": "search_location", "arguments": {"query": "Linda's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-83-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I want to change my colleague Kevin's phone number to 999-888-7777 using contact URI content://contacts/people/kevin. -> Alright, I'm updating Kevin's phone number to 999-888-7777 at content://contacts/people/kevin.", "turn 2: Can you bring up content://contacts/people/kevin contact information? -> Here's Kevin's contact information: content://contacts/people/kevin."], "query": "What's his address?", "rewrited_query": "What's Kevin's address?", "answer": {"plan": "search_location", "arguments": {"query": "Kevin's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-84-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Update the contact for Emma at content://contacts/people/emma so that her address becomes '200 Park Ave'. -> Okay, I've updated Emma's address to '200 Park Ave' at content://contacts/people/emma.", "turn 2: Show me the updated contact information for content://contacts/people/emma. -> Displaying the updated contact card for Emma: content://contacts/people/emma."], "query": "Search for her address.", "rewrited_query": "Search for Emma's address.", "answer": {"plan": "search_location", "arguments": {"query": "Emma's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-85-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Edit Lucy's phone information: use content://contacts/people/lucy2 to change her phone to 777-888-9999. -> Affirmative. Lucy's contact at content://contacts/people/lucy2 will be updated to phone number 777-888-9999.", "turn 2: Show me content://contacts/people/lucy2 updated contact card. -> Displaying Lucy's updated contact card from content://contacts/people/lucy2 with the new phone number 777-888-9999."], "query": "Can you dial it?", "rewrited_query": "Can you dial 777-888-9999?", "answer": {"plan": "dial", "arguments": {"phone_number": "777-888-9999"}}, "unique_idx": "ACTION_EDIT_CONTACT-91-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Please update this contact at URI content://contacts/people/ella to set her phone to 333-444-5555 and update her address to '404 Maple Street'. -> I'm updating Ella's contact information to include the phone number 333-444-5555 and the address '404 Maple Street'.", "turn 2: Can you show me content://contacts/people/ella contact card now? -> Displaying Ella's contact information at content://contacts/people/ella, showing the phone number 333-444-5555 and the address '404 Maple Street'."], "query": "Could you call that number for me?", "rewrited_query": "Could you call 333-444-5555 for me?", "answer": {"plan": "dial", "arguments": {"phone_number": "333-444-5555"}}, "unique_idx": "ACTION_EDIT_CONTACT-94-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Please modify the contact info for the person at content://contacts/people/simon: change his name to 'Simon Pegg' and update his phone number to 444-555-6666. -> Okay, I'm now updating Simon's contact information with the name 'Simon Pegg' and phone number 444-555-6666. Please wait.", "turn 2: Can you show me content://contacts/people/simon contact card? -> Showing the contact card for Simon Pegg at content://contacts/people/simon with the updated phone number 444-555-6666."], "query": "Send him a message saying 'How's it going?'", "rewrited_query": "Send 444-555-6666 a message saying 'How's it going?'", "answer": {"plan": "send_message", "arguments": {"to": "444-555-6666", "message": "How's it going?"}}, "unique_idx": "ACTION_EDIT_CONTACT-86-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I wish to edit the contact available at content://contacts/people/beth by updating her company to 'HealthPlus'. -> No problem. I'm updating Beth's company to 'HealthPlus' at content://contacts/people/beth.", "turn 2: Show me content://contacts/people/beth contact details. -> Okay, displaying Beth's contact details at content://contacts/people/beth, showing her company as 'HealthPlus'."], "query": "Send her a text that says 'I'm running late.'", "rewrited_query": "Send Beth a text that says 'I'm running late.'", "answer": {"plan": "send_message", "arguments": {"to": "Beth", "message": "I'm running late."}}, "unique_idx": "ACTION_EDIT_CONTACT-87-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you update the contact details for Noah from content://contacts/people/noah? Set his email to noah@mail.net and phone to 111-222-3333. -> Understood. I'm updating Noah's email to noah@mail.net and phone to 111-222-3333 using content://contacts/people/noah.", "turn 2: Can you display content://contacts/people/noah contact now? -> Displaying Noah's contact with the email noah@mail.net and phone number 111-222-3333 at content://contacts/people/noah."], "query": "Send him a message: 'Are we still on for lunch tomorrow?'", "rewrited_query": "Send 111-222-3333 a message: 'Are we still on for lunch tomorrow?'", "answer": {"plan": "send_message", "arguments": {"to": "111-222-3333", "message": "Are we still on for lunch tomorrow?"}}, "unique_idx": "ACTION_EDIT_CONTACT-88-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: For the entry at content://contacts/people/zoe, please modify her name to 'Zoe Kravitz'. -> Alright, changing the contact name at content://contacts/people/zoe to 'Zoe Kravitz'.", "turn 2: Can I see content://contacts/people/zoe contact? -> Showing Zoe Kravitz's contact details from content://contacts/people/zoe."], "query": "Send her a quick 'Hi!'", "rewrited_query": "Send Zoe Kravitz a quick 'Hi!'", "answer": {"plan": "send_message", "arguments": {"to": "Zoe Kravitz", "message": "Hi!"}}, "unique_idx": "ACTION_EDIT_CONTACT-89-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please update the contact at content://contacts/people/dylan with the address '101 Main Street'. -> OK, I will update the contact information for Dylan with the address '101 Main Street'.", "turn 2: Can you pull up content://contacts/people/dylan contact info? -> Here's Dylan's contact information at content://contacts/people/dylan, showing the updated address '101 Main Street'."], "query": "Text him 'See you later!'", "rewrited_query": "Text Dylan 'See you later!'", "answer": {"plan": "send_message", "arguments": {"to": "Dylan", "message": "See you later!"}}, "unique_idx": "ACTION_EDIT_CONTACT-90-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Edit Lucy's phone information: use content://contacts/people/lucy2 to change her phone to 777-888-9999. -> Affirmative. Lucy's contact at content://contacts/people/lucy2 will be updated to phone number 777-888-9999.", "turn 2: Show me content://contacts/people/lucy2 updated contact card. -> Displaying Lucy's updated contact card from content://contacts/people/lucy2 with the new phone number 777-888-9999."], "query": "Send her the message 'Thanks!'", "rewrited_query": "Send 777-888-9999 the message 'Thanks!'", "answer": {"plan": "send_message", "arguments": {"to": "777-888-9999", "message": "Thanks!"}}, "unique_idx": "ACTION_EDIT_CONTACT-91-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to adjust Teresa’s contact at content://contacts/people/teresa by updating her email to teresa@example.co.uk. -> Updating Teresa's email to teresa@example.co.uk at content://contacts/people/teresa.", "turn 2: Display content://contacts/people/teresa contact details, please. -> Showing Teresa's contact details from content://contacts/people/teresa; the email is now teresa@example.co.uk."], "query": "Send her an SMS saying 'Hello, how are you?'", "rewrited_query": "Send Teresa an SMS saying 'Hello, how are you?'", "answer": {"plan": "send_message", "arguments": {"to": "Teresa", "message": "Hello, how are you?"}}, "unique_idx": "ACTION_EDIT_CONTACT-92-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you help modify the contact at content://contacts/people/mike? I need to update his company to MegaCorp and change his name to Michael. -> Got it. Updating Mike's contact at content://contacts/people/mike. I will change the name to Michael and set the company to MegaCorp.", "turn 2: Can you show me content://contacts/people/mike contact information? -> Here is Michael's contact card from content://contacts/people/mike, showing his company as MegaCorp."], "query": "Send him a message saying 'Are you available?'", "rewrited_query": "Send Michael a message saying 'Are you available?'", "answer": {"plan": "send_message", "arguments": {"to": "Michael", "message": "Are you available?"}}, "unique_idx": "ACTION_EDIT_CONTACT-93-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please update this contact at URI content://contacts/people/ella to set her phone to 333-444-5555 and update her address to '404 Maple Street'. -> I'm updating Ella's contact information to include the phone number 333-444-5555 and the address '404 Maple Street'.", "turn 2: Can you show me content://contacts/people/ella contact card now? -> Displaying Ella's contact information at content://contacts/people/ella, showing the phone number 333-444-5555 and the address '404 Maple Street'."], "query": "Send her a text saying 'Thank you!'", "rewrited_query": "Send 333-444-5555 a text saying 'Thank you!'", "answer": {"plan": "send_message", "arguments": {"to": "333-444-5555", "message": "Thank you!"}}, "unique_idx": "ACTION_EDIT_CONTACT-94-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Amend Patrick's details found at content://contacts/people/patrick by changing his email to patrick@sample.net. -> Will do. Changing Patrick's email to patrick@sample.net in contacts.", "turn 2: Can I see the updated contact information for content://contacts/people/patrick? -> Showing Patrick's contact details from content://contacts/people/patrick with the updated email patrick@sample.net."], "query": "Text him 'See you soon!'", "rewrited_query": "Text Patrick 'See you soon!'", "answer": {"plan": "send_message", "arguments": {"to": "Patrick", "message": "See you soon!"}}, "unique_idx": "ACTION_EDIT_CONTACT-95-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please modify the contact info for the person at content://contacts/people/simon: change his name to 'Simon Pegg' and update his phone number to 444-555-6666. -> Okay, I'm now updating Simon's contact information with the name 'Simon Pegg' and phone number 444-555-6666. Please wait.", "turn 2: Can you show me content://contacts/people/simon contact card? -> Showing the contact card for Simon Pegg at content://contacts/people/simon with the updated phone number 444-555-6666."], "query": "Search for his work address.", "rewrited_query": "Search for Simon Pegg's work address.", "answer": {"plan": "search_location", "arguments": {"query": "Simon Pegg's work address"}}, "unique_idx": "ACTION_EDIT_CONTACT-86-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I wish to edit the contact available at content://contacts/people/beth by updating her company to 'HealthPlus'. -> No problem. I'm updating Beth's company to 'HealthPlus' at content://contacts/people/beth.", "turn 2: Show me content://contacts/people/beth contact details. -> Okay, displaying Beth's contact details at content://contacts/people/beth, showing her company as 'HealthPlus'."], "query": "Search for her address.", "rewrited_query": "Search for Beth's address.", "answer": {"plan": "search_location", "arguments": {"query": "Beth's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-87-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Could you update the contact details for Noah from content://contacts/people/noah? Set his email to noah@mail.net and phone to 111-222-3333. -> Understood. I'm updating Noah's email to noah@mail.net and phone to 111-222-3333 using content://contacts/people/noah.", "turn 2: Can you display content://contacts/people/noah contact now? -> Displaying Noah's contact with the email noah@mail.net and phone number 111-222-3333 at content://contacts/people/noah."], "query": "Can you find his current location?", "rewrited_query": "Can you find Noah's current location?", "answer": {"plan": "search_location", "arguments": {"query": "Noah's current location"}}, "unique_idx": "ACTION_EDIT_CONTACT-88-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: For the entry at content://contacts/people/zoe, please modify her name to 'Zoe Kravitz'. -> Alright, changing the contact name at content://contacts/people/zoe to 'Zoe Kravitz'.", "turn 2: Can I see content://contacts/people/zoe contact? -> Showing Zoe Kravitz's contact details from content://contacts/people/zoe."], "query": "Find her work.", "rewrited_query": "Find Zoe Kravitz's work.", "answer": {"plan": "search_location", "arguments": {"query": "Zoe Kravitz's work"}}, "unique_idx": "ACTION_EDIT_CONTACT-89-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please update the contact at content://contacts/people/dylan with the address '101 Main Street'. -> OK, I will update the contact information for Dylan with the address '101 Main Street'.", "turn 2: Can you pull up content://contacts/people/dylan contact info? -> Here's Dylan's contact information at content://contacts/people/dylan, showing the updated address '101 Main Street'."], "query": "Show that address on a map.", "rewrited_query": "Show 101 Main Street on a map.", "answer": {"plan": "search_location", "arguments": {"query": "101 Main Street"}}, "unique_idx": "ACTION_EDIT_CONTACT-90-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Edit Lucy's phone information: use content://contacts/people/lucy2 to change her phone to 777-888-9999. -> Affirmative. Lucy's contact at content://contacts/people/lucy2 will be updated to phone number 777-888-9999.", "turn 2: Show me content://contacts/people/lucy2 updated contact card. -> Displaying Lucy's updated contact card from content://contacts/people/lucy2 with the new phone number 777-888-9999."], "query": "Search for her home address.", "rewrited_query": "Search for Lucy's home address.", "answer": {"plan": "search_location", "arguments": {"query": "Lucy's home address"}}, "unique_idx": "ACTION_EDIT_CONTACT-91-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I want to adjust Teresa’s contact at content://contacts/people/teresa by updating her email to teresa@example.co.uk. -> Updating Teresa's email to teresa@example.co.uk at content://contacts/people/teresa.", "turn 2: Display content://contacts/people/teresa contact details, please. -> Showing Teresa's contact details from content://contacts/people/teresa; the email is now teresa@example.co.uk."], "query": "Find her location.", "rewrited_query": "Find Teresa's location.", "answer": {"plan": "search_location", "arguments": {"query": "Teresa's location"}}, "unique_idx": "ACTION_EDIT_CONTACT-92-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you help modify the contact at content://contacts/people/mike? I need to update his company to MegaCorp and change his name to Michael. -> Got it. Updating Mike's contact at content://contacts/people/mike. I will change the name to Michael and set the company to MegaCorp.", "turn 2: Can you show me content://contacts/people/mike contact information? -> Here is Michael's contact card from content://contacts/people/mike, showing his company as MegaCorp."], "query": "Look up his office location.", "rewrited_query": "Look up Michael's office location.", "answer": {"plan": "search_location", "arguments": {"query": "Michael's office location"}}, "unique_idx": "ACTION_EDIT_CONTACT-93-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please update this contact at URI content://contacts/people/ella to set her phone to 333-444-5555 and update her address to '404 Maple Street'. -> I'm updating Ella's contact information to include the phone number 333-444-5555 and the address '404 Maple Street'.", "turn 2: Can you show me content://contacts/people/ella contact card now? -> Displaying Ella's contact information at content://contacts/people/ella, showing the phone number 333-444-5555 and the address '404 Maple Street'."], "query": "Show her address.", "rewrited_query": "Show 404 Maple Street.", "answer": {"plan": "search_location", "arguments": {"query": "404 Maple Street"}}, "unique_idx": "ACTION_EDIT_CONTACT-94-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Amend Patrick's details found at content://contacts/people/patrick by changing his email to patrick@sample.net. -> Will do. Changing Patrick's email to patrick@sample.net in contacts.", "turn 2: Can I see the updated contact information for content://contacts/people/patrick? -> Showing Patrick's contact details from content://contacts/people/patrick with the updated email patrick@sample.net."], "query": "Search for his address.", "rewrited_query": "Search for Patrick's address.", "answer": {"plan": "search_location", "arguments": {"query": "Patrick's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-95-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Revise the data for the contact at content://contacts/people/fiona to update her name to 'Fiona Gallagher' and her company to 'Gallagher Inc'. -> Okay, I'm updating Fiona Gallagher's contact to reflect her name as 'Fiona Gallagher' and her company as 'Gallagher Inc'. The updated contact URI is content://contacts/people/fiona.", "turn 2: Can you show me content://contacts/people/fiona contact? -> Showing contact details for Fiona Gallagher at content://contacts/people/fiona."], "query": "Text her 'See you later!'", "rewrited_query": "Text Fiona Gallagher 'See you later!'", "answer": {"plan": "send_message", "arguments": {"to": "Fiona Gallagher", "message": "See you later!"}}, "unique_idx": "ACTION_EDIT_CONTACT-96-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please modify the contact on content://contacts/people/oliver; update his phone number to 000-111-2222. -> Understood. I'm updating Oliver's phone number to 000-111-2222. You can find the updated contact at content://contacts/people/oliver.", "turn 2: Let me see content://contacts/people/oliver updated info. -> Displaying updated contact info for Oliver at content://contacts/people/oliver."], "query": "Send him a text saying 'Are we still on for tomorrow?'", "rewrited_query": "Send Oliver a text saying 'Are we still on for tomorrow?'", "answer": {"plan": "send_message", "arguments": {"to": "Oliver", "message": "Are we still on for tomorrow?"}}, "unique_idx": "ACTION_EDIT_CONTACT-97-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need you to change the record at content://contacts/people/luke: set his address to '50 Star Rd' and his email to luke@space.com. -> No problem, I'm setting Luke's address to '50 Star Rd' and his email to luke@space.com. The updated contact URI is content://contacts/people/luke.", "turn 2: Display content://contacts/people/luke updated contact, please. -> Here is the updated contact for Luke at content://contacts/people/luke."], "query": "Text him 'I'm on my way.'", "rewrited_query": "Text Luke 'I'm on my way.'", "answer": {"plan": "send_message", "arguments": {"to": "Luke", "message": "I'm on my way."}}, "unique_idx": "ACTION_EDIT_CONTACT-98-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you update the details for the contact at content://contacts/people/nina by setting her name as 'Nina Simone'? -> I will update Nina's contact to 'Nina Simone'. The updated contact URI is content://contacts/people/nina.", "turn 2: Show me content://contacts/people/nina updated contact card. -> Showing Nina Simone's updated contact card: content://contacts/people/nina."], "query": "Send her a text saying 'Thank you!'", "rewrited_query": "Send Nina Simone a text saying 'Thank you!'", "answer": {"plan": "send_message", "arguments": {"to": "Nina Simone", "message": "Thank you!"}}, "unique_idx": "ACTION_EDIT_CONTACT-99-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Edit the contact for my friend Owen using URI content://contacts/people/owen to update his phone to 888-999-0000 and his company to 'Owen LLC'. -> Ok, I'm updating Owen's contact info. His phone is now 888-999-0000 and his company is 'Owen LLC'. The updated contact is at content://contacts/people/owen.", "turn 2: Can you display content://contacts/people/owen contact for me? -> Here's Owen's contact, located at content://contacts/people/owen."], "query": "Text him 'Sounds good!'", "rewrited_query": "Text Owen 'Sounds good!'", "answer": {"plan": "send_message", "arguments": {"to": "Owen", "message": "Sounds good!"}}, "unique_idx": "ACTION_EDIT_CONTACT-100-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly update the email for the contact located at content://contacts/people/johnny to johnny@mail.org. -> Alright, I've updated Johnny's email to johnny@mail.org. The updated contact can be found at content://contacts/people/johnny.", "turn 2: Show me content://contacts/people/johnny contact you just updated. -> Displaying the updated contact for Johnny at content://contacts/people/johnny."], "query": "Send him a message saying 'I will be there soon.'", "rewrited_query": "Send Johnny a message saying 'I will be there soon.'", "answer": {"plan": "send_message", "arguments": {"to": "Johnny", "message": "I will be there soon."}}, "unique_idx": "ACTION_EDIT_CONTACT-101-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Update the contact at content://contacts/people/karen so that her address becomes '88 Sunset Blvd'. -> I'm on it! Karen's address is now '88 Sunset Blvd'. The updated contact URI is content://contacts/people/karen.", "turn 2: Can I see content://contacts/people/karen contact? -> Showing you Karen's contact details from content://contacts/people/karen."], "query": "Send her a text that says 'Call me when you get a chance.'", "rewrited_query": "Send Karen a text that says 'Call me when you get a chance.'", "answer": {"plan": "send_message", "arguments": {"to": "Karen", "message": "Call me when you get a chance."}}, "unique_idx": "ACTION_EDIT_CONTACT-102-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Revise contact information for Tim at content://contacts/people/tim by updating his email to timmy@digital.com and his phone to 222-444-6666. -> Tim's contact information has been updated. His email is now timmy@digital.com and his phone number is 222-444-6666. The updated contact URI is content://contacts/people/tim.", "turn 2: Could you pull up content://contacts/people/tim contact? -> Here's the contact information for Tim at content://contacts/people/tim."], "query": "Send him a text saying 'Hey, just wanted to check in.'", "rewrited_query": "Send Tim a text saying 'Hey, just wanted to check in.'", "answer": {"plan": "send_message", "arguments": {"to": "Tim", "message": "Hey, just wanted to check in."}}, "unique_idx": "ACTION_EDIT_CONTACT-103-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please update the contact info for Vanessa at content://contacts/people/vanessa: set her company name as 'Vanessa Ventures'. -> I've updated Vanessa's company to 'Vanessa Ventures'. The updated contact URI is content://contacts/people/vanessa.", "turn 2: Please display content://contacts/people/vanessa contact. -> Displaying Vanessa's contact information from content://contacts/people/vanessa."], "query": "Text her 'Happy birthday!'", "rewrited_query": "Text Vanessa 'Happy birthday!'", "answer": {"plan": "send_message", "arguments": {"to": "Vanessa", "message": "Happy birthday!"}}, "unique_idx": "ACTION_EDIT_CONTACT-104-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I want to change the details for the contact at content://contacts/people/eric; modify his phone to 123-000-4567 and his address to '78 Ocean Ave'. -> I am updating Eric's contact with the phone number 123-000-4567 and the address '78 Ocean Ave'. The updated contact URI is content://contacts/people/eric.", "turn 2: Show me content://contacts/people/eric info. -> Showing you the contact information for Eric at content://contacts/people/eric."], "query": "Send him a message saying 'Can you give me a call?'", "rewrited_query": "Send Eric a message saying 'Can you give me a call?'", "answer": {"plan": "send_message", "arguments": {"to": "Eric", "message": "Can you give me a call?"}}, "unique_idx": "ACTION_EDIT_CONTACT-105-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Revise the data for the contact at content://contacts/people/fiona to update her name to 'Fiona Gallagher' and her company to 'Gallagher Inc'. -> Okay, I'm updating Fiona Gallagher's contact to reflect her name as 'Fiona Gallagher' and her company as 'Gallagher Inc'. The updated contact URI is content://contacts/people/fiona.", "turn 2: Can you show me content://contacts/people/fiona contact? -> Showing contact details for Fiona Gallagher at content://contacts/people/fiona."], "query": "Where does she live?", "rewrited_query": "Where does Fiona Gallagher live?", "answer": {"plan": "search_location", "arguments": {"query": "Fiona Gallagher's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-96-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please modify the contact on content://contacts/people/oliver; update his phone number to 000-111-2222. -> Understood. I'm updating Oliver's phone number to 000-111-2222. You can find the updated contact at content://contacts/people/oliver.", "turn 2: Let me see content://contacts/people/oliver updated info. -> Displaying updated contact info for Oliver at content://contacts/people/oliver."], "query": "Search his address.", "rewrited_query": "Search Oliver's address.", "answer": {"plan": "search_location", "arguments": {"query": "Oliver's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-97-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need you to change the record at content://contacts/people/luke: set his address to '50 Star Rd' and his email to luke@space.com. -> No problem, I'm setting Luke's address to '50 Star Rd' and his email to luke@space.com. The updated contact URI is content://contacts/people/luke.", "turn 2: Display content://contacts/people/luke updated contact, please. -> Here is the updated contact for Luke at content://contacts/people/luke."], "query": "Can you show me his address?", "rewrited_query": "Can you show me Luke's address?", "answer": {"plan": "search_location", "arguments": {"query": "Luke's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-98-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you update the details for the contact at content://contacts/people/nina by setting her name as 'Nina Simone'? -> I will update Nina's contact to 'Nina Simone'. The updated contact URI is content://contacts/people/nina.", "turn 2: Show me content://contacts/people/nina updated contact card. -> Showing Nina Simone's updated contact card: content://contacts/people/nina."], "query": "Can you find her address?", "rewrited_query": "Can you find Nina Simone's address?", "answer": {"plan": "search_location", "arguments": {"query": "Nina Simone's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-99-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Edit the contact for my friend Owen using URI content://contacts/people/owen to update his phone to 888-999-0000 and his company to 'Owen LLC'. -> Ok, I'm updating Owen's contact info. His phone is now 888-999-0000 and his company is 'Owen LLC'. The updated contact is at content://contacts/people/owen.", "turn 2: Can you display content://contacts/people/owen contact for me? -> Here's Owen's contact, located at content://contacts/people/owen."], "query": "Find his location.", "rewrited_query": "Find Owen's location.", "answer": {"plan": "search_location", "arguments": {"query": "Owen's location"}}, "unique_idx": "ACTION_EDIT_CONTACT-100-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Kindly update the email for the contact located at content://contacts/people/johnny to johnny@mail.org. -> Alright, I've updated Johnny's email to johnny@mail.org. The updated contact can be found at content://contacts/people/johnny.", "turn 2: Show me content://contacts/people/johnny contact you just updated. -> Displaying the updated contact for Johnny at content://contacts/people/johnny."], "query": "Look up his address.", "rewrited_query": "Look up Johnny's address.", "answer": {"plan": "search_location", "arguments": {"query": "Johnny's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-101-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Update the contact at content://contacts/people/karen so that her address becomes '88 Sunset Blvd'. -> I'm on it! Karen's address is now '88 Sunset Blvd'. The updated contact URI is content://contacts/people/karen.", "turn 2: Can I see content://contacts/people/karen contact? -> Showing you Karen's contact details from content://contacts/people/karen."], "query": "Find it on the map.", "rewrited_query": "Find Karen's address on the map.", "answer": {"plan": "search_location", "arguments": {"query": "Karen's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-102-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Revise contact information for Tim at content://contacts/people/tim by updating his email to timmy@digital.com and his phone to 222-444-6666. -> Tim's contact information has been updated. His email is now timmy@digital.com and his phone number is 222-444-6666. The updated contact URI is content://contacts/people/tim.", "turn 2: Could you pull up content://contacts/people/tim contact? -> Here's the contact information for Tim at content://contacts/people/tim."], "query": "What's his address?", "rewrited_query": "What's Tim's address?", "answer": {"plan": "search_location", "arguments": {"query": "Tim's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-103-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please update the contact info for Vanessa at content://contacts/people/vanessa: set her company name as 'Vanessa Ventures'. -> I've updated Vanessa's company to 'Vanessa Ventures'. The updated contact URI is content://contacts/people/vanessa.", "turn 2: Please display content://contacts/people/vanessa contact. -> Displaying Vanessa's contact information from content://contacts/people/vanessa."], "query": "Where is she located?", "rewrited_query": "Where is Vanessa located?", "answer": {"plan": "search_location", "arguments": {"query": "Vanessa's location"}}, "unique_idx": "ACTION_EDIT_CONTACT-104-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I want to change the details for the contact at content://contacts/people/eric; modify his phone to 123-000-4567 and his address to '78 Ocean Ave'. -> I am updating Eric's contact with the phone number 123-000-4567 and the address '78 Ocean Ave'. The updated contact URI is content://contacts/people/eric.", "turn 2: Show me content://contacts/people/eric info. -> Showing you the contact information for Eric at content://contacts/people/eric."], "query": "Find him.", "rewrited_query": "Find Eric.", "answer": {"plan": "search_location", "arguments": {"query": "Eric"}}, "unique_idx": "ACTION_EDIT_CONTACT-105-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Could you update the record for my acquaintance at content://contacts/people/george by updating his email to george@promo.biz? -> OK, I've updated George's email to george@promo.biz in his contact record at content://contacts/people/george.", "turn 2: Can you display content://contacts/people/george contact now? -> OK, showing you the contact details at content://contacts/people/george."], "query": "Send him a message saying 'Email received, thanks!'", "rewrited_query": "Send George a message saying 'Email received, thanks!'", "answer": {"plan": "send_message", "arguments": {"to": "George", "message": "Email received, thanks!"}}, "unique_idx": "ACTION_EDIT_CONTACT-106-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please change the business information on the contact at content://contacts/people/frank by setting his company to 'Franklin Co'. -> I've updated the company for the contact at content://contacts/people/frank to Franklin Co.", "turn 2: Now, show me content://contacts/people/frank updated contact card. -> Displaying the contact information for content://contacts/people/frank now."], "query": "Send him a text saying 'Nice doing business with you.'", "rewrited_query": "Send Frank a text saying 'Nice doing business with you.'", "answer": {"plan": "send_message", "arguments": {"to": "Frank", "message": "Nice doing business with you."}}, "unique_idx": "ACTION_EDIT_CONTACT-107-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: For the contact URI content://contacts/people/lily, update her phone number to 555-4321 and her email to lily@mailservice.com. -> Alright, I've updated Lily's contact information at content://contacts/people/lily with the new phone number 555-4321 and email lily@mailservice.com.", "turn 2: Could you show me the contact details for content://contacts/people/lily? -> Alright, opening contact details for content://contacts/people/lily."], "query": "Send her a message saying 'Your contact info has been updated.'", "rewrited_query": "Send Lily a message saying 'Your contact info has been updated.'", "answer": {"plan": "send_message", "arguments": {"to": "Lily", "message": "Your contact info has been updated."}}, "unique_idx": "ACTION_EDIT_CONTACT-108-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Edit the contact at content://contacts/people/sam: change his name to 'Samuel Adams' and update his company to 'Adams Brewing'. -> I've changed the name to Samuel Adams and the company to Adams Brewing for the contact at content://contacts/people/sam.", "turn 2: Show me content://contacts/people/sam contact information. -> Showing contact information for Samuel Adams at content://contacts/people/sam."], "query": "Send him a text saying 'Name and company updated.'", "rewrited_query": "Send Samuel Adams a text saying 'Name and company updated.'", "answer": {"plan": "send_message", "arguments": {"to": "Samuel Adams", "message": "Name and company updated."}}, "unique_idx": "ACTION_EDIT_CONTACT-109-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Modify the contact found at content://contacts/people/claire by updating her address to '900 Grove Street' and her phone to 867-5309. -> OK, I've updated Claire's address to 900 Grove Street and her phone number to 867-5309 in the contact at content://contacts/people/claire.", "turn 2: Now display content://contacts/people/claire contact. -> Now opening the contact details for Claire at content://contacts/people/claire."], "query": "Send her a text saying 'Address and phone updated.'", "rewrited_query": "Send Claire a text saying 'Address and phone updated.'", "answer": {"plan": "send_message", "arguments": {"to": "Claire", "message": "Address and phone updated."}}, "unique_idx": "ACTION_EDIT_CONTACT-110-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: What's the phone number of the contact at contact://john_doe? -> Okay, the phone number for John Doe is 555-123-4567.", "turn 2: Can you display the contact at contact://john_doe? -> Showing the contact information for John Doe at contact://john_doe."], "query": "Send him a message saying 'Hi John, how are you?'", "rewrited_query": "Send John Doe a message saying 'Hi John, how are you?'", "answer": {"plan": "send_message", "arguments": {"to": "John Doe", "message": "Hi John, how are you?"}}, "unique_idx": "get_contact_info-998-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Retrieve the email for my colleague at contact://jane_smith. -> No problem, the email address for Jane Smith is jane.smith@example.com.", "turn 2: Show the contact at contact://jane_smith. -> Displaying Jane Smith's contact card at contact://jane_smith."], "query": "Send her a text saying 'Meeting tomorrow at 2 PM.'", "rewrited_query": "Send Jane Smith a text saying 'Meeting tomorrow at 2 PM.'", "answer": {"plan": "send_message", "arguments": {"to": "Jane Smith", "message": "Meeting tomorrow at 2 PM."}}, "unique_idx": "get_contact_info-999-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to find the physical address of my friend at contact://alice_representative. -> Sure, the address for Alice Representative is 123 Main Street, Anytown, USA.", "turn 2: Display the contact at contact://alice_representative. -> Showing the contact information for Alice Representative at contact://alice_representative."], "query": "Send her a message saying 'See you at your place.'", "rewrited_query": "Send Alice Representative a message saying 'See you at your place.'", "answer": {"plan": "send_message", "arguments": {"to": "Alice Representative", "message": "See you at your place."}}, "unique_idx": "get_contact_info-1000-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Show me a summary of the contact at contact://bob_resource. -> Okay, here's a summary for Bob Resource: Name - Bob Resource, Phone - 555-555-5555, Email - bob.resource@email.com.", "turn 2: Let me see the contact at contact://bob_resource. -> Opening contact details for Bob Resource at contact://bob_resource."], "query": "Send him a text saying 'Thanks for the resource.'", "rewrited_query": "Send Bob Resource a text saying 'Thanks for the resource.'", "answer": {"plan": "send_message", "arguments": {"to": "Bob Resource", "message": "Thanks for the resource."}}, "unique_idx": "get_contact_info-1001-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: What is the email associated with URI contact://eve_officer? -> The email for Eve Officer is eve.officer@company.org.", "turn 2: Open the contact at contact://eve_officer please. -> Opening contact details for Eve Officer at contact://eve_officer."], "query": "Send her a text saying 'Confirming our meeting for next week.'", "rewrited_query": "Send Eve Officer a text saying 'Confirming our meeting for next week.'", "answer": {"plan": "send_message", "arguments": {"to": "Eve Officer", "message": "Confirming our meeting for next week."}}, "unique_idx": "get_contact_info-1002-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you update the record for my acquaintance at content://contacts/people/george by updating his email to george@promo.biz? -> OK, I've updated George's email to george@promo.biz in his contact record at content://contacts/people/george.", "turn 2: Can you display content://contacts/people/george contact now? -> OK, showing you the contact details at content://contacts/people/george."], "query": "Can you show me his address on a map?", "rewrited_query": "Can you show me George's address on a map?", "answer": {"plan": "search_location", "arguments": {"query": "George's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-106-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please change the business information on the contact at content://contacts/people/frank by setting his company to 'Franklin Co'. -> I've updated the company for the contact at content://contacts/people/frank to Franklin Co.", "turn 2: Now, show me content://contacts/people/frank updated contact card. -> Displaying the contact information for content://contacts/people/frank now."], "query": "Search for his address.", "rewrited_query": "Search for Frank's address.", "answer": {"plan": "search_location", "arguments": {"query": "Frank's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-107-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: For the contact URI content://contacts/people/lily, update her phone number to 555-4321 and her email to lily@mailservice.com. -> Alright, I've updated Lily's contact information at content://contacts/people/lily with the new phone number 555-4321 and email lily@mailservice.com.", "turn 2: Could you show me the contact details for content://contacts/people/lily? -> Alright, opening contact details for content://contacts/people/lily."], "query": "Find her address.", "rewrited_query": "Find Lily's address.", "answer": {"plan": "search_location", "arguments": {"query": "Lily's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-108-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Edit the contact at content://contacts/people/sam: change his name to 'Samuel Adams' and update his company to 'Adams Brewing'. -> I've changed the name to Samuel Adams and the company to Adams Brewing for the contact at content://contacts/people/sam.", "turn 2: Show me content://contacts/people/sam contact information. -> Showing contact information for Samuel Adams at content://contacts/people/sam."], "query": "Show me his location.", "rewrited_query": "Show me Samuel Adams's location.", "answer": {"plan": "search_location", "arguments": {"query": "Samuel Adams's location"}}, "unique_idx": "ACTION_EDIT_CONTACT-109-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Modify the contact found at content://contacts/people/claire by updating her address to '900 Grove Street' and her phone to 867-5309. -> OK, I've updated Claire's address to 900 Grove Street and her phone number to 867-5309 in the contact at content://contacts/people/claire.", "turn 2: Now display content://contacts/people/claire contact. -> Now opening the contact details for Claire at content://contacts/people/claire."], "query": "Search her address.", "rewrited_query": "Search Claire's address.", "answer": {"plan": "search_location", "arguments": {"query": "Claire's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-110-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show me a summary of the contact at contact://bob_resource. -> Okay, here's a summary for Bob Resource: Name - Bob Resource, Phone - 555-555-5555, Email - bob.resource@email.com.", "turn 2: Let me see the contact at contact://bob_resource. -> Opening contact details for Bob Resource at contact://bob_resource."], "query": "Can you show me his address?", "rewrited_query": "Can you show me Bob Resource's address?", "answer": {"plan": "search_location", "arguments": {"query": "Bob Resource's address"}}, "unique_idx": "get_contact_info-1001-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: What is the email associated with URI contact://eve_officer? -> The email for Eve Officer is eve.officer@company.org.", "turn 2: Open the contact at contact://eve_officer please. -> Opening contact details for Eve Officer at contact://eve_officer."], "query": "Search for her office location.", "rewrited_query": "Search for Eve Officer's office location.", "answer": {"plan": "search_location", "arguments": {"query": "Eve Officer's office location"}}, "unique_idx": "get_contact_info-1002-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Get the contact summary from this URI: contact://emma_summary. -> Here's the summary for Emma Summary: Name - Emma Summary, Phone - (123) 456-7890.", "turn 2: Can you open the contact at contact://emma_summary? -> Opening contact details for contact://emma_summary."], "query": "Dial that number.", "rewrited_query": "Dial (123) 456-7890 number.", "answer": {"plan": "dial", "arguments": {"phone_number": "(123) 456-7890"}}, "unique_idx": "get_contact_info-1005-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Please get phone information for the URI contact://george_mobile. -> Okay, George's mobile number is 555-987-6543.", "turn 2: Can you pull up the contact at contact://george_mobile? -> Accessing contact information for contact://george_mobile."], "query": "Dial 555-987-6543", "rewrited_query": "Dial 555-987-6543", "answer": {"plan": "dial", "arguments": {"phone_number": "555-987-6543"}}, "unique_idx": "get_contact_info-1007-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Can you extract the phone details from contact://charlie? -> Affirmative. Charlie's phone number is 321-765-0987.", "turn 2: Can I see the contact at contact://charlie? -> Displaying contact details from contact://charlie."], "query": "Send him a message saying 'Are you available?'", "rewrited_query": "Send Charlie a message saying 'Are you available?'", "answer": {"plan": "send_message", "arguments": {"to": "Charlie", "message": "Are you available?"}}, "unique_idx": "get_contact_info-1003-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to fetch the address from the contact record found at contact://david_address. -> Fetching address... David's address is 456 Oak Avenue, Somecity, State.", "turn 2: Please show me the contact at contact://david_address. -> Now showing the contact at contact://david_address."], "query": "Text him 'I'm nearby.'", "rewrited_query": "Text David 'I'm nearby.'", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "I'm nearby."}}, "unique_idx": "get_contact_info-1004-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Get the contact summary from this URI: contact://emma_summary. -> Here's the summary for Emma Summary: Name - Emma Summary, Phone - (123) 456-7890.", "turn 2: Can you open the contact at contact://emma_summary? -> Opening contact details for contact://emma_summary."], "query": "Send her a message saying 'Can we meet up?'", "rewrited_query": "Send Emma Summary a message saying 'Can we meet up?'", "answer": {"plan": "send_message", "arguments": {"to": "Emma Summary", "message": "Can we meet up?"}}, "unique_idx": "get_contact_info-1005-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Fetch the email for contact: contact://frank_email and send it to me. -> Frank's email is frank@example.net. I can send it to you now, if you'd like.", "turn 2: Show me the contact at contact://frank_email. -> Navigating to contact details: contact://frank_email."], "query": "Send him a quick text: 'On my way!'", "rewrited_query": "Send Frank a quick text: 'On my way!'", "answer": {"plan": "send_message", "arguments": {"to": "Frank", "message": "On my way!"}}, "unique_idx": "get_contact_info-1006-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please get phone information for the URI contact://george_mobile. -> Okay, George's mobile number is 555-987-6543.", "turn 2: Can you pull up the contact at contact://george_mobile? -> Accessing contact information for contact://george_mobile."], "query": "Send him a message that says 'Thanks!'", "rewrited_query": "Send George a message that says 'Thanks!'", "answer": {"plan": "send_message", "arguments": {"to": "George", "message": "Thanks!"}}, "unique_idx": "get_contact_info-1007-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Retrieve the complete record from contact://hannah. -> Okay, retrieving the complete contact record for Hannah.", "turn 2: Show me contact://hannah contact. -> Showing contact details for contact://hannah."], "query": "Send her a text saying 'See you soon!'", "rewrited_query": "Send Hannah a text saying 'See you soon!'", "answer": {"plan": "send_message", "arguments": {"to": "Hannah", "message": "See you soon!"}}, "unique_idx": "get_contact_info-1008-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I want the mailing address for the contact located at contact://ian_mapping. -> Fetching the mailing address for Ian Mapping.", "turn 2: Can you display contact://ian_mapping? -> Opening contact information: contact://ian_mapping."], "query": "Send him a text message saying 'I'm running late'", "rewrited_query": "Send Ian Mapping a text message saying 'I'm running late'", "answer": {"plan": "send_message", "arguments": {"to": "Ian Mapping", "message": "I'm running late"}}, "unique_idx": "get_contact_info-1009-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Find out the email address of the person at contact://julia_mail. -> I'm looking up Julia's email address for you.", "turn 2: Could you show contact://julia_mail contact now? -> Displaying the contact at contact://julia_mail."], "query": "Send her a text saying 'Can you talk?'", "rewrited_query": "Send Julia a text saying 'Can you talk?'", "answer": {"plan": "send_message", "arguments": {"to": "Julia", "message": "Can you talk?"}}, "unique_idx": "get_contact_info-1010-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Identify the phone number for contact://kevin_communication. -> Searching for Kevin's phone number now.", "turn 2: Let me see contact://kevin_communication contact's information. -> Showing contact details at contact://kevin_communication."], "query": "Send him 'Call me when you get a chance.'", "rewrited_query": "Send Kevin 'Call me when you get a chance.'", "answer": {"plan": "send_message", "arguments": {"to": "Kevin", "message": "Call me when you get a chance."}}, "unique_idx": "get_contact_info-1011-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you pull up detailed information for contact://lisa_info? -> Sure, retrieving all the details for Lisa.", "turn 2: Please show contact://lisa_info contact. -> Showing you contact://lisa_info."], "query": "Send her a message saying 'How are you?'", "rewrited_query": "Send Lisa a message saying 'How are you?'", "answer": {"plan": "send_message", "arguments": {"to": "Lisa", "message": "How are you?"}}, "unique_idx": "get_contact_info-1012-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I want the mailing address for the contact located at contact://ian_mapping. -> Fetching the mailing address for Ian Mapping.", "turn 2: Can you display contact://ian_mapping? -> Opening contact information: contact://ian_mapping."], "query": "Email that contact.", "rewrited_query": "Email contact://ian_mapping contact.", "answer": {"plan": "send_email", "arguments": {"to": "contact://ian_mapping"}}, "unique_idx": "get_contact_info-1009-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Find out the email address of the person at contact://julia_mail. -> I'm looking up Julia's email address for you.", "turn 2: Could you show contact://julia_mail contact now? -> Displaying the contact at contact://julia_mail."], "query": "Can you email that contact?", "rewrited_query": "Can you email contact://julia_mail contact?", "answer": {"plan": "send_email", "arguments": {"to": "contact://julia_mail"}}, "unique_idx": "get_contact_info-1010-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Identify the phone number for contact://kevin_communication. -> Searching for Kevin's phone number now.", "turn 2: Let me see contact://kevin_communication contact's information. -> Showing contact details at contact://kevin_communication."], "query": "Send them an email about the meeting.", "rewrited_query": "Send contact://kevin_communication contact an email about the meeting.", "answer": {"plan": "send_email", "arguments": {"to": "contact://kevin_communication", "subject": "the meeting"}}, "unique_idx": "get_contact_info-1011-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you pull up detailed information for contact://lisa_info? -> Sure, retrieving all the details for Lisa.", "turn 2: Please show contact://lisa_info contact. -> Showing you contact://lisa_info."], "query": "Email them.", "rewrited_query": "Email contact://lisa_info contact.", "answer": {"plan": "send_email", "arguments": {"to": "contact://lisa_info"}}, "unique_idx": "get_contact_info-1012-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you extract the phone details from contact://charlie? -> Affirmative. Charlie's phone number is 321-765-0987.", "turn 2: Can I see the contact at contact://charlie? -> Displaying contact details from contact://charlie."], "query": "Can you show me his location?", "rewrited_query": "Can you show me Charlie's location?", "answer": {"plan": "search_location", "arguments": {"query": "Charlie's location"}}, "unique_idx": "get_contact_info-1003-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to fetch the address from the contact record found at contact://david_address. -> Fetching address... David's address is 456 Oak Avenue, Somecity, State.", "turn 2: Please show me the contact at contact://david_address. -> Now showing the contact at contact://david_address."], "query": "Find that address on a map.", "rewrited_query": "Find 456 Oak Avenue, Somecity, State on a map.", "answer": {"plan": "search_location", "arguments": {"query": "456 Oak Avenue, Somecity, State"}}, "unique_idx": "get_contact_info-1004-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Get the contact summary from this URI: contact://emma_summary. -> Here's the summary for Emma Summary: Name - Emma Summary, Phone - (123) 456-7890.", "turn 2: Can you open the contact at contact://emma_summary? -> Opening contact details for contact://emma_summary."], "query": "Show me her address.", "rewrited_query": "Show me Emma Summary's address.", "answer": {"plan": "search_location", "arguments": {"query": "Emma Summary's address"}}, "unique_idx": "get_contact_info-1005-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Fetch the email for contact: contact://frank_email and send it to me. -> Frank's email is frank@example.net. I can send it to you now, if you'd like.", "turn 2: Show me the contact at contact://frank_email. -> Navigating to contact details: contact://frank_email."], "query": "Can you navigate to his address?", "rewrited_query": "Can you navigate to Frank's address?", "answer": {"plan": "search_location", "arguments": {"query": "Frank's address"}}, "unique_idx": "get_contact_info-1006-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please get phone information for the URI contact://george_mobile. -> Okay, George's mobile number is 555-987-6543.", "turn 2: Can you pull up the contact at contact://george_mobile? -> Accessing contact information for contact://george_mobile."], "query": "Can you find his address?", "rewrited_query": "Can you find George's address?", "answer": {"plan": "search_location", "arguments": {"query": "George's address"}}, "unique_idx": "get_contact_info-1007-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Retrieve the complete record from contact://hannah. -> Okay, retrieving the complete contact record for Hannah.", "turn 2: Show me contact://hannah contact. -> Showing contact details for contact://hannah."], "query": "Find her current location.", "rewrited_query": "Find Hannah's current location.", "answer": {"plan": "search_location", "arguments": {"query": "Hannah's current location"}}, "unique_idx": "get_contact_info-1008-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I want the mailing address for the contact located at contact://ian_mapping. -> Fetching the mailing address for Ian Mapping.", "turn 2: Can you display contact://ian_mapping? -> Opening contact information: contact://ian_mapping."], "query": "Search for his address.", "rewrited_query": "Search for Ian Mapping's address.", "answer": {"plan": "search_location", "arguments": {"query": "Ian Mapping's address"}}, "unique_idx": "get_contact_info-1009-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Find out the email address of the person at contact://julia_mail. -> I'm looking up Julia's email address for you.", "turn 2: Could you show contact://julia_mail contact now? -> Displaying the contact at contact://julia_mail."], "query": "Find her address.", "rewrited_query": "Find Julia's address.", "answer": {"plan": "search_location", "arguments": {"query": "Julia's address"}}, "unique_idx": "get_contact_info-1010-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Identify the phone number for contact://kevin_communication. -> Searching for Kevin's phone number now.", "turn 2: Let me see contact://kevin_communication contact's information. -> Showing contact details at contact://kevin_communication."], "query": "Where is he located?", "rewrited_query": "Where is Kevin located?", "answer": {"plan": "search_location", "arguments": {"query": "Kevin"}}, "unique_idx": "get_contact_info-1011-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Could you pull up detailed information for contact://lisa_info? -> Sure, retrieving all the details for Lisa.", "turn 2: Please show contact://lisa_info contact. -> Showing you contact://lisa_info."], "query": "Show me her location on a map.", "rewrited_query": "Show me Lisa's location on a map.", "answer": {"plan": "search_location", "arguments": {"query": "Lisa's location"}}, "unique_idx": "get_contact_info-1012-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you get the phone details from contact://sam_mobile? -> Accessing phone details for Sam.", "turn 2: Show me contact://sam_mobile. -> Okay, opening contact://sam_mobile now."], "query": "Could you call that contact?", "rewrited_query": "Could you call contact://sam_mobile contact?", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://sam_mobile"}}, "unique_idx": "get_contact_info-1013-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I require phone information from contact://betty_phone. -> The phone number for Betty is 555-456-7890.", "turn 2: Can you display contact://betty_phone? -> Here is the information for contact://betty_phone."], "query": "Call that number.", "rewrited_query": "Call 555-456-7890.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-456-7890"}}, "unique_idx": "get_contact_info-1025-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: What is the phone number for contact://oscar? -> The phone number for Oscar is 555-123-4567.", "turn 2: Can you show me contact://oscar? -> Displaying contact://oscar."], "query": "Dial that number.", "rewrited_query": "Dial 555-123-4567.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-123-4567"}}, "unique_idx": "get_contact_info-1038-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Can you get the phone details from contact://sam_mobile? -> Accessing phone details for Sam.", "turn 2: Show me contact://sam_mobile. -> Okay, opening contact://sam_mobile now."], "query": "Text him, 'Are we still on for tomorrow?'", "rewrited_query": "Text contact://sam_mobile, 'Are we still on for tomorrow?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://sam_mobile", "message": "Are we still on for tomorrow?"}}, "unique_idx": "get_contact_info-1013-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Fetch the email from contact://anita_mail. -> Retrieving Anita's email address.", "turn 2: View contact://anita_mail contact. -> Displaying contact details from contact://anita_mail."], "query": "Send her a quick message saying 'Thanks!'", "rewrited_query": "Send contact://anita_mail a quick message saying 'Thanks!'", "answer": {"plan": "send_message", "arguments": {"to": "contact://anita_mail", "message": "Thanks!"}}, "unique_idx": "get_contact_info-1014-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you retrieve the full contact summary for contact://dave123? -> I'm getting the complete summary for Dave123.", "turn 2: I would like to view the contact://dave123 contact details. -> Showing the details for contact://dave123."], "query": "Send him a text message 'I will be late.'", "rewrited_query": "Send contact://dave123 a text message 'I will be late.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://dave123", "message": "I will be late."}}, "unique_idx": "get_contact_info-1015-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need to know the address for contact://olivia_address. -> Finding Olivia's address for you.", "turn 2: Display contact://olivia_address for me. -> Here are the details for contact://olivia_address."], "query": "Send her a text that says 'See you soon!'", "rewrited_query": "Send contact://olivia_address a text that says 'See you soon!'", "answer": {"plan": "send_message", "arguments": {"to": "contact://olivia_address", "message": "See you soon!"}}, "unique_idx": "get_contact_info-1016-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please look up the email for the following contact: contact://luke_email. -> Looking up Luke's email address.", "turn 2: Show me contact://luke_email contact. -> Okay, displaying contact://luke_email now."], "query": "Send him a text saying, 'Can you call me?'", "rewrited_query": "Send contact://luke_email a text saying, 'Can you call me?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://luke_email", "message": "Can you call me?"}}, "unique_idx": "get_contact_info-1017-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Provide the complete contact details for contact://mike_record. -> Okay, here are Mike's details: Phone: 555-987-6543, Email: mike@example.com, Address: 123 Main Street.", "turn 2: Can you open contact://mike_record contact? -> Opening contact://mike_record."], "query": "Send him a text with 'I will arrive in 10 minutes'", "rewrited_query": "Send contact://mike_record a text with 'I will arrive in 10 minutes'", "answer": {"plan": "send_message", "arguments": {"to": "contact://mike_record", "message": "I will arrive in 10 minutes"}}, "unique_idx": "get_contact_info-1019-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Could you get the phone number of contact://peter_cell? -> Peter's phone number is 555-789-0123.", "turn 2: I want to see contact://peter_cell. -> Showing contact://peter_cell."], "query": "Send him a text 'I am on my way.'", "rewrited_query": "Send contact://peter_cell a text 'I am on my way.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://peter_cell", "message": "I am on my way."}}, "unique_idx": "get_contact_info-1021-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Show me the email info for contact://rachel_communication. -> Rachel's email address is rachel@email.net.", "turn 2: View contact://rachel_communication contact. -> Displaying details for contact://rachel_communication."], "query": "Send her 'Are you free?'", "rewrited_query": "Send contact://rachel_communication 'Are you free?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://rachel_communication", "message": "Are you free?"}}, "unique_idx": "get_contact_info-1022-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I require phone information from contact://betty_phone. -> The phone number for Betty is 555-456-7890.", "turn 2: Can you display contact://betty_phone? -> Here is the information for contact://betty_phone."], "query": "Send a text to her saying 'Thank you!'", "rewrited_query": "Send a text to contact://betty_phone saying 'Thank you!'", "answer": {"plan": "send_message", "arguments": {"to": "contact://betty_phone", "message": "Thank you!"}}, "unique_idx": "get_contact_info-1025-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: What is the phone number for contact://oscar? -> The phone number for Oscar is 555-123-4567.", "turn 2: Can you show me contact://oscar? -> Displaying contact://oscar."], "query": "Send him a text 'I will be there soon.'", "rewrited_query": "Send contact://oscar a text 'I will be there soon.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://oscar", "message": "I will be there soon."}}, "unique_idx": "get_contact_info-1038-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Provide the complete contact details for contact://mike_record. -> Okay, here are Mike's details: Phone: 555-987-6543, Email: mike@example.com, Address: 123 Main Street.", "turn 2: Can you open contact://mike_record contact? -> Opening contact://mike_record."], "query": "Send him an email to that address.", "rewrited_query": "Send Mike an email to mike@example.com address.", "answer": {"plan": "send_email", "arguments": {"to": "mike@example.com"}}, "unique_idx": "get_contact_info-1019-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you get the phone details from contact://sam_mobile? -> Accessing phone details for Sam.", "turn 2: Show me contact://sam_mobile. -> Okay, opening contact://sam_mobile now."], "query": "Search for Sam's address.", "rewrited_query": "Search for Sam's address.", "answer": {"plan": "search_location", "arguments": {"query": "Sam's address"}}, "unique_idx": "get_contact_info-1013-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Fetch the email from contact://anita_mail. -> Retrieving Anita's email address.", "turn 2: View contact://anita_mail contact. -> Displaying contact details from contact://anita_mail."], "query": "Search her address.", "rewrited_query": "Search Anita's address.", "answer": {"plan": "search_location", "arguments": {"query": "Anita's address"}}, "unique_idx": "get_contact_info-1014-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Could you retrieve the full contact summary for contact://dave123? -> I'm getting the complete summary for Dave123.", "turn 2: I would like to view the contact://dave123 contact details. -> Showing the details for contact://dave123."], "query": "Can you search for his current location?", "rewrited_query": "Can you search for Dave123's current location?", "answer": {"plan": "search_location", "arguments": {"query": "Dave123's current location"}}, "unique_idx": "get_contact_info-1015-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to know the address for contact://olivia_address. -> Finding Olivia's address for you.", "turn 2: Display contact://olivia_address for me. -> Here are the details for contact://olivia_address."], "query": "Find that address on the map.", "rewrited_query": "Find Olivia_address's address on the map.", "answer": {"plan": "search_location", "arguments": {"query": "Olivia_address's address"}}, "unique_idx": "get_contact_info-1016-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Please look up the email for the following contact: contact://luke_email. -> Looking up Luke's email address.", "turn 2: Show me contact://luke_email contact. -> Okay, displaying contact://luke_email now."], "query": "Find Luke's address.", "rewrited_query": "Find Luke's address.", "answer": {"plan": "search_location", "arguments": {"query": "Luke's address"}}, "unique_idx": "get_contact_info-1017-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Provide the complete contact details for contact://mike_record. -> Okay, here are Mike's details: Phone: 555-987-6543, Email: mike@example.com, Address: 123 Main Street.", "turn 2: Can you open contact://mike_record contact? -> Opening contact://mike_record."], "query": "Show me his address.", "rewrited_query": "Show me Mike_record's address.", "answer": {"plan": "search_location", "arguments": {"query": "Mike_record's address"}}, "unique_idx": "get_contact_info-1019-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Could you get the phone number of contact://peter_cell? -> Peter's phone number is 555-789-0123.", "turn 2: I want to see contact://peter_cell. -> Showing contact://peter_cell."], "query": "Show me his location.", "rewrited_query": "Show me Peter_cell's location.", "answer": {"plan": "search_location", "arguments": {"query": "Peter_cell's location"}}, "unique_idx": "get_contact_info-1021-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show me the email info for contact://rachel_communication. -> Rachel's email address is rachel@email.net.", "turn 2: View contact://rachel_communication contact. -> Displaying details for contact://rachel_communication."], "query": "Search for Rachel's address.", "rewrited_query": "Search for Rachel's address.", "answer": {"plan": "search_location", "arguments": {"query": "Rachel's address"}}, "unique_idx": "get_contact_info-1022-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I require phone information from contact://betty_phone. -> The phone number for Betty is 555-456-7890.", "turn 2: Can you display contact://betty_phone? -> Here is the information for contact://betty_phone."], "query": "Can you find Betty's location?", "rewrited_query": "Can you find Betty's location?", "answer": {"plan": "search_location", "arguments": {"query": "Betty's location"}}, "unique_idx": "get_contact_info-1025-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: What is the phone number for contact://oscar? -> The phone number for Oscar is 555-123-4567.", "turn 2: Can you show me contact://oscar? -> Displaying contact://oscar."], "query": "Where does he live?", "rewrited_query": "Where does Oscar live?", "answer": {"plan": "search_location", "arguments": {"query": "Oscar's address"}}, "unique_idx": "get_contact_info-1038-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I would like to view the contact overview at contact://patricia. -> Here's the contact overview for Patricia: Name: Patricia Johnson, Phone: 555-987-6543, Email: patricia.j@example.com.", "turn 2: Let me view contact://patricia. -> Displaying the contact details for Patricia Johnson at contact://patricia."], "query": "Can you dial that number?", "rewrited_query": "Can you dial 555-987-6543?", "answer": {"plan": "dial", "arguments": {"phone_number": "555-987-6543"}}, "unique_idx": "get_contact_info-1039-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I would like to view the contact overview at contact://patricia. -> Here's the contact overview for Patricia: Name: Patricia Johnson, Phone: 555-987-6543, Email: patricia.j@example.com.", "turn 2: Let me view contact://patricia. -> Displaying the contact details for Patricia Johnson at contact://patricia."], "query": "Send her a message saying 'Hi, Patricia! It's been a while.'", "rewrited_query": "Send Patricia Johnson a message saying 'Hi, Patricia! It's been a while.'", "answer": {"plan": "send_message", "arguments": {"to": "Patricia Johnson", "message": "Hi, Patricia! It's been a while."}}, "unique_idx": "get_contact_info-1039-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Get the email account info from contact://quentin_mail. -> Quentin's email address is quentin@email.net.", "turn 2: I want to open contact://quentin_mail. -> Alright, opening the contact details for Quentin via contact://quentin_mail."], "query": "Send him a text saying 'Are we still meeting next week?'", "rewrited_query": "Send Quentin a text saying 'Are we still meeting next week?'", "answer": {"plan": "send_message", "arguments": {"to": "Quentin", "message": "Are we still meeting next week?"}}, "unique_idx": "get_contact_info-1040-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please fetch the address details from contact://randy_location. -> Randy's address is 123 Highland Ave, Anytown, CA 91234.", "turn 2: Show contact://randy_location. -> Showing the contact info from contact://randy_location."], "query": "Send him a message that says 'See you soon.'", "rewrited_query": "Send Randy a message that says 'See you soon.'", "answer": {"plan": "send_message", "arguments": {"to": "Randy", "message": "See you soon."}}, "unique_idx": "get_contact_info-1041-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Find out the phone details for contact://susan_mobile. -> Susan's mobile number is 444-555-6666.", "turn 2: Open contact://susan_mobile. -> Navigating to the contact details at contact://susan_mobile."], "query": "Text her and say 'I'm running late, I'll be there in 10 minutes.'", "rewrited_query": "Text Susan and say 'I'm running late, I'll be there in 10 minutes.'", "answer": {"plan": "send_message", "arguments": {"to": "Susan", "message": "I'm running late, I'll be there in 10 minutes."}}, "unique_idx": "get_contact_info-1042-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Extract the email address for contact://victor_email. -> Victor's email address is victor@sample.net.", "turn 2: Can you display contact://victor_email? -> Displaying contact information from contact://victor_email."], "query": "Send him a message saying 'Thank you for your help!'", "rewrited_query": "Send Victor a message saying 'Thank you for your help!'", "answer": {"plan": "send_message", "arguments": {"to": "Victor", "message": "Thank you for your help!"}}, "unique_idx": "get_contact_info-1043-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: What contact information does contact://wendy_summary have? -> Okay, here's Wendy's contact info: Name: Wendy Williams, Phone: 333-222-1111, Email: wendy@work.com.", "turn 2: I'd like to view contact://wendy_summary now. -> Opening the contact card for Wendy from contact://wendy_summary."], "query": "Send her a text saying 'Can you call me back?'", "rewrited_query": "Send Wendy a text saying 'Can you call me back?'", "answer": {"plan": "send_message", "arguments": {"to": "Wendy", "message": "Can you call me back?"}}, "unique_idx": "get_contact_info-1044-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Please lookup the phone details for contact://xavier_phone. -> Xavier's phone number is 123-456-7890.", "turn 2: Take me to contact://xavier_phone. -> Taking you to Xavier's contact details at contact://xavier_phone."], "query": "Send him a text saying 'I need to talk to you urgently.'", "rewrited_query": "Send Xavier a text saying 'I need to talk to you urgently.'", "answer": {"plan": "send_message", "arguments": {"to": "Xavier", "message": "I need to talk to you urgently."}}, "unique_idx": "get_contact_info-1045-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I need the email address associated with contact://yvonne_mail. -> Yvonne's email address is yvonne@anymail.com.", "turn 2: I want to see contact://yvonne_mail. -> Showing contact information at contact://yvonne_mail."], "query": "Send her a message saying 'Did you get the document I sent?'", "rewrited_query": "Send Yvonne a message saying 'Did you get the document I sent?'", "answer": {"plan": "send_message", "arguments": {"to": "Yvonne", "message": "Did you get the document I sent?"}}, "unique_idx": "get_contact_info-1046-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Can you provide the full info from contact://zach? -> Alright, here's Zach's full contact information: Name: Zach Taylor, Phone: 777-888-9999, Email: zach.t@random.org, Address: 456 Main St, Somecity, TX 54321.", "turn 2: Let me see contact://zach. -> Displaying Zach's contact card from contact://zach."], "query": "Send him a text message saying 'What time are we meeting tomorrow?'", "rewrited_query": "Send Zach a text message saying 'What time are we meeting tomorrow?'", "answer": {"plan": "send_message", "arguments": {"to": "Zach", "message": "What time are we meeting tomorrow?"}}, "unique_idx": "get_contact_info-1047-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Retrieve the postal address using contact://alice_address. -> Okay, retrieving the postal address for contact://alice_address.", "turn 2: Can you display contact://alice_address now? -> Displaying contact details at contact://alice_address."], "query": "Send her a text saying 'Please confirm receipt of the package.'", "rewrited_query": "Send Alice a text saying 'Please confirm receipt of the package.'", "answer": {"plan": "send_message", "arguments": {"to": "Alice", "message": "Please confirm receipt of the package."}}, "unique_idx": "get_contact_info-1048-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to view the contact overview at contact://patricia. -> Here's the contact overview for Patricia: Name: Patricia Johnson, Phone: 555-987-6543, Email: patricia.j@example.com.", "turn 2: Let me view contact://patricia. -> Displaying the contact details for Patricia Johnson at contact://patricia."], "query": "Send her an email.", "rewrited_query": "Send patricia.j@example.com an email.", "answer": {"plan": "send_email", "arguments": {"to": "patricia.j@example.com"}}, "unique_idx": "get_contact_info-1039-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Get the email account info from contact://quentin_mail. -> Quentin's email address is quentin@email.net.", "turn 2: I want to open contact://quentin_mail. -> Alright, opening the contact details for Quentin via contact://quentin_mail."], "query": "Compose an email to that address.", "rewrited_query": "Compose an email to quentin@email.net address.", "answer": {"plan": "send_email", "arguments": {"to": "quentin@email.net"}}, "unique_idx": "get_contact_info-1040-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Find out the phone details for contact://susan_mobile. -> Susan's mobile number is 444-555-6666.", "turn 2: Open contact://susan_mobile. -> Navigating to the contact details at contact://susan_mobile."], "query": "Email her please.", "rewrited_query": "Email susan@mobile please.", "answer": {"plan": "send_email", "arguments": {"to": "susan@mobile"}}, "unique_idx": "get_contact_info-1042-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Extract the email address for contact://victor_email. -> Victor's email address is victor@sample.net.", "turn 2: Can you display contact://victor_email? -> Displaying contact information from contact://victor_email."], "query": "Email that address.", "rewrited_query": "Email victor@sample.net address.", "answer": {"plan": "send_email", "arguments": {"to": "victor@sample.net"}}, "unique_idx": "get_contact_info-1043-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: What contact information does contact://wendy_summary have? -> Okay, here's Wendy's contact info: Name: Wendy Williams, Phone: 333-222-1111, Email: wendy@work.com.", "turn 2: I'd like to view contact://wendy_summary now. -> Opening the contact card for Wendy from contact://wendy_summary."], "query": "Send an email to her.", "rewrited_query": "Send an email to wendy@work.com.", "answer": {"plan": "send_email", "arguments": {"to": "wendy@work.com"}}, "unique_idx": "get_contact_info-1044-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: I need the email address associated with contact://yvonne_mail. -> Yvonne's email address is yvonne@anymail.com.", "turn 2: I want to see contact://yvonne_mail. -> Showing contact information at contact://yvonne_mail."], "query": "Can you send an email to that address?", "rewrited_query": "Can you send an email to yvonne@anymail.com address?", "answer": {"plan": "send_email", "arguments": {"to": "yvonne@anymail.com"}}, "unique_idx": "get_contact_info-1046-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you provide the full info from contact://zach? -> Alright, here's Zach's full contact information: Name: Zach Taylor, Phone: 777-888-9999, Email: zach.t@random.org, Address: 456 Main St, Somecity, TX 54321.", "turn 2: Let me see contact://zach. -> Displaying Zach's contact card from contact://zach."], "query": "Send him a quick email.", "rewrited_query": "Send zach.t@random.org a quick email.", "answer": {"plan": "send_email", "arguments": {"to": "zach.t@random.org"}}, "unique_idx": "get_contact_info-1047-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Please fetch the address details from contact://randy_location. -> Randy's address is 123 Highland Ave, Anytown, CA 91234.", "turn 2: Show contact://randy_location. -> Showing the contact info from contact://randy_location."], "query": "Search for that location.", "rewrited_query": "Search for 123 Highland Ave, Anytown, CA 91234 location.", "answer": {"plan": "search_location", "arguments": {"query": "123 Highland Ave, Anytown, CA 91234"}}, "unique_idx": "get_contact_info-1041-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: What contact information does contact://wendy_summary have? -> Okay, here's Wendy's contact info: Name: Wendy Williams, Phone: 333-222-1111, Email: wendy@work.com.", "turn 2: I'd like to view contact://wendy_summary now. -> Opening the contact card for Wendy from contact://wendy_summary."], "query": "Navigate to her work address.", "rewrited_query": "Navigate to Wendy Williams's work address.", "answer": {"plan": "search_location", "arguments": {"query": "Wendy Williams's work address"}}, "unique_idx": "get_contact_info-1044-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Can you provide the full info from contact://zach? -> Alright, here's Zach's full contact information: Name: Zach Taylor, Phone: 777-888-9999, Email: zach.t@random.org, Address: 456 Main St, Somecity, TX 54321.", "turn 2: Let me see contact://zach. -> Displaying Zach's contact card from contact://zach."], "query": "Show that address in maps.", "rewrited_query": "Show 456 Main St, Somecity, TX 54321 address in maps.", "answer": {"plan": "search_location", "arguments": {"query": "456 Main St, Somecity, TX 54321"}}, "unique_idx": "get_contact_info-1047-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Retrieve the postal address using contact://alice_address. -> Okay, retrieving the postal address for contact://alice_address.", "turn 2: Can you display contact://alice_address now? -> Displaying contact details at contact://alice_address."], "query": "Can you locate her address?", "rewrited_query": "Can you locate Alice's address?", "answer": {"plan": "search_location", "arguments": {"query": "Alice's address"}}, "unique_idx": "get_contact_info-1048-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Show me the telephone number for contact://bob_call. -> Fetching the phone number for contact://bob_call.", "turn 2: Can you show me contact://bob_call? -> Okay, displaying the contact details for contact://bob_call."], "query": "Can you call them?", "rewrited_query": "Can you call contact://bob_call?", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://bob_call"}}, "unique_idx": "get_contact_info-1049-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Get the email contact details for contact://charlie_mail. -> I'm getting the email details for contact://charlie_mail.", "turn 2: Open contact://charlie_mail. -> Opening contact details for contact://charlie_mail now."], "query": "Now, dial that number.", "rewrited_query": "Now, dial contact://charlie_mail number.", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://charlie_mail"}}, "unique_idx": "get_contact_info-1050-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I'm looking for address details at contact://doris_residence. -> Sure, looking up the address for contact://doris_residence.", "turn 2: Show me contact://doris_residence details, please. -> Showing you the details for contact://doris_residence."], "query": "Then, please dial it for me.", "rewrited_query": "Then, please dial contact://doris_residence for me.", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://doris_residence"}}, "unique_idx": "get_contact_info-1051-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: I want a complete overview of contact://edward. -> Alright, let me pull up the complete overview for contact://edward.", "turn 2: Display contact://edward. -> Displaying contact://edward now."], "query": "Make a call to that contact.", "rewrited_query": "Make a call to contact://edward.", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://edward"}}, "unique_idx": "get_contact_info-1052-ACTION_VIEW_CONTACT-1-dial-1"}
{"conversation_history": ["turn 1: Show me the telephone number for contact://bob_call. -> Fetching the phone number for contact://bob_call.", "turn 2: Can you show me contact://bob_call? -> Okay, displaying the contact details for contact://bob_call."], "query": "Send him a message 'Are we still on for tomorrow?'", "rewrited_query": "Send contact://bob_call a message 'Are we still on for tomorrow?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://bob_call", "message": "Are we still on for tomorrow?"}}, "unique_idx": "get_contact_info-1049-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Get the email contact details for contact://charlie_mail. -> I'm getting the email details for contact://charlie_mail.", "turn 2: Open contact://charlie_mail. -> Opening contact details for contact://charlie_mail now."], "query": "Send her a text, 'I have received your email.'", "rewrited_query": "Send contact://charlie_mail a text, 'I have received your email.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://charlie_mail", "message": "I have received your email."}}, "unique_idx": "get_contact_info-1050-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I'm looking for address details at contact://doris_residence. -> Sure, looking up the address for contact://doris_residence.", "turn 2: Show me contact://doris_residence details, please. -> Showing you the details for contact://doris_residence."], "query": "Text her 'I will be arriving in 10 minutes.'", "rewrited_query": "Text contact://doris_residence 'I will be arriving in 10 minutes.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://doris_residence", "message": "I will be arriving in 10 minutes."}}, "unique_idx": "get_contact_info-1051-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: I want a complete overview of contact://edward. -> Alright, let me pull up the complete overview for contact://edward.", "turn 2: Display contact://edward. -> Displaying contact://edward now."], "query": "Send him a message that says 'I'm running late.'", "rewrited_query": "Send contact://edward a message that says 'I'm running late.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://edward", "message": "I'm running late."}}, "unique_idx": "get_contact_info-1052-ACTION_VIEW_CONTACT-1-send_message-1"}
{"conversation_history": ["turn 1: Get the email contact details for contact://charlie_mail. -> I'm getting the email details for contact://charlie_mail.", "turn 2: Open contact://charlie_mail. -> Opening contact details for contact://charlie_mail now."], "query": "Email them to confirm our lunch meeting.", "rewrited_query": "Email contact://charlie_mail to confirm our lunch meeting.", "answer": {"plan": "send_email", "arguments": {"to": "contact://charlie_mail", "body": "confirm our lunch meeting"}}, "unique_idx": "get_contact_info-1050-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: I'm looking for address details at contact://doris_residence. -> Sure, looking up the address for contact://doris_residence.", "turn 2: Show me contact://doris_residence details, please. -> Showing you the details for contact://doris_residence."], "query": "Now, draft an email to her.", "rewrited_query": "Now, draft an email to contact://doris_residence.", "answer": {"plan": "send_email", "arguments": {"to": "contact://doris_residence"}}, "unique_idx": "get_contact_info-1051-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: I want a complete overview of contact://edward. -> Alright, let me pull up the complete overview for contact://edward.", "turn 2: Display contact://edward. -> Displaying contact://edward now."], "query": "Send an email to him about the project update.", "rewrited_query": "Send an email to contact://edward about the project update.", "answer": {"plan": "send_email", "arguments": {"to": "contact://edward", "body": "about the project update"}}, "unique_idx": "get_contact_info-1052-ACTION_VIEW_CONTACT-1-send_email-1"}
{"conversation_history": ["turn 1: Show me the telephone number for contact://bob_call. -> Fetching the phone number for contact://bob_call.", "turn 2: Can you show me contact://bob_call? -> Okay, displaying the contact details for contact://bob_call."], "query": "Can you find that location on the map?", "rewrited_query": "Can you find contact details location on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact details"}}, "unique_idx": "get_contact_info-1049-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: Get the email contact details for contact://charlie_mail. -> I'm getting the email details for contact://charlie_mail.", "turn 2: Open contact://charlie_mail. -> Opening contact details for contact://charlie_mail now."], "query": "Search for their address.", "rewrited_query": "Search for contact://charlie_mail's address.", "answer": {"plan": "search_location", "arguments": {"query": "contact://charlie_mail's address"}}, "unique_idx": "get_contact_info-1050-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I'm looking for address details at contact://doris_residence. -> Sure, looking up the address for contact://doris_residence.", "turn 2: Show me contact://doris_residence details, please. -> Showing you the details for contact://doris_residence."], "query": "Can you locate that?", "rewrited_query": "Can you locate contact://doris_residence?", "answer": {"plan": "search_location", "arguments": {"query": "contact://doris_residence"}}, "unique_idx": "get_contact_info-1051-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I want a complete overview of contact://edward. -> Alright, let me pull up the complete overview for contact://edward.", "turn 2: Display contact://edward. -> Displaying contact://edward now."], "query": "Find that.", "rewrited_query": "Find contact://edward.", "answer": {"plan": "search_location", "arguments": {"query": "contact://edward"}}, "unique_idx": "get_contact_info-1052-ACTION_VIEW_CONTACT-1-search_location-1"}
{"conversation_history": ["turn 1: I need to notify +1987654321 that the package has been delivered. -> Okay, I've sent the message 'the package has been delivered.' to +1987654321.", "turn 2: Now, call +1987654321. -> Dialing +1987654321."], "query": "If he doesn't pick up, text him 'Arriving in 10 minutes.'", "rewrited_query": "If +1987654321 doesn't pick up, text +1987654321 'Arriving in 10 minutes.'", "answer": {"plan": "send_message", "arguments": {"to": "+1987654321", "message": "Arriving in 10 minutes."}}, "unique_idx": "send_message-1275-dial-1-send_message-1"}
{"conversation_history": ["turn 1: Send an SMS to +14155552671 saying 'Happy Birthday!' -> SMS sent to +14155552671 with 'Happy Birthday!'", "turn 2: Let's call +14155552671 number. -> Calling +14155552671 now."], "query": "If there is no answer, send a message saying 'Call me when you have a chance.'", "rewrited_query": "If there is no answer, send a message to +14155552671 saying 'Call me when you have a chance.'", "answer": {"plan": "send_message", "arguments": {"to": "+14155552671", "message": "Call me when you have a chance."}}, "unique_idx": "send_message-1277-dial-1-send_message-1"}
{"conversation_history": ["turn 1: Send a text message with an attachment. It should go to +442071838750 with the message 'Check out this cool image', and attach the image located at http://example.com/image.jpg. -> Sending the message 'Check out this cool image' with the attached image to +442071838750.", "turn 2: Dial +442071838750. -> Alright, placing a call to +442071838750."], "query": "If they don't answer, text them 'Did you get the picture I sent?'", "rewrited_query": "If they don't answer, text +442071838750 'Did you get the picture I sent?'", "answer": {"plan": "send_message", "arguments": {"to": "+442071838750", "message": "Did you get the picture I sent?"}}, "unique_idx": "send_message-1279-dial-1-send_message-1"}
{"conversation_history": ["turn 1: Could you please show me the recent call log from my device? -> Okay, here's your recent call log: John Doe +1-555-123-4567 (Outgoing) - Today 10:00 AM; Jane Smith +1-555-987-6543 (Missed) - Yesterday 6:30 PM.", "turn 2: Call +1-555-987-6543 back. -> Calling +1-555-987-6543 now, one moment."], "query": "If she doesn't answer, send her a text saying 'Sorry I missed your call.'", "rewrited_query": "If Jane Smith doesn't answer, send Jane Smith a text saying 'Sorry I missed your call.'", "answer": {"plan": "send_message", "arguments": {"to": "Jane Smith", "message": "Sorry I missed your call."}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1974-dial-1-send_message-1"}
{"conversation_history": ["turn 1: I need to access my latest call history. Can you pull it up? -> Sure, retrieving your call history now: Mom (Incoming) - Today, 8:00 AM; Work +1-222-333-4444 (Outgoing) - Yesterday, 4:00 PM; Unknown Number +1-999-888-7777 (Missed) - 2 days ago, 1:00 PM.", "turn 2: Dial +1-999-888-7777. -> Initiating call to +1-999-888-7777."], "query": "If there’s no response, send a text saying 'Please call me back when you get a chance.'", "rewrited_query": "If there’s no response, send a text to +1-999-888-7777 saying 'Please call me back when you get a chance.'", "answer": {"plan": "send_message", "arguments": {"to": "+1-999-888-7777", "message": "Please call me back when you get a chance."}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1975-dial-1-send_message-1"}
{"conversation_history": ["turn 1: Display the recent calls on my phone, including missed, answered, and outgoing calls. -> Here's your recent call log: Dad +1-111-222-3333 (Incoming) - Today at 11:00 AM; Pizza Place +1-444-555-6666 (Outgoing) - Yesterday at 7:00 PM; Blocked Number (Missed) - 2 days ago at 3:00 PM.", "turn 2: Try calling +1-444-555-6666 again. -> Re-dialing +1-444-555-6666."], "query": "If they don't answer, send them a text saying 'Can you confirm my order?'", "rewrited_query": "If they don't answer, send +1-444-555-6666 a text saying 'Can you confirm my order?'", "answer": {"plan": "send_message", "arguments": {"to": "+1-444-555-6666", "message": "Can you confirm my order?"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-1976-dial-1-send_message-1"}
{"conversation_history": ["turn 1: Can you pull up my sent messages log? -> Pulling up your sent messages log. You sent: 'Running late' to +1-555-123-4567 and 'Sounds good!' to David.", "turn 2: Please call +1-555-123-4567 now. -> Now calling +1-555-123-4567."], "query": "If he doesn't answer, send him a text saying 'I have good news.'", "rewrited_query": "If he doesn't answer, send +1-555-123-4567 a text saying 'I have good news.'", "answer": {"plan": "send_message", "arguments": {"to": "+1-555-123-4567", "message": "I have good news."}}, "unique_idx": "ACTION_VIEW_SENT_MESSAGES-2106-dial-1-send_message-1"}
{"conversation_history": ["turn 1: Fire up Shazam for music streaming. -> Alright, launching Shazam for your music streaming.", "turn 2: Could you retrieve the phone number for the contact at /contacts/victor? -> Victor's phone number is 555-333-4444."], "query": "Dial that, please.", "rewrited_query": "Dial 555-333-4444, please.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-333-4444"}}, "unique_idx": "play_music-1433-get_contact_info-1_NR-dial-1"}
{"conversation_history": ["turn 1: Present the data of sent SMS messages on my phone. -> Displaying sent messages: Boss - 'Meeting at 2 PM'; Customer - 'Order confirmed'.", "turn 2: I want the phone info from the record at /contacts/derek. -> The phone number for Derek is 555-123-4567."], "query": "Send him a message that says, 'Are we still on for lunch?'", "rewrited_query": "Send 555-123-4567 a message that says, 'Are we still on for lunch?'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Are we still on for lunch?"}}, "unique_idx": "ACTION_VIEW_SENT_MESSAGES-2155-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Play the following URI: 'spotify:track:0987654321fedcba'. -> Now playing the URI: spotify:track:0987654321fedcba.", "turn 2: Can you retrieve complete contact info for /directory/carmen? -> Okay, here's a summary of the contact info for Carmen: Name: Carmen Rodriguez, Phone: 555-987-6543, Email: carmen.rodriguez@example.com."], "query": "Send her a text saying 'Hi Carmen, just confirming our meeting tomorrow.'", "rewrited_query": "Send Carmen Rodriguez a text saying 'Hi Carmen, just confirming our meeting tomorrow.'", "answer": {"plan": "send_message", "arguments": {"to": "Carmen Rodriguez", "message": "Hi Carmen, just confirming our meeting tomorrow."}}, "unique_idx": "play_music-1434-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need an alarm at 10:10 with the note 'Morning briefing' and please ensure it doesn't vibrate. -> Understood. An alarm is now set for 10:10 AM with the note 'Morning briefing', and vibrate is disabled.", "turn 2: Show me the address of the contact registered as /contacts/brian_address. -> Brian's address is: 123 Highland, Anytown, CA 91234."], "query": "Text him 'I'm on my way to your address.'", "rewrited_query": "Text Brian 'I'm on my way to your address.'", "answer": {"plan": "send_message", "arguments": {"to": "Brian", "message": "I'm on my way to your address."}}, "unique_idx": "ACTION_SET_ALARM-592-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you edit the video at content://videos/repair.mp4 so that it only plays from 7 to 37 seconds? -> Got it. Loading content://videos/repair.mp4, trimmed from 7 seconds to 37 seconds.", "turn 2: I need the email information for the contact at /contacts/amber. -> Amber's email address is amber49@sample.net."], "query": "Send a message to her saying, 'I will send the file via email.'", "rewrited_query": "Send a message to amber49@sample.net saying, 'I will send the file via email.'", "answer": {"plan": "send_message", "arguments": {"to": "amber49@sample.net", "message": "I will send the file via email."}}, "unique_idx": "ACTION_EDIT_VIDEO-1780-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Get the email data from content://contact/archive/email/node_77@domain.com, thanks. -> You got it! I'll get the email from that content URI.", "turn 2: Please obtain the phone details from /contacts/zach. -> Okay, Zach's phone number is 555-246-8012."], "query": "Send him a text message saying 'Let's catch up this week.'", "rewrited_query": "Send 555-246-8012 a text message saying 'Let's catch up this week.'", "answer": {"plan": "send_message", "arguments": {"to": "555-246-8012", "message": "Let's catch up this week."}}, "unique_idx": "get_contact_info_from_uri-1102-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Kindly trigger the video function in the camera app so I can film. -> Triggering video function now.", "turn 2: What is the complete summary for the contact at /contacts/yolanda? -> Here is Yolanda's contact summary: Name: Yolanda Hayes, Phone: 555-789-1234, Email: yolanda.hayes@workplace.org."], "query": "Send her a text message saying 'Thanks for the update, Yolanda!'", "rewrited_query": "Send Yolanda Hayes a text message saying 'Thanks for the update, Yolanda!'", "answer": {"plan": "send_message", "arguments": {"to": "Yolanda Hayes", "message": "Thanks for the update, Yolanda!"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-911-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Select and share various PDF documents for our meeting. -> Understood. Opening the file picker for multiple PDF documents.", "turn 2: Get me the address details for the contact at /contacts/xavier. -> Xavier's address is: 456 Grand Avenue, Suite 200, Cityville, TX 75000."], "query": "Text him, 'I'm leaving now and will be there in 10 minutes.'", "rewrited_query": "Text Xavier, 'I'm leaving now and will be there in 10 minutes.'", "answer": {"plan": "send_message", "arguments": {"to": "Xavier", "message": "I'm leaving now and will be there in 10 minutes."}}, "unique_idx": "ACTION_GET_CONTENT-213-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I plan to change my alarm tone. Launch the ringtone selection menu for me. -> Launching the ringtone selection menu now.", "turn 2: I require the email information from the contact URI /user/walter. -> Walter's email address is walter.white@example.com."], "query": "Send a message to him saying, 'The presentation is ready.'", "rewrited_query": "Send a message to walter.white@example.com saying, 'The presentation is ready.'", "answer": {"plan": "send_message", "arguments": {"to": "walter.white@example.com", "message": "The presentation is ready."}}, "unique_idx": "ACTION_GET_RINGTONE-322-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Fire up Shazam for music streaming. -> Alright, launching Shazam for your music streaming.", "turn 2: Could you retrieve the phone number for the contact at /contacts/victor? -> Victor's phone number is 555-333-4444."], "query": "Send him a text message 'Are you still free for coffee?'", "rewrited_query": "Send 555-333-4444 a text message 'Are you still free for coffee?'", "answer": {"plan": "send_message", "arguments": {"to": "555-333-4444", "message": "Are you still free for coffee?"}}, "unique_idx": "play_music-1433-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please execute a camera image capture and use content://secure/storage/image.jpg as the destination. -> Understood. The image will be saved to content://secure/storage/image.jpg. Go ahead and take the picture!", "turn 2: Please provide a summary of the contact details for /contacts/ursula. -> Here is a summary for Ursula: Name: Ursula Martinez, Phone: 555-555-5555, Email: ursula.martinez@sampledomain.org, Address: 789 Pine Lane, Smallville, KS 66666."], "query": "Text her 'See you at the usual spot tomorrow.'", "rewrited_query": "Text Ursula Martinez 'See you at the usual spot tomorrow.'", "answer": {"plan": "send_message", "arguments": {"to": "Ursula Martinez", "message": "See you at the usual spot tomorrow."}}, "unique_idx": "ACTION_IMAGE_CAPTURE-377-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Kindly trigger the video function in the camera app so I can film. -> Triggering video function now.", "turn 2: What is the complete summary for the contact at /contacts/yolanda? -> Here is Yolanda's contact summary: Name: Yolanda Hayes, Phone: 555-789-1234, Email: yolanda.hayes@workplace.org."], "query": "Send an email to her.", "rewrited_query": "Send an email to yolanda.hayes@workplace.org.", "answer": {"plan": "send_email", "arguments": {"to": "yolanda.hayes@workplace.org"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-911-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I plan to change my alarm tone. Launch the ringtone selection menu for me. -> Launching the ringtone selection menu now.", "turn 2: I require the email information from the contact URI /user/walter. -> Walter's email address is walter.white@example.com."], "query": "Send Walter an email.", "rewrited_query": "Send walter.white@example.com an email.", "answer": {"plan": "send_email", "arguments": {"to": "walter.white@example.com"}}, "unique_idx": "ACTION_GET_RINGTONE-322-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Please execute a camera image capture and use content://secure/storage/image.jpg as the destination. -> Understood. The image will be saved to content://secure/storage/image.jpg. Go ahead and take the picture!", "turn 2: Please provide a summary of the contact details for /contacts/ursula. -> Here is a summary for Ursula: Name: Ursula Martinez, Phone: 555-555-5555, Email: ursula.martinez@sampledomain.org, Address: 789 Pine Lane, Smallville, KS 66666."], "query": "Send her an email.", "rewrited_query": "Send ursula.martinez@sampledomain.org an email.", "answer": {"plan": "send_email", "arguments": {"to": "ursula.martinez@sampledomain.org"}}, "unique_idx": "ACTION_IMAGE_CAPTURE-377-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Fire up Shazam for music streaming. -> Alright, launching Shazam for your music streaming.", "turn 2: Could you retrieve the phone number for the contact at /contacts/victor? -> Victor's phone number is 555-333-4444."], "query": "Can you find it on the map?", "rewrited_query": "Can you find 555-333-4444 on the map?", "answer": {"plan": "search_location", "arguments": {"query": "555-333-4444"}}, "unique_idx": "play_music-1433-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please change my ringtone to content://media/ringtone16 immediately. -> OK, I've updated your ringtone to content://media/ringtone16.", "turn 2: I am looking for address information for the contact at /contacts/tina_address. -> The address for Tina is: 123 Highland, Anytown, CA."], "query": "Send her a text saying 'I'll be there soon!'", "rewrited_query": "Send Tina a text saying 'I'll be there soon!'", "answer": {"plan": "send_message", "arguments": {"to": "Tina", "message": "I'll be there soon!"}}, "unique_idx": "ACTION_SET_RINGTONE-1673-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I'm trying to add contact info for Riley; please note his email as riley@mail.org. -> I've noted Riley's email as riley@mail.org, and I'm adding it to your contacts.", "turn 2: Please fetch the email details from the contact at /user/input/samuel_email. -> Okay, Samuel's email is samuel@email.com."], "query": "Can you send him an email saying 'Thank you for your information'?", "rewrited_query": "Can you send samuel@email.com an email saying 'Thank you for your information'?", "answer": {"plan": "send_message", "arguments": {"to": "samuel@email.com", "message": "Thank you for your information"}}, "unique_idx": "ACTION_INSERT_CONTACT-429-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you check the contact info from content://contacts/people/1023? -> Checking and displaying contact info from content://contacts/people/1023.", "turn 2: Provide the phone number for the contact at /data/rachel. -> Rachel's phone number is 555-909-8765."], "query": "Send her a text saying 'Can we talk?'", "rewrited_query": "Send 555-909-8765 a text saying 'Can we talk?'", "answer": {"plan": "send_message", "arguments": {"to": "555-909-8765", "message": "Can we talk?"}}, "unique_idx": "ACTION_VIEW_CONTACT-807-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you please text Tracy, stating 'The meeting has been moved to Room 101'? -> Noted. Texting Tracy now: The meeting has been moved to Room 101.", "turn 2: Show me a summary of the contact information for /profile/quentin. -> Here is Quentin's contact summary: Name: Quentin, Phone: 555-343-2211, Email: quentin@example.com."], "query": "Text him 'Are you available?'", "rewrited_query": "Text 555-343-2211 'Are you available?'", "answer": {"plan": "send_message", "arguments": {"to": "555-343-2211", "message": "Are you available?"}}, "unique_idx": "send_message-1326-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Let's open the display settings panel. -> Display settings are now open for you.", "turn 2: I need to check the email contact info for /contacts/peter_email. -> Peter's email address is listed as peter@anymail.com."], "query": "Send him a short message saying 'See you soon!'", "rewrited_query": "Send peter@anymail.com a short message saying 'See you soon!'", "answer": {"plan": "send_message", "arguments": {"to": "peter@anymail.com", "message": "See you soon!"}}, "unique_idx": "open_settings-1157-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Kindly reveal the list of timers and alarms I set up on my phone. -> Your active alarms are: [alarm_id: 1 - 6:00 AM, alarm_id: 2 - 6:30 AM, alarm_id: 3 - 7:00 AM]", "turn 2: Please look up the address of the contact found at /directory/annie. -> The address for Annie is: 45 Oak Street, Smallville."], "query": "Send her a message saying 'I'm on my way.'", "rewrited_query": "Send Annie a message saying 'I'm on my way.'", "answer": {"plan": "send_message", "arguments": {"to": "Annie", "message": "I'm on my way."}}, "unique_idx": "ACTION_SHOW_ALARMS-697-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Show the call log on my phone that contains all recent entries. -> Here's the call log from your phone: Sarah +1-555-777-8888 (Incoming) - Today, 8:30 AM; Car Repair +1-555-222-3333 (Outgoing) - Tuesday, 4:00 PM.", "turn 2: Acquire the phone info from the record located at /info/mark. -> Mark's phone number is: 1-800-555-1212."], "query": "Text him 'Did you get the files?'", "rewrited_query": "Text 1-800-555-1212 'Did you get the files?'", "answer": {"plan": "send_message", "arguments": {"to": "1-800-555-1212", "message": "Did you get the files?"}}, "unique_idx": "ACTION_VIEW_CALL_LOG-2023-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you help me locate the modern art hub, the Guggenheim Museum in Bilbao? -> Okay, I'm finding the location of the Guggenheim Museum in Bilbao for you.", "turn 2: I desire to see the email address linked to the contact at /user/julia. -> Julia's email is julia.d@sample.net."], "query": "Send her a message stating 'Following up on our conversation.'", "rewrited_query": "Send julia.d@sample.net a message stating 'Following up on our conversation.'", "answer": {"plan": "send_message", "arguments": {"to": "julia.d@sample.net", "message": "Following up on our conversation."}}, "unique_idx": "search_location-1212-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you please reveal all timers currently operating on my device? -> Okay, here's a list of timers in progress: [1 minute - Tea].", "turn 2: Can you obtain the address for the contact at /contacts/chris? -> Chris's address is: 789 Pine Avenue, Lakeside."], "query": "Send him a message saying 'I am almost there.'", "rewrited_query": "Send Chris a message saying 'I am almost there.'", "answer": {"plan": "send_message", "arguments": {"to": "Chris", "message": "I am almost there."}}, "unique_idx": "ACTION_SHOW_TIMERS-1972-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Call the business contact at 555-0037 as a priority. -> Now dialing 555-0037.", "turn 2: Please get the contact summary for /contacts/mia. -> Here's Mia's contact summary: Name: Mia Johnson, Phone: 555-222-1234."], "query": "Send her a text saying 'Thanks!'", "rewrited_query": "Send 555-222-1234 a text saying 'Thanks!'", "answer": {"plan": "send_message", "arguments": {"to": "555-222-1234", "message": "Thanks!"}}, "unique_idx": "dial-994-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you help me locate the modern art hub, the Guggenheim Museum in Bilbao? -> Okay, I'm finding the location of the Guggenheim Museum in Bilbao for you.", "turn 2: I desire to see the email address linked to the contact at /user/julia. -> Julia's email is julia.d@sample.net."], "query": "Find the location associated with it.", "rewrited_query": "Find the location associated with the email julia.d@sample.net.", "answer": {"plan": "search_location", "arguments": {"query": "julia.d@sample.net"}}, "unique_idx": "search_location-1212-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you please reveal all timers currently operating on my device? -> Okay, here's a list of timers in progress: [1 minute - Tea].", "turn 2: Can you obtain the address for the contact at /contacts/chris? -> Chris's address is: 789 Pine Avenue, Lakeside."], "query": "Show that address on a map.", "rewrited_query": "Show the address 789 Pine Avenue, Lakeside on a map.", "answer": {"plan": "search_location", "arguments": {"query": "789 Pine Avenue, Lakeside"}}, "unique_idx": "ACTION_SHOW_TIMERS-1972-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Call the business contact at 555-0037 as a priority. -> Now dialing 555-0037.", "turn 2: Please get the contact summary for /contacts/mia. -> Here's Mia's contact summary: Name: Mia Johnson, Phone: 555-222-1234."], "query": "Find the location of that phone number.", "rewrited_query": "Find the location of the phone number 555-222-1234.", "answer": {"plan": "search_location", "arguments": {"query": "555-222-1234"}}, "unique_idx": "dial-994-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Message the delivery guy at +3311223344: 'Please leave the package at the front door if no one answers'. -> Okay, I've sent 'Please leave the package at the front door if no one answers' to +3311223344.", "turn 2: What is the phone number associated with /contacts/rita? -> The phone number for Rita at /contacts/rita is 323-444-5555."], "query": "Could you dial it?", "rewrited_query": "Could you dial 323-444-5555?", "answer": {"plan": "dial", "arguments": {"phone_number": "323-444-5555"}}, "unique_idx": "send_message-1325-get_contact_info-1_NR-dial-1"}
{"conversation_history": ["turn 1: I want to find the geographic position of the Acropolis in Athens. Can you search it? -> Yes, I can. Searching for the Acropolis in Athens.", "turn 2: I want the phone number for the contact at /data/steve. -> I found a phone number for /data/steve: 555-123-4567."], "query": "Send them a message that says 'Hi, this is an automated reminder.'", "rewrited_query": "Send 555-123-4567 a message that says 'Hi, this is an automated reminder.'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Hi, this is an automated reminder."}}, "unique_idx": "search_location-1211-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Show a log of my web navigation activity from the past few sessions. -> Here's your web navigation activity log:  CNN, BBC, and Reuters.", "turn 2: Retrieve the email information from /contacts/kevin. -> Okay, the email for /contacts/kevin is kevin.123@sample.com."], "query": "Text him 'Remember to bring the report to the meeting'.", "rewrited_query": "Text kevin.123@sample.com 'Remember to bring the report to the meeting'.", "answer": {"plan": "send_message", "arguments": {"to": "kevin.123@sample.com", "message": "Remember to bring the report to the meeting"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2211-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Load contact details for me using the link content://contacts/people/1022. -> Loading contact details from content://contacts/people/1022.", "turn 2: Fetch the contact summary for /directory/linda_contact. -> Here's the contact summary for /directory/linda_contact: Linda Johnson - Software Engineer, 555-987-6543."], "query": "Send her a text saying 'Confirming our meeting for tomorrow.'", "rewrited_query": "Send Linda Johnson - Software Engineer, 555-987-6543 a text saying 'Confirming our meeting for tomorrow.'", "answer": {"plan": "send_message", "arguments": {"to": "Linda Johnson - Software Engineer, 555-987-6543", "message": "Confirming our meeting for tomorrow."}}, "unique_idx": "ACTION_VIEW_CONTACT-806-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please pull the recent app screen so I can check what I used. -> Okay, here are your recent apps: Messages, Chrome, Calendar, and Settings.", "turn 2: Could you deliver the address info for the URI /user/contact/paul? -> The address for /user/contact/paul is: 123 Highland, Anytown, CA 91234."], "query": "Send him a message saying 'Your package has been dispatched to that address.'", "rewrited_query": "Send 123 Highland, Anytown, CA 91234 a message saying 'Your package has been dispatched to that address.'", "answer": {"plan": "send_message", "arguments": {"to": "123 Highland, Anytown, CA 91234", "message": "Your package has been dispatched to that address."}}, "unique_idx": "ACTION_VIEW_RECENT_APPS-2321-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Proceed with recording a video and put it in content://saves/video_clip.mp4. -> Commencing video recording and saving to content://saves/video_clip.mp4.", "turn 2: Give me the phone information from the contact record located at /contacts/oliver. -> The phone number for /contacts/oliver is 444-555-6666."], "query": "Send him a text that says, 'Please call me back when you have a moment.'", "rewrited_query": "Send 444-555-6666 a text that says, 'Please call me back when you have a moment.'", "answer": {"plan": "send_message", "arguments": {"to": "444-555-6666", "message": "Please call me back when you have a moment."}}, "unique_idx": "ACTION_VIDEO_CAPTURE-756-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Alert david@security.net by email that unusual activity has been detected onsite. -> Sending an alert email to david@security.net regarding the unusual activity detected onsite.", "turn 2: I need to see the email details from /users/info/nina. -> Okay, the email address for /users/info/nina is nina@example.net."], "query": "Send her a reminder saying 'Meeting is scheduled for tomorrow at 2 PM'.", "rewrited_query": "Send nina@example.net a reminder saying 'Meeting is scheduled for tomorrow at 2 PM'.", "answer": {"plan": "send_message", "arguments": {"to": "nina@example.net", "message": "Meeting is scheduled for tomorrow at 2 PM"}}, "unique_idx": "send_email-1265-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Get a detailed list of my sent texts. -> Okay, I've got your sent texts. Here it is: David - 'Yes, I can.'; Emily - 'Thank you!'", "turn 2: Get me the contact summary for /contacts/henry. -> Here's the contact summary for Henry at /contacts/henry: Henry Davis - Project Manager."], "query": "Send him a message saying 'Can you please send over the updated presentation slides?'", "rewrited_query": "Send Henry Davis - Project Manager a message saying 'Can you please send over the updated presentation slides?'", "answer": {"plan": "send_message", "arguments": {"to": "Henry Davis - Project Manager", "message": "Can you please send over the updated presentation slides?"}}, "unique_idx": "ACTION_VIEW_SENT_MESSAGES-2154-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Message the delivery guy at +3311223344: 'Please leave the package at the front door if no one answers'. -> Okay, I've sent 'Please leave the package at the front door if no one answers' to +3311223344.", "turn 2: What is the phone number associated with /contacts/rita? -> The phone number for Rita at /contacts/rita is 323-444-5555."], "query": "Text her 'Can you give me a call when you have a chance?'", "rewrited_query": "Text 323-444-5555 'Can you give me a call when you have a chance?'", "answer": {"plan": "send_message", "arguments": {"to": "323-444-5555", "message": "Can you give me a call when you have a chance?"}}, "unique_idx": "send_message-1325-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I want to find online tutorials for learning how to code in JavaScript. Please search for it. -> No problem! I'm searching the web for online tutorials for learning how to code in JavaScript: Here are some online tutorials to get you started with JavaScript coding.", "turn 2: I require the address details of the contact at /user/info/samuel. -> Okay, the address for /user/info/samuel is 45 Oak Street, Smallville, KS 66002."], "query": "Send him a text saying 'Confirm your delivery address is still that one.'", "rewrited_query": "Send 45 Oak Street, Smallville, KS 66002 a text saying 'Confirm your delivery address is still that one.'", "answer": {"plan": "send_message", "arguments": {"to": "45 Oak Street, Smallville, KS 66002", "message": "Confirm your delivery address is still that one."}}, "unique_idx": "web_search-1379-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please count down 55 minutes and bypass the UI prompt. -> Okay, a timer has been set for 55 minutes.", "turn 2: Can you retrieve the email info for the record at /contacts/laura? -> I found the email for /contacts/laura: laura.jones@email.com."], "query": "Send a quick message to her saying 'Checking in, did you receive the documents?'", "rewrited_query": "Send a quick message to laura.jones@email.com saying 'Checking in, did you receive the documents?'", "answer": {"plan": "send_message", "arguments": {"to": "laura.jones@email.com", "message": "Checking in, did you receive the documents?"}}, "unique_idx": "ACTION_SET_TIMER-649-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I want to find the geographic position of the Acropolis in Athens. Can you search it? -> Yes, I can. Searching for the Acropolis in Athens.", "turn 2: I want the phone number for the contact at /data/steve. -> I found a phone number for /data/steve: 555-123-4567."], "query": "Find it on a map.", "rewrited_query": "Find 555-123-4567 on a map.", "answer": {"plan": "search_location", "arguments": {"query": "555-123-4567"}}, "unique_idx": "search_location-1211-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Show a log of my web navigation activity from the past few sessions. -> Here's your web navigation activity log:  CNN, BBC, and Reuters.", "turn 2: Retrieve the email information from /contacts/kevin. -> Okay, the email for /contacts/kevin is kevin.123@sample.com."], "query": "Search for that.", "rewrited_query": "Search for kevin.123@sample.com.", "answer": {"plan": "search_location", "arguments": {"query": "kevin.123@sample.com"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2211-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Load contact details for me using the link content://contacts/people/1022. -> Loading contact details from content://contacts/people/1022.", "turn 2: Fetch the contact summary for /directory/linda_contact. -> Here's the contact summary for /directory/linda_contact: Linda Johnson - Software Engineer, 555-987-6543."], "query": "Search that number on a map.", "rewrited_query": "Search 555-987-6543 on a map.", "answer": {"plan": "search_location", "arguments": {"query": "555-987-6543"}}, "unique_idx": "ACTION_VIEW_CONTACT-806-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Proceed with recording a video and put it in content://saves/video_clip.mp4. -> Commencing video recording and saving to content://saves/video_clip.mp4.", "turn 2: Give me the phone information from the contact record located at /contacts/oliver. -> The phone number for /contacts/oliver is 444-555-6666."], "query": "Look that up on the map.", "rewrited_query": "Look 444-555-6666 up on the map.", "answer": {"plan": "search_location", "arguments": {"query": "444-555-6666"}}, "unique_idx": "ACTION_VIDEO_CAPTURE-756-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Alert david@security.net by email that unusual activity has been detected onsite. -> Sending an alert email to david@security.net regarding the unusual activity detected onsite.", "turn 2: I need to see the email details from /users/info/nina. -> Okay, the email address for /users/info/nina is nina@example.net."], "query": "Can you search for that?", "rewrited_query": "Can you search for nina@example.net?", "answer": {"plan": "search_location", "arguments": {"query": "nina@example.net"}}, "unique_idx": "send_email-1265-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Get a detailed list of my sent texts. -> Okay, I've got your sent texts. Here it is: David - 'Yes, I can.'; Emily - 'Thank you!'", "turn 2: Get me the contact summary for /contacts/henry. -> Here's the contact summary for Henry at /contacts/henry: Henry Davis - Project Manager."], "query": "Can you search for him?", "rewrited_query": "Can you search for Henry Davis - Project Manager?", "answer": {"plan": "search_location", "arguments": {"query": "Henry Davis - Project Manager"}}, "unique_idx": "ACTION_VIEW_SENT_MESSAGES-2154-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Message the delivery guy at +3311223344: 'Please leave the package at the front door if no one answers'. -> Okay, I've sent 'Please leave the package at the front door if no one answers' to +3311223344.", "turn 2: What is the phone number associated with /contacts/rita? -> The phone number for Rita at /contacts/rita is 323-444-5555."], "query": "Find that on a map", "rewrited_query": "Find 323-444-5555 on a map", "answer": {"plan": "search_location", "arguments": {"query": "323-444-5555"}}, "unique_idx": "send_message-1325-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I want to find online tutorials for learning how to code in JavaScript. Please search for it. -> No problem! I'm searching the web for online tutorials for learning how to code in JavaScript: Here are some online tutorials to get you started with JavaScript coding.", "turn 2: I require the address details of the contact at /user/info/samuel. -> Okay, the address for /user/info/samuel is 45 Oak Street, Smallville, KS 66002."], "query": "Map that address.", "rewrited_query": "Map 45 Oak Street, Smallville, KS 66002 address.", "answer": {"plan": "search_location", "arguments": {"query": "45 Oak Street, Smallville, KS 66002"}}, "unique_idx": "web_search-1379-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please count down 55 minutes and bypass the UI prompt. -> Okay, a timer has been set for 55 minutes.", "turn 2: Can you retrieve the email info for the record at /contacts/laura? -> I found the email for /contacts/laura: laura.jones@email.com."], "query": "Search it", "rewrited_query": "Search laura.jones@email.com", "answer": {"plan": "search_location", "arguments": {"query": "laura.jones@email.com"}}, "unique_idx": "ACTION_SET_TIMER-649-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Send an SMS to coordinator Lily with the note 'Workshop details have been emailed'. -> Message delivered to Lily: Workshop details have been emailed.", "turn 2: Could you fetch the phone information from /contacts/amy_2023? -> Okay, the phone number for /contacts/amy_2023 is 555-222-3333."], "query": "Can you dial that number for me?", "rewrited_query": "Can you dial 555-222-3333 for me?", "answer": {"plan": "dial", "arguments": {"phone_number": "555-222-3333"}}, "unique_idx": "send_message-1324-get_contact_info-1_NR-dial-1"}
{"conversation_history": ["turn 1: I'd like to use the default app for some tunes. -> Sure thing, launching the default music app.", "turn 2: Please pull the phone number from the contact at /contacts/david. -> The phone number for /contacts/david is 555-123-4567."], "query": "Send a text to that number saying 'Hi David, are you free to talk?'", "rewrited_query": "Send a text to 555-123-4567 saying 'Hi David, are you free to talk?'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Hi David, are you free to talk?"}}, "unique_idx": "play_music-1432-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Kindly open content://archive/notes/292 for editing. No initial content provided, just open it. -> Alright, opening content://archive/notes/292 for editing now.", "turn 2: Show me a complete summary for /data/alex. -> Here's a summary for /data/alex: Name: Alex Johnson, Phone: 555-987-6543, Email: alex.j@example.com."], "query": "Text that number 'I'll call you in 10 minutes.'", "rewrited_query": "Text 555-987-6543 'I'll call you in 10 minutes.'", "answer": {"plan": "send_message", "arguments": {"to": "555-987-6543", "message": "I'll call you in 10 minutes."}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1599-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need to inform linda@media.tv with an email that has the subject 'Broadcast Schedule' and mention that the schedule has changed. -> Will do. Sending an email to linda@media.tv with the subject 'Broadcast Schedule' and the message 'The schedule has changed'.", "turn 2: I want to know the address for the contact listed at /user/profile/jack. -> The address for /user/profile/jack is 123 Main Street, Anytown, CA 91234."], "query": "Send Jack a text saying 'I'm on my way to 123 Main Street, Anytown, CA 91234'", "rewrited_query": "Send Jack a text saying 'I'm on my way to 123 Main Street, Anytown, CA 91234'", "answer": {"plan": "send_message", "arguments": {"to": "Jack", "message": "I'm on my way to 123 Main Street, Anytown, CA 91234"}}, "unique_idx": "send_email-1264-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you pull up my online history so I can see the pages I've navigated to recently? -> Sure, I've pulled up your online history: LinkedIn, GitHub, and Medium.", "turn 2: Fetch the email information for the contact at /directory/evelyn.email. -> The email address for /directory/evelyn.email is evelyn.email@example.com."], "query": "Send a message to that email address saying 'I'm trying to reach Evelyn, please reply.'", "rewrited_query": "Send a message to evelyn.email@example.com saying 'I'm trying to reach Evelyn, please reply.'", "answer": {"plan": "send_message", "arguments": {"to": "evelyn.email@example.com", "message": "I'm trying to reach Evelyn, please reply."}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2210-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Send an SMS to coordinator Lily with the note 'Workshop details have been emailed'. -> Message delivered to Lily: Workshop details have been emailed.", "turn 2: Could you fetch the phone information from /contacts/amy_2023? -> Okay, the phone number for /contacts/amy_2023 is 555-222-3333."], "query": "Text that number 'Hi Amy, can you call me back when you have a moment?'", "rewrited_query": "Text 555-222-3333 'Hi Amy, can you call me back when you have a moment?'", "answer": {"plan": "send_message", "arguments": {"to": "555-222-3333", "message": "Hi Amy, can you call me back when you have a moment?"}}, "unique_idx": "send_message-1324-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you update the record for my acquaintance at content://contacts/people/george by updating his email to george@promo.biz? -> OK, I've updated George's email to george@promo.biz in his contact record at content://contacts/people/george.", "turn 2: I require a full summary of the contact details from /contacts/adam. -> Here's the summary for /contacts/adam: Adam Smith, Phone: 555-444-5555, Email: adam.smith@sample.net, Address: 456 Oak Ave, Townsville."], "query": "Text Adam saying 'Hi Adam, just wanted to check if you received the document I sent.'", "rewrited_query": "Text Adam Smith saying 'Hi Adam, just wanted to check if you received the document I sent.'", "answer": {"plan": "send_message", "arguments": {"to": "Adam Smith", "message": "Hi Adam, just wanted to check if you received the document I sent."}}, "unique_idx": "ACTION_EDIT_CONTACT-106-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Set content://media/ringtone15 as my phone's alert sound. -> Successfully set your alert sound to content://media/ringtone15.", "turn 2: Please fetch the email address for the contact located at /profile/john.doe. -> The email address for /profile/john.doe is john.doe@email.com."], "query": "Text John, and say 'I've just sent you an email to john.doe@email.com'", "rewrited_query": "Text John, and say 'I've just sent you an email to john.doe@email.com'", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "I've just sent you an email to john.doe@email.com"}}, "unique_idx": "ACTION_SET_RINGTONE-1672-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I'm looking for address details at contact://doris_residence. -> Sure, looking up the address for contact://doris_residence.", "turn 2: Can you get the phone number that belongs to /contacts/mary_phone? -> The phone number for /contacts/mary_phone is 555-777-8888."], "query": "Send that number a text that says 'Hello, can you call me?'", "rewrited_query": "Send 555-777-8888 a text that says 'Hello, can you call me?'", "answer": {"plan": "send_message", "arguments": {"to": "555-777-8888", "message": "Hello, can you call me?"}}, "unique_idx": "get_contact_info-1051-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Let me grab an image file so I can include it in my report. -> Okay, opening the image selector now to attach to your report.", "turn 2: I need a summary of the contact details for /contacts/bob_jones. -> Okay, here's the summary for /contacts/bob_jones: Name: Bob Jones, Phone: 555-111-2222, Email: bob.jones@example.org."], "query": "Send Bob a text to that number: 'See you tomorrow at 10 AM.'", "rewrited_query": "Send Bob Jones a text to 555-111-2222: 'See you tomorrow at 10 AM.'", "answer": {"plan": "send_message", "arguments": {"to": "555-111-2222", "message": "See you tomorrow at 10 AM."}}, "unique_idx": "ACTION_GET_CONTENT-212-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Get the email contact details for contact://charlie_mail. -> I'm getting the email details for contact://charlie_mail.", "turn 2: Retrieve the address from the contact record at /user/info/sandra. -> The address for /user/info/sandra is 789 Pine Lane, Villageville, TX 77777."], "query": "Text Sandra saying 'I will arrive at 789 Pine Lane, Villageville, TX 77777 in 30 minutes.'", "rewrited_query": "Text Sandra saying 'I will arrive at 789 Pine Lane, Villageville, TX 77777 in 30 minutes.'", "answer": {"plan": "send_message", "arguments": {"to": "Sandra", "message": "I will arrive at 789 Pine Lane, Villageville, TX 77777 in 30 minutes."}}, "unique_idx": "get_contact_info-1050-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Kindly open content://archive/notes/292 for editing. No initial content provided, just open it. -> Alright, opening content://archive/notes/292 for editing now.", "turn 2: Show me a complete summary for /data/alex. -> Here's a summary for /data/alex: Name: Alex Johnson, Phone: 555-987-6543, Email: alex.j@example.com."], "query": "Send an email to that address.", "rewrited_query": "Send an email to alex.j@example.com address.", "answer": {"plan": "send_email", "arguments": {"to": "alex.j@example.com"}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1599-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I need to inform linda@media.tv with an email that has the subject 'Broadcast Schedule' and mention that the schedule has changed. -> Will do. Sending an email to linda@media.tv with the subject 'Broadcast Schedule' and the message 'The schedule has changed'.", "turn 2: I want to know the address for the contact listed at /user/profile/jack. -> The address for /user/profile/jack is 123 Main Street, Anytown, CA 91234."], "query": "Email it to jack@example.com.", "rewrited_query": "Email 123 Main Street, Anytown, CA 91234 to jack@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "jack@example.com", "body": "123 Main Street, Anytown, CA 91234"}}, "unique_idx": "send_email-1264-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Could you pull up my online history so I can see the pages I've navigated to recently? -> Sure, I've pulled up your online history: LinkedIn, GitHub, and Medium.", "turn 2: Fetch the email information for the contact at /directory/evelyn.email. -> The email address for /directory/evelyn.email is evelyn.email@example.com."], "query": "Send her an email to confirm the meeting.", "rewrited_query": "Send evelyn.email@example.com an email to confirm the meeting.", "answer": {"plan": "send_email", "arguments": {"to": "evelyn.email@example.com", "body": "confirm the meeting"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2210-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Set content://media/ringtone15 as my phone's alert sound. -> Successfully set your alert sound to content://media/ringtone15.", "turn 2: Please fetch the email address for the contact located at /profile/john.doe. -> The email address for /profile/john.doe is john.doe@email.com."], "query": "Email him a reminder.", "rewrited_query": "Email john.doe@email.com a reminder.", "answer": {"plan": "send_email", "arguments": {"to": "john.doe@email.com", "body": "a reminder"}}, "unique_idx": "ACTION_SET_RINGTONE-1672-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Get the email contact details for contact://charlie_mail. -> I'm getting the email details for contact://charlie_mail.", "turn 2: Retrieve the address from the contact record at /user/info/sandra. -> The address for /user/info/sandra is 789 Pine Lane, Villageville, TX 77777."], "query": "Send an email about that address to sandra@example.net.", "rewrited_query": "Send an email about 789 Pine Lane, Villageville, TX 77777 address to sandra@example.net.", "answer": {"plan": "send_email", "arguments": {"to": "sandra@example.net", "body": "789 Pine Lane, Villageville, TX 77777 address"}}, "unique_idx": "get_contact_info-1050-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Kindly open content://archive/notes/292 for editing. No initial content provided, just open it. -> Alright, opening content://archive/notes/292 for editing now.", "turn 2: Show me a complete summary for /data/alex. -> Here's a summary for /data/alex: Name: Alex Johnson, Phone: 555-987-6543, Email: alex.j@example.com."], "query": "Can you find that address?", "rewrited_query": "Can you find the address for Alex Johnson?", "answer": {"plan": "search_location", "arguments": {"query": "Alex Johnson"}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1599-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I need to inform linda@media.tv with an email that has the subject 'Broadcast Schedule' and mention that the schedule has changed. -> Will do. Sending an email to linda@media.tv with the subject 'Broadcast Schedule' and the message 'The schedule has changed'.", "turn 2: I want to know the address for the contact listed at /user/profile/jack. -> The address for /user/profile/jack is 123 Main Street, Anytown, CA 91234."], "query": "Look that up on the map.", "rewrited_query": "Look 123 Main Street, Anytown, CA 91234 up on the map.", "answer": {"plan": "search_location", "arguments": {"query": "123 Main Street, Anytown, CA 91234"}}, "unique_idx": "send_email-1264-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you pull up my online history so I can see the pages I've navigated to recently? -> Sure, I've pulled up your online history: LinkedIn, GitHub, and Medium.", "turn 2: Fetch the email information for the contact at /directory/evelyn.email. -> The email address for /directory/evelyn.email is evelyn.email@example.com."], "query": "Find it on a map.", "rewrited_query": "Find evelyn.email@example.com on a map.", "answer": {"plan": "search_location", "arguments": {"query": "evelyn.email@example.com"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2210-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Send an SMS to coordinator Lily with the note 'Workshop details have been emailed'. -> Message delivered to Lily: Workshop details have been emailed.", "turn 2: Could you fetch the phone information from /contacts/amy_2023? -> Okay, the phone number for /contacts/amy_2023 is 555-222-3333."], "query": "Map that number.", "rewrited_query": "Map 555-222-3333.", "answer": {"plan": "search_location", "arguments": {"query": "555-222-3333"}}, "unique_idx": "send_message-1324-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you update the record for my acquaintance at content://contacts/people/george by updating his email to george@promo.biz? -> OK, I've updated George's email to george@promo.biz in his contact record at content://contacts/people/george.", "turn 2: I require a full summary of the contact details from /contacts/adam. -> Here's the summary for /contacts/adam: Adam Smith, Phone: 555-444-5555, Email: adam.smith@sample.net, Address: 456 Oak Ave, Townsville."], "query": "Can you search for that address?", "rewrited_query": "Can you search for 456 Oak Ave, Townsville?", "answer": {"plan": "search_location", "arguments": {"query": "456 Oak Ave, Townsville"}}, "unique_idx": "ACTION_EDIT_CONTACT-106-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Set content://media/ringtone15 as my phone's alert sound. -> Successfully set your alert sound to content://media/ringtone15.", "turn 2: Please fetch the email address for the contact located at /profile/john.doe. -> The email address for /profile/john.doe is john.doe@email.com."], "query": "Can you search for that?", "rewrited_query": "Can you search for john.doe@email.com?", "answer": {"plan": "search_location", "arguments": {"query": "john.doe@email.com"}}, "unique_idx": "ACTION_SET_RINGTONE-1672-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I'm looking for address details at contact://doris_residence. -> Sure, looking up the address for contact://doris_residence.", "turn 2: Can you get the phone number that belongs to /contacts/mary_phone? -> The phone number for /contacts/mary_phone is 555-777-8888."], "query": "Show that number on map.", "rewrited_query": "Show 555-777-8888 on map.", "answer": {"plan": "search_location", "arguments": {"query": "555-777-8888"}}, "unique_idx": "get_contact_info-1051-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Let me grab an image file so I can include it in my report. -> Okay, opening the image selector now to attach to your report.", "turn 2: I need a summary of the contact details for /contacts/bob_jones. -> Okay, here's the summary for /contacts/bob_jones: Name: Bob Jones, Phone: 555-111-2222, Email: bob.jones@example.org."], "query": "Look up his address.", "rewrited_query": "Look up Bob Jones's address.", "answer": {"plan": "search_location", "arguments": {"query": "Bob Jones"}}, "unique_idx": "ACTION_GET_CONTENT-212-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Get the email contact details for contact://charlie_mail. -> I'm getting the email details for contact://charlie_mail.", "turn 2: Retrieve the address from the contact record at /user/info/sandra. -> The address for /user/info/sandra is 789 Pine Lane, Villageville, TX 77777."], "query": "Can you pull that up on a map?", "rewrited_query": "Can you pull 789 Pine Lane, Villageville, TX 77777 up on a map?", "answer": {"plan": "search_location", "arguments": {"query": "789 Pine Lane, Villageville, TX 77777"}}, "unique_idx": "get_contact_info-1050-get_contact_info-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Let me grab an image file so I can include it in my report. -> Okay, opening the image selector now to attach to your report.", "turn 2: I need a summary of the contact details for /contacts/bob_jones. -> Okay, here's the summary for /contacts/bob_jones: Name: Bob Jones, Phone: 555-111-2222, Email: bob.jones@example.org."], "query": "Navigate to that location.", "rewrited_query": "Navigate to /contacts/bob_jones's location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "/contacts/bob_jones's location"}}, "unique_idx": "ACTION_GET_CONTENT-212-get_contact_info-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please pull up the ringtone picker so I can assign a new sound for my alarm. -> Displaying the ringtone picker for you now!", "turn 2: What is the contact summary for the URI /directory/contact_456? -> Fetching the summary for contact /directory/contact_456 now."], "query": "Text them 'Are you free to chat?'", "rewrited_query": "Text contact /directory/contact_456 'Are you free to chat?'", "answer": {"plan": "send_message", "arguments": {"to": "/directory/contact_456", "message": "Are you free to chat?"}}, "unique_idx": "ACTION_GET_RINGTONE-321-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need you to show me all the alarms that I have established. -> Showing all alarms: [alarm_id: 1 - 7:00 AM, Workout, alarm_id: 2 - 10:00 PM, Bedtime Reminder]", "turn 2: Need to acquire the email address for the contact at /contacts/lily-email. -> Acquiring the email address for the contact at /contacts/lily-email."], "query": "Can you text her 'I will email you later.'", "rewrited_query": "Can you text the contact at /contacts/lily-email 'I will email you later.'", "answer": {"plan": "send_message", "arguments": {"to": "/contacts/lily-email", "message": "I will email you later."}}, "unique_idx": "ACTION_SHOW_ALARMS-696-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please allow me to pick a single audio snippet for a quick demo. -> Affirmative. You can now choose a single audio snippet.", "turn 2: Looking up the phone information from contact /contacts/alan_smith. Can you help? -> Okay, retrieving the phone information for /contacts/alan_smith."], "query": "Send him a message saying 'Hey, give me a call when you have a chance.'", "rewrited_query": "Send contact /contacts/alan_smith a message saying 'Hey, give me a call when you have a chance.'", "answer": {"plan": "send_message", "arguments": {"to": "/contacts/alan_smith", "message": "Hey, give me a call when you have a chance."}}, "unique_idx": "ACTION_GET_CONTENT-211-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please open the picture-taking mode in my camera for a still image. -> Opening the still image capture mode.", "turn 2: Please get the address details for the contact with URI /contact/info/sara. -> Fetching the address details for /contact/info/sara."], "query": "Text them 'I will be there in 10 minutes.'", "rewrited_query": "Text contact with URI /contact/info/sara 'I will be there in 10 minutes.'", "answer": {"plan": "send_message", "arguments": {"to": "/contact/info/sara", "message": "I will be there in 10 minutes."}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-856-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I urge you to open the video camera application for recording. -> As you wish. Opening video camera.", "turn 2: Retrieve the full contact summary from /contacts/john_doe. -> Retrieving the summary for /contacts/john_doe now."], "query": "Send them a text saying 'Can you call me?'", "rewrited_query": "Send /contacts/john_doe a text saying 'Can you call me?'", "answer": {"plan": "send_message", "arguments": {"to": "/contacts/john_doe", "message": "Can you call me?"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-910-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please locate the Little Mermaid statue in Copenhagen. -> Searching for the Little Mermaid statue in Copenhagen now.", "turn 2: Could you extract the telephone details for the contact at /contact/mark? -> Extracting the telephone details for contact /contact/mark."], "query": "Text him 'I will reach out to you later.'", "rewrited_query": "Text contact /contact/mark 'I will reach out to you later.'", "answer": {"plan": "send_message", "arguments": {"to": "/contact/mark", "message": "I will reach out to you later."}}, "unique_idx": "search_location-1210-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you text our IT department at +1000999888 to alert them 'Server downtime in progress'? -> Text sent to +1000999888 with the message: Server downtime in progress.", "turn 2: Give me the email information for the contact found at /mycontacts/julia_d. -> Accessing email information for contact /mycontacts/julia_d."], "query": "Send her a text message: 'Let's meet tomorrow.'", "rewrited_query": "Send contact /mycontacts/julia_d a text message: 'Let's meet tomorrow.'", "answer": {"plan": "send_message", "arguments": {"to": "/mycontacts/julia_d", "message": "Let's meet tomorrow."}}, "unique_idx": "send_message-1323-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Alarm sound update required: please provide the ringtone selection option. -> Okay, I'm pulling up the ringtone selection tool now.", "turn 2: I need a complete summary of the contact details for /contacts/alexander. -> Pulling up the contact details summary for /contacts/alexander."], "query": "Send a text to them saying 'Are you available?'", "rewrited_query": "Send a text to /contacts/alexander saying 'Are you available?'", "answer": {"plan": "send_message", "arguments": {"to": "/contacts/alexander", "message": "Are you available?"}}, "unique_idx": "ACTION_GET_RINGTONE-320-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I want to change the details for the contact at content://contacts/people/eric; modify his phone to 123-000-4567 and his address to '78 Ocean Ave'. -> I am updating Eric's contact with the phone number 123-000-4567 and the address '78 Ocean Ave'. The updated contact URI is content://contacts/people/eric.", "turn 2: Please retrieve the address from the contact record at /user/info/hello_world. -> Retrieving the address for /user/info/hello_world."], "query": "Text them 'I have arrived.'", "rewrited_query": "Text /user/info/hello_world 'I have arrived.'", "answer": {"plan": "send_message", "arguments": {"to": "/user/info/hello_world", "message": "I have arrived."}}, "unique_idx": "ACTION_EDIT_CONTACT-105-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I'd like to have a picture taken. Activate the camera and let it save the file wherever it prefers. -> No problem! Camera's up, and I'll let it choose where to save. Say cheese!", "turn 2: Fetch the phone number for the contact at /data/contact_999. -> Fetching the phone number for /data/contact_999."], "query": "Send a message to them saying 'I will call you soon.'", "rewrited_query": "Send a message to /data/contact_999 saying 'I will call you soon.'", "answer": {"plan": "send_message", "arguments": {"to": "/data/contact_999", "message": "I will call you soon."}}, "unique_idx": "ACTION_IMAGE_CAPTURE-376-get_contact_info-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please allow me to pick a single audio snippet for a quick demo. -> Affirmative. You can now choose a single audio snippet.", "turn 2: Looking up the phone information from contact /contacts/alan_smith. Can you help? -> Okay, retrieving the phone information for /contacts/alan_smith."], "query": "Send an email to that contact with the subject 'Meeting Reminder'.", "rewrited_query": "Send an email to the contact at /contacts/alan_smith with the subject 'Meeting Reminder'.", "answer": {"plan": "send_email", "arguments": {"to": "/contacts/alan_smith", "subject": "Meeting Reminder"}}, "unique_idx": "ACTION_GET_CONTENT-211-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Please open the picture-taking mode in my camera for a still image. -> Opening the still image capture mode.", "turn 2: Please get the address details for the contact with URI /contact/info/sara. -> Fetching the address details for /contact/info/sara."], "query": "Email that contact their address details.", "rewrited_query": "Email the contact at /contact/info/sara their address details.", "answer": {"plan": "send_email", "arguments": {"to": "/contact/info/sara", "body": "their address details"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-856-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I urge you to open the video camera application for recording. -> As you wish. Opening video camera.", "turn 2: Retrieve the full contact summary from /contacts/john_doe. -> Retrieving the summary for /contacts/john_doe now."], "query": "Send that contact an email.", "rewrited_query": "Send the contact at /contacts/john_doe an email.", "answer": {"plan": "send_email", "arguments": {"to": "/contacts/john_doe"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-910-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Please locate the Little Mermaid statue in Copenhagen. -> Searching for the Little Mermaid statue in Copenhagen now.", "turn 2: Could you extract the telephone details for the contact at /contact/mark? -> Extracting the telephone details for contact /contact/mark."], "query": "Send an email to him.", "rewrited_query": "Send an email to the contact at /contact/mark.", "answer": {"plan": "send_email", "arguments": {"to": "/contact/mark"}}, "unique_idx": "search_location-1210-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Could you text our IT department at +1000999888 to alert them 'Server downtime in progress'? -> Text sent to +1000999888 with the message: Server downtime in progress.", "turn 2: Give me the email information for the contact found at /mycontacts/julia_d. -> Accessing email information for contact /mycontacts/julia_d."], "query": "Send an email to that contact with the subject 'Update'.", "rewrited_query": "Send an email to the contact at /mycontacts/julia_d with the subject 'Update'.", "answer": {"plan": "send_email", "arguments": {"to": "/mycontacts/julia_d", "subject": "Update"}}, "unique_idx": "send_message-1323-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Alarm sound update required: please provide the ringtone selection option. -> Okay, I'm pulling up the ringtone selection tool now.", "turn 2: I need a complete summary of the contact details for /contacts/alexander. -> Pulling up the contact details summary for /contacts/alexander."], "query": "Send him an email with the details.", "rewrited_query": "Send the contact at /contacts/alexander an email with the details.", "answer": {"plan": "send_email", "arguments": {"to": "/contacts/alexander", "body": "the details"}}, "unique_idx": "ACTION_GET_RINGTONE-320-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I want to change the details for the contact at content://contacts/people/eric; modify his phone to 123-000-4567 and his address to '78 Ocean Ave'. -> I am updating Eric's contact with the phone number 123-000-4567 and the address '78 Ocean Ave'. The updated contact URI is content://contacts/people/eric.", "turn 2: Please retrieve the address from the contact record at /user/info/hello_world. -> Retrieving the address for /user/info/hello_world."], "query": "Send that person their address.", "rewrited_query": "Send the contact at /user/info/hello_world their address.", "answer": {"plan": "send_email", "arguments": {"to": "/user/info/hello_world", "body": "their address"}}, "unique_idx": "ACTION_EDIT_CONTACT-105-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I'd like to have a picture taken. Activate the camera and let it save the file wherever it prefers. -> No problem! Camera's up, and I'll let it choose where to save. Say cheese!", "turn 2: Fetch the phone number for the contact at /data/contact_999. -> Fetching the phone number for /data/contact_999."], "query": "Send that contact an email with the phone number.", "rewrited_query": "Send the contact at /data/contact_999 an email with the phone number.", "answer": {"plan": "send_email", "arguments": {"to": "/data/contact_999", "body": "the phone number"}}, "unique_idx": "ACTION_IMAGE_CAPTURE-376-get_contact_info-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Please make my phone ring using the sound file at content://media/ringtone04. -> OK, I've set your ringtone to content://media/ringtone04.", "turn 2: Kindly pull the communication details from URI contact://comm/email/ceo@company.com. -> Fetching communication details from contact://comm/email/ceo@company.com now."], "query": "Send 'Meeting at 3 PM today' to that.", "rewrited_query": "Send 'Meeting at 3 PM today' to contact://comm/email/ceo@company.com.", "answer": {"plan": "send_message", "arguments": {"to": "contact://comm/email/ceo@company.com", "message": "Meeting at 3 PM today"}}, "unique_idx": "ACTION_SET_RINGTONE-1665-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need to add a new contact entry for Aiden with his phone number as 888-777-6666. -> I'm adding Aiden to your contacts with the phone number 888-777-6666.", "turn 2: Get contact data from the provided URI: contact://info/supplier. -> Retrieving the contact data from contact://info/supplier."], "query": "Send them a message saying 'The delivery is on the way'.", "rewrited_query": "Send contact://info/supplier a message saying 'The delivery is on the way'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://info/supplier", "message": "The delivery is on the way"}}, "unique_idx": "ACTION_INSERT_CONTACT-424-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I would like to navigate to the Pyramids of Giza, please help me locate them. -> Alright, locating the Pyramids of Giza.", "turn 2: I need to review the phone data from contact://phone/cell/999888. -> Accessing phone data from contact://phone/cell/999888."], "query": "Send a message to that number 'Can we talk?'", "rewrited_query": "Send a message to contact://phone/cell/999888 'Can we talk?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://phone/cell/999888", "message": "Can we talk?"}}, "unique_idx": "search_location-1204-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you initiate the ringtone selection process? I need a fresh alarm tone. -> Okay, the ringtone selection interface is now open. Select a fresh tone!", "turn 2: Please extract the contact details via content URI 'contact://customer_service/800'. -> Extracting contact details from contact://customer_service/800."], "query": "Send a text to that number saying, 'Please rate your experience'.", "rewrited_query": "Send a text to contact://customer_service/800 saying, 'Please rate your experience'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://customer_service/800", "message": "Please rate your experience."}}, "unique_idx": "ACTION_GET_RINGTONE-316-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you search for the Melbourne Cricket Ground? -> Sure, let me look up the Melbourne Cricket Ground for you.", "turn 2: Could you please retrieve the information detailed in contact://details/quincy? -> Retrieving information from contact://details/quincy."], "query": "Send 'I'm running late' to that person.", "rewrited_query": "Send 'I'm running late' to contact://details/quincy person.", "answer": {"plan": "send_message", "arguments": {"to": "contact://details/quincy person", "message": "I'm running late"}}, "unique_idx": "search_location-1203-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Retrieve profile details for the contact with URI content://contacts/contacts/2013. -> Fetching contact profile from content://contacts/contacts/2013.", "turn 2: Kindly get the contact specification via contact://contact/info/jkl. -> Getting contact specification from contact://contact/info/jkl."], "query": "Send them 'Your order has been dispatched'.", "rewrited_query": "Send contact://contact/info/jkl 'Your order has been dispatched'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://contact/info/jkl", "message": "Your order has been dispatched."}}, "unique_idx": "ACTION_VIEW_CONTACT-803-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I wish to choose a new sound for my alarm; can you display the ringtone picker for me? -> No problem! Opening the ringtone selection tool now.", "turn 2: Extract the contact number from the URI contact://numbers/3210. -> Extracting the contact number from contact://numbers/3210."], "query": "Send them 'Thank you for your purchase!'", "rewrited_query": "Send contact://numbers/3210 'Thank you for your purchase!'", "answer": {"plan": "send_message", "arguments": {"to": "contact://numbers/3210", "message": "Thank you for your purchase!"}}, "unique_idx": "ACTION_GET_RINGTONE-315-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Alter alarm 27 so that it rings at 17:50 with a custom ringtone 'ringtone://rock' and bypass the clock UI. -> I've updated alarm 27 to 5:50 PM with the 'ringtone://rock' ringtone, skipping the UI confirmation.", "turn 2: Please fetch the SMS details available at contact://sms/123456. -> Fetching SMS details from contact://sms/123456."], "query": "Send 'Please confirm your order' to that.", "rewrited_query": "Send 'Please confirm your order' to contact://sms/123456.", "answer": {"plan": "send_message", "arguments": {"to": "contact://sms/123456", "message": "Please confirm your order"}}, "unique_idx": "ACTION_EDIT_ALARM-1717-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please make my phone ring using the sound file at content://media/ringtone04. -> OK, I've set your ringtone to content://media/ringtone04.", "turn 2: Kindly pull the communication details from URI contact://comm/email/ceo@company.com. -> Fetching communication details from contact://comm/email/ceo@company.com now."], "query": "Send them an email.", "rewrited_query": "Send communication details from contact://comm/email/ceo@company.com an email.", "answer": {"plan": "send_email", "arguments": {"to": "contact://comm/email/ceo@company.com", "body": "communication details"}}, "unique_idx": "ACTION_SET_RINGTONE-1665-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I need to add a new contact entry for Aiden with his phone number as 888-777-6666. -> I'm adding Aiden to your contacts with the phone number 888-777-6666.", "turn 2: Get contact data from the provided URI: contact://info/supplier. -> Retrieving the contact data from contact://info/supplier."], "query": "Can you send them a quick hello?", "rewrited_query": "Can you send contact data from contact://info/supplier a quick hello?", "answer": {"plan": "send_email", "arguments": {"to": "contact://info/supplier", "body": "a quick hello?"}}, "unique_idx": "ACTION_INSERT_CONTACT-424-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I would like to navigate to the Pyramids of Giza, please help me locate them. -> Alright, locating the Pyramids of Giza.", "turn 2: I need to review the phone data from contact://phone/cell/999888. -> Accessing phone data from contact://phone/cell/999888."], "query": "Draft an email to them.", "rewrited_query": "Draft an email to phone data from contact://phone/cell/999888.", "answer": {"plan": "send_email", "arguments": {"to": "contact://phone/cell/999888"}}, "unique_idx": "search_location-1204-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Could you initiate the ringtone selection process? I need a fresh alarm tone. -> Okay, the ringtone selection interface is now open. Select a fresh tone!", "turn 2: Please extract the contact details via content URI 'contact://customer_service/800'. -> Extracting contact details from contact://customer_service/800."], "query": "Email them a thank you note.", "rewrited_query": "Email contact details from contact://customer_service/800 a thank you note.", "answer": {"plan": "send_email", "arguments": {"to": "contact://customer_service/800", "body": "a thank you note"}}, "unique_idx": "ACTION_GET_RINGTONE-316-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Help me find the Wi-Fi configuration page so I can set up my connection. -> Here are your Wi-Fi settings.", "turn 2: Fetch the email address stored at contact://mail/jane.smith@workmail.com. -> Fetching the email address from contact://mail/jane.smith@workmail.com."], "query": "Send an email to that address with the subject line 'Meeting Confirmation'.", "rewrited_query": "Send an email to email address stored at contact://mail/jane.smith@workmail.com with the subject line 'Meeting Confirmation'.", "answer": {"plan": "send_email", "arguments": {"to": "contact://mail/jane.smith@workmail.com", "subject": "Meeting Confirmation"}}, "unique_idx": "open_settings-1152-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Could you search for the Melbourne Cricket Ground? -> Sure, let me look up the Melbourne Cricket Ground for you.", "turn 2: Could you please retrieve the information detailed in contact://details/quincy? -> Retrieving information from contact://details/quincy."], "query": "Compose an email to them.", "rewrited_query": "Compose an email to information detailed in contact://details/quincy.", "answer": {"plan": "send_email", "arguments": {"to": "contact://details/quincy"}}, "unique_idx": "search_location-1203-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Retrieve profile details for the contact with URI content://contacts/contacts/2013. -> Fetching contact profile from content://contacts/contacts/2013.", "turn 2: Kindly get the contact specification via contact://contact/info/jkl. -> Getting contact specification from contact://contact/info/jkl."], "query": "Send an email to that.", "rewrited_query": "Send an email to contact specification from contact://contact/info/jkl.", "answer": {"plan": "send_email", "arguments": {"to": "contact://contact/info/jkl"}}, "unique_idx": "ACTION_VIEW_CONTACT-803-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: I wish to choose a new sound for my alarm; can you display the ringtone picker for me? -> No problem! Opening the ringtone selection tool now.", "turn 2: Extract the contact number from the URI contact://numbers/3210. -> Extracting the contact number from contact://numbers/3210."], "query": "Compose an email to it.", "rewrited_query": "Compose an email to contact number from the URI contact://numbers/3210.", "answer": {"plan": "send_email", "arguments": {"to": "contact://numbers/3210"}}, "unique_idx": "ACTION_GET_RINGTONE-315-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Please get the detailed contact information for content://contacts/people/1020. -> Now presenting the contact information for content://contacts/people/1020.", "turn 2: Retrieve the electronic mail info from contact://email/seth@domain.com. -> Retrieving email info from contact://email/seth@domain.com."], "query": "Email them about the meeting.", "rewrited_query": "Email electronic mail info from contact://email/seth@domain.com about the meeting.", "answer": {"plan": "send_email", "arguments": {"to": "contact://email/seth@domain.com", "body": "about the meeting"}}, "unique_idx": "ACTION_VIEW_CONTACT-802-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Please make my phone ring using the sound file at content://media/ringtone04. -> OK, I've set your ringtone to content://media/ringtone04.", "turn 2: Kindly pull the communication details from URI contact://comm/email/ceo@company.com. -> Fetching communication details from contact://comm/email/ceo@company.com now."], "query": "Can you show that on the map?", "rewrited_query": "Can you show contact://comm/email/ceo@company.com on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://comm/email/ceo@company.com"}}, "unique_idx": "ACTION_SET_RINGTONE-1665-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I need to add a new contact entry for Aiden with his phone number as 888-777-6666. -> I'm adding Aiden to your contacts with the phone number 888-777-6666.", "turn 2: Get contact data from the provided URI: contact://info/supplier. -> Retrieving the contact data from contact://info/supplier."], "query": "Is there a physical address associated with it?", "rewrited_query": "Is there a physical address associated with contact://info/supplier?", "answer": {"plan": "search_location", "arguments": {"query": "contact://info/supplier"}}, "unique_idx": "ACTION_INSERT_CONTACT-424-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I would like to navigate to the Pyramids of Giza, please help me locate them. -> Alright, locating the Pyramids of Giza.", "turn 2: I need to review the phone data from contact://phone/cell/999888. -> Accessing phone data from contact://phone/cell/999888."], "query": "Search that data on the map.", "rewrited_query": "Search contact://phone/cell/999888 on the map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://phone/cell/999888"}}, "unique_idx": "search_location-1204-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you initiate the ringtone selection process? I need a fresh alarm tone. -> Okay, the ringtone selection interface is now open. Select a fresh tone!", "turn 2: Please extract the contact details via content URI 'contact://customer_service/800'. -> Extracting contact details from contact://customer_service/800."], "query": "Map that location for me.", "rewrited_query": "Map contact://customer_service/800 location for me.", "answer": {"plan": "search_location", "arguments": {"query": "contact://customer_service/800"}}, "unique_idx": "ACTION_GET_RINGTONE-316-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Help me find the Wi-Fi configuration page so I can set up my connection. -> Here are your Wi-Fi settings.", "turn 2: Fetch the email address stored at contact://mail/jane.smith@workmail.com. -> Fetching the email address from contact://mail/jane.smith@workmail.com."], "query": "Check that address on a map.", "rewrited_query": "Check contact://mail/jane.smith@workmail.com on a map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://mail/jane.smith@workmail.com"}}, "unique_idx": "open_settings-1152-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you search for the Melbourne Cricket Ground? -> Sure, let me look up the Melbourne Cricket Ground for you.", "turn 2: Could you please retrieve the information detailed in contact://details/quincy? -> Retrieving information from contact://details/quincy."], "query": "Can you find it on the map?", "rewrited_query": "Can you find contact://details/quincy on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://details/quincy"}}, "unique_idx": "search_location-1203-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Retrieve profile details for the contact with URI content://contacts/contacts/2013. -> Fetching contact profile from content://contacts/contacts/2013.", "turn 2: Kindly get the contact specification via contact://contact/info/jkl. -> Getting contact specification from contact://contact/info/jkl."], "query": "Where is that located on the map?", "rewrited_query": "Where is contact://contact/info/jkl located on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://contact/info/jkl"}}, "unique_idx": "ACTION_VIEW_CONTACT-803-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I wish to choose a new sound for my alarm; can you display the ringtone picker for me? -> No problem! Opening the ringtone selection tool now.", "turn 2: Extract the contact number from the URI contact://numbers/3210. -> Extracting the contact number from contact://numbers/3210."], "query": "Search that URI.", "rewrited_query": "Search contact://numbers/3210 URI.", "answer": {"plan": "search_location", "arguments": {"query": "contact://numbers/3210"}}, "unique_idx": "ACTION_GET_RINGTONE-315-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please get the detailed contact information for content://contacts/people/1020. -> Now presenting the contact information for content://contacts/people/1020.", "turn 2: Retrieve the electronic mail info from contact://email/seth@domain.com. -> Retrieving email info from contact://email/seth@domain.com."], "query": "Show me where that is.", "rewrited_query": "Show me where contact://email/seth@domain.com is.", "answer": {"plan": "search_location", "arguments": {"query": "contact://email/seth@domain.com"}}, "unique_idx": "ACTION_VIEW_CONTACT-802-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Alter alarm 27 so that it rings at 17:50 with a custom ringtone 'ringtone://rock' and bypass the clock UI. -> I've updated alarm 27 to 5:50 PM with the 'ringtone://rock' ringtone, skipping the UI confirmation.", "turn 2: Please fetch the SMS details available at contact://sms/123456. -> Fetching SMS details from contact://sms/123456."], "query": "Find it on the map.", "rewrited_query": "Find contact://sms/123456 on the map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://sms/123456"}}, "unique_idx": "ACTION_EDIT_ALARM-1717-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you search for the Melbourne Cricket Ground? -> Sure, let me look up the Melbourne Cricket Ground for you.", "turn 2: Could you please retrieve the information detailed in contact://details/quincy? -> Retrieving information from contact://details/quincy."], "query": "I want to navigate to that address.", "rewrited_query": "I want to navigate to the address detailed in contact://details/quincy.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://details/quincy"}}, "unique_idx": "search_location-1203-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I wish to choose a new sound for my alarm; can you display the ringtone picker for me? -> No problem! Opening the ringtone selection tool now.", "turn 2: Extract the contact number from the URI contact://numbers/3210. -> Extracting the contact number from contact://numbers/3210."], "query": "Navigate me to that location.", "rewrited_query": "Navigate me to the location from the URI contact://numbers/3210.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://numbers/3210"}}, "unique_idx": "ACTION_GET_RINGTONE-315-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please get the detailed contact information for content://contacts/people/1020. -> Now presenting the contact information for content://contacts/people/1020.", "turn 2: Retrieve the electronic mail info from contact://email/seth@domain.com. -> Retrieving email info from contact://email/seth@domain.com."], "query": "Let's navigate to that place.", "rewrited_query": "Let's navigate to the place in the email info from contact://email/seth@domain.com.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://email/seth@domain.com"}}, "unique_idx": "ACTION_VIEW_CONTACT-802-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Retrieve the postal address using contact://alice_address. -> Okay, retrieving the postal address for contact://alice_address.", "turn 2: Get the social media account from contact://social/twitter/@tech_guru. -> Accessing the social media account from contact://social/twitter/@tech_guru."], "query": "Navigate there.", "rewrited_query": "Navigate to the social media account from contact://social/twitter/@tech_guru.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://social/twitter/@tech_guru"}}, "unique_idx": "get_contact_info-1048-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to see the recorded lecture video at content://lectures/physics.mp4; it's in MP4 format. -> Playing the video from content://lectures/physics.mp4.", "turn 2: Retrieve the contact details using URI contact://contact/phone/+1987654321. -> Acquiring the contact details from contact://contact/phone/+1987654321."], "query": "Can you navigate to that?", "rewrited_query": "Can you navigate to the contact details from contact://contact/phone/+1987654321?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://contact/phone/+1987654321"}}, "unique_idx": "ACTION_OPEN_CONTENT-263-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Adjust alarm number 26 to go off at 1:30 AM, label it 'Backup', and turn off vibration. -> OK, alarm number 26 is now set for 1:30 AM with the label 'Backup', and vibration is off.", "turn 2: Kindly extract the info pointed by contact://info/employee. -> Extracting the requested information from contact://info/employee."], "query": "Navigate to that place.", "rewrited_query": "Navigate to the place pointed by contact://info/employee.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://info/employee"}}, "unique_idx": "ACTION_EDIT_ALARM-1716-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you fire up Skype? I have an important call coming in. -> Skype is now starting.", "turn 2: Fetch data from contact URI contact://data/extension_101. -> Fetching the data from contact://data/extension_101."], "query": "Navigate to that contact URI, please.", "rewrited_query": "Navigate to contact URI contact://data/extension_101, please.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://data/extension_101"}}, "unique_idx": "launch_application-1535-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Record my video and assign the save path as content://media/recordedvideo.mp4. -> Affirmative. The video will be saved at content://media/recordedvideo.mp4.", "turn 2: Show me the work mobile number at contact://work/mobile/112233. -> Displaying the work mobile number at contact://work/mobile/112233."], "query": "Navigate to there.", "rewrited_query": "Navigate to the work mobile number at contact://work/mobile/112233.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://work/mobile/112233"}}, "unique_idx": "ACTION_VIDEO_CAPTURE-752-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Open WhatsApp immediately; I need to message my family. -> WhatsApp is opening right away.", "turn 2: Could you provide contact details from URI contact://email/support@helpdesk.com? -> Providing the contact details from contact://email/support@helpdesk.com."], "query": "Navigate to it.", "rewrited_query": "Navigate to the contact details from URI contact://email/support@helpdesk.com.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://email/support@helpdesk.com"}}, "unique_idx": "launch_application-1534-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Kindly update the email for the contact located at content://contacts/people/johnny to johnny@mail.org. -> Alright, I've updated Johnny's email to johnny@mail.org. The updated contact can be found at content://contacts/people/johnny.", "turn 2: Obtain the fax contact via contact://fax/007. -> Obtaining fax contact information via contact://fax/007."], "query": "Navigate to there please.", "rewrited_query": "Navigate to the fax contact information from contact://fax/007 please.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://fax/007"}}, "unique_idx": "ACTION_EDIT_CONTACT-101-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Show my email outbox to review the messages that have already been sent. -> Reviewing your sent messages: Sent email to school@education.com with subject 'Enrollment Details', and to club@community.com with subject 'Meeting Invitation'.", "turn 2: Retrieve additional info from contact://info/emergency. -> Retrieving additional information from contact://info/emergency."], "query": "Please navigate to that.", "rewrited_query": "Please navigate to the additional information from contact://info/emergency.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://info/emergency"}}, "unique_idx": "ACTION_VIEW_SENT_EMAILS-2076-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Text Professor Lee at +821012345678 to inform him 'The seminar is canceled today'. -> Notifying Professor Lee at +821012345678: 'The seminar is canceled today'.", "turn 2: Please check the contact record at contact://record/phone/+441234567890. -> Checking the contact record at contact://record/phone/+441234567890."], "query": "Navigate to that location.", "rewrited_query": "Navigate to the contact record at contact://record/phone/+441234567890.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://record/phone/+441234567890"}}, "unique_idx": "send_message-1320-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Email oliver@research.org an urgent notice: 'Data collection halted due to sensor failure'. -> Sending urgent notice to oliver@research.org: 'Data collection halted due to sensor failure'.", "turn 2: I require the phone info from contact://phone/office/321. -> Fetching phone info from contact://phone/office/321."], "query": "Text that number 'Meeting rescheduled for tomorrow'.", "rewrited_query": "Text the phone number from contact://phone/office/321 'Meeting rescheduled for tomorrow'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://phone/office/321", "message": "Meeting rescheduled for tomorrow"}}, "unique_idx": "send_email-1257-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Edit the contact for my friend Owen using URI content://contacts/people/owen to update his phone to 888-999-0000 and his company to 'Owen LLC'. -> Ok, I'm updating Owen's contact info. His phone is now 888-999-0000 and his company is 'Owen LLC'. The updated contact is at content://contacts/people/owen.", "turn 2: Extract details from content URI contact://contact/line/@alice. -> Retrieving Alice's LINE contact details now."], "query": "Send her a text message saying 'Are you free for lunch?'", "rewrited_query": "Send Alice's LINE contact a text message saying 'Are you free for lunch?'", "answer": {"plan": "send_message", "arguments": {"to": "Alice's LINE contact", "message": "Are you free for lunch?"}}, "unique_idx": "ACTION_EDIT_CONTACT-100-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Snap a photo using my camera and automatically store it—no specific file path required. -> Okay, launching the camera. The image will be automatically saved to the default location.", "turn 2: Please pull the email associated with URI contact://email/info@example.org. -> Acquiring email information from contact://email/info@example.org."], "query": "Send it a reminder to renew the subscription.", "rewrited_query": "Send contact://email/info@example.org a reminder to renew the subscription.", "answer": {"plan": "send_message", "arguments": {"to": "contact://email/info@example.org", "message": "a reminder to renew the subscription."}}, "unique_idx": "ACTION_IMAGE_CAPTURE-372-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you add a new contact called Ella? Her phone number is 555-000-1111 and she resides at '99 Summer Road'. -> Sure, I'm adding Ella with phone number 555-000-1111 and address '99 Summer Road' to your contacts.", "turn 2: Fetch the contact data from contact://mobile/9988776655. -> Getting contact details from contact://mobile/9988776655."], "query": "Send that person 'Running late, be there in 10'.", "rewrited_query": "Send the contact data from contact://mobile/9988776655 'Running late, be there in 10'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://mobile/9988776655", "message": "Running late, be there in 10."}}, "unique_idx": "ACTION_INSERT_CONTACT-423-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Change my call tone to content://media/ringtone03, attention please. -> Understood. I've changed your ringtone to content://media/ringtone03.", "turn 2: Could I have the phone number stored at contact://tel/0011223344? -> Checking for the phone number at contact://tel/0011223344."], "query": "Send that number 'Please call me back when you get a chance'.", "rewrited_query": "Send the phone number stored at contact://tel/0011223344 'Please call me back when you get a chance'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://tel/0011223344", "message": "Please call me back when you get a chance."}}, "unique_idx": "ACTION_SET_RINGTONE-1664-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Activate the camera's video recording mode, please. -> Alright, opening the video camera now.", "turn 2: Show me the LinkedIn info at contact://social/linkedin/john-doe. -> Displaying LinkedIn profile details for John Doe."], "query": "Send him a message saying 'Let's connect!'", "rewrited_query": "Send John Doe's LinkedIn info a message saying 'Let's connect!'", "answer": {"plan": "send_message", "arguments": {"to": "John Doe's LinkedIn info", "message": "Let's connect!"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-905-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need to edit the file at content://workspace/edits/252. Begin with 'Operational edits in progress'. -> Got it. Opening content://workspace/edits/252 for editing, starting with 'Operational edits in progress'.", "turn 2: Retrieve the business fax details using URI contact://biz/fax/444. -> Fetching business fax details from contact://biz/fax/444."], "query": "Send them 'Confirming receipt of fax, all clear'.", "rewrited_query": "Send the business fax details from contact://biz/fax/444 'Confirming receipt of fax, all clear'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://biz/fax/444", "message": "Confirming receipt of fax, all clear."}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1595-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Search the internet for comprehensive guides on digital photography techniques. -> Performing a web search for 'comprehensive guides on digital photography'. Results will cover topics from basic composition to advanced editing.", "turn 2: Please get the data from contact://contact/email/support@samsung.com. -> Accessing data for support@samsung.com."], "query": "Send the support team 'Ticket updated - issue resolved'.", "rewrited_query": "Send the support@samsung.com 'Ticket updated - issue resolved'.", "answer": {"plan": "send_message", "arguments": {"to": "support@samsung.com", "message": "Ticket updated - issue resolved."}}, "unique_idx": "web_search-1373-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need a search for the best hiking trails in national parks. -> Alright, let me find the 'best hiking trails in national parks' for you. Expect to see trails with varying difficulty and scenic views.", "turn 2: I need the information linked with contact://chat/telegram/@user123. -> Getting Telegram info for @user123."], "query": "Send that person 'See you tomorrow!'", "rewrited_query": "Send @user123 'See you tomorrow!'", "answer": {"plan": "send_message", "arguments": {"to": "@user123", "message": "See you tomorrow!"}}, "unique_idx": "web_search-1372-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Email oliver@research.org an urgent notice: 'Data collection halted due to sensor failure'. -> Sending urgent notice to oliver@research.org: 'Data collection halted due to sensor failure'.", "turn 2: I require the phone info from contact://phone/office/321. -> Fetching phone info from contact://phone/office/321."], "query": "Can you find it on a map?", "rewrited_query": "Can you find contact://phone/office/321 on a map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://phone/office/321"}}, "unique_idx": "send_email-1257-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Bring up my list of text messages I have sent out. -> Displaying the sent text messages: Colleague - 'Thanks for the update!'; Client - 'I appreciate it.'", "turn 2: Could you get the social profile linked at contact://social/instagram/@sarah_insta? -> Accessing the Instagram profile from the provided URI."], "query": "Where's that located?", "rewrited_query": "Where's contact://social/instagram/@sarah_insta located?", "answer": {"plan": "search_location", "arguments": {"query": "contact://social/instagram/@sarah_insta"}}, "unique_idx": "ACTION_VIEW_SENT_MESSAGES-2150-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Edit the contact for my friend Owen using URI content://contacts/people/owen to update his phone to 888-999-0000 and his company to 'Owen LLC'. -> Ok, I'm updating Owen's contact info. His phone is now 888-999-0000 and his company is 'Owen LLC'. The updated contact is at content://contacts/people/owen.", "turn 2: Extract details from content URI contact://contact/line/@alice. -> Retrieving Alice's LINE contact details now."], "query": "Can you show that address on the map?", "rewrited_query": "Can you show the address from contact://contact/line/@alice on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://contact/line/@alice"}}, "unique_idx": "ACTION_EDIT_CONTACT-100-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Snap a photo using my camera and automatically store it—no specific file path required. -> Okay, launching the camera. The image will be automatically saved to the default location.", "turn 2: Please pull the email associated with URI contact://email/info@example.org. -> Acquiring email information from contact://email/info@example.org."], "query": "What's the address linked to that email?", "rewrited_query": "What's the address linked to contact://email/info@example.org email?", "answer": {"plan": "search_location", "arguments": {"query": "contact://email/info@example.org"}}, "unique_idx": "ACTION_IMAGE_CAPTURE-372-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you add a new contact called Ella? Her phone number is 555-000-1111 and she resides at '99 Summer Road'. -> Sure, I'm adding Ella with phone number 555-000-1111 and address '99 Summer Road' to your contacts.", "turn 2: Fetch the contact data from contact://mobile/9988776655. -> Getting contact details from contact://mobile/9988776655."], "query": "I need to see that on a map.", "rewrited_query": "I need to see contact://mobile/9988776655 on a map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://mobile/9988776655"}}, "unique_idx": "ACTION_INSERT_CONTACT-423-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Change my call tone to content://media/ringtone03, attention please. -> Understood. I've changed your ringtone to content://media/ringtone03.", "turn 2: Could I have the phone number stored at contact://tel/0011223344? -> Checking for the phone number at contact://tel/0011223344."], "query": "Please find it.", "rewrited_query": "Please find contact://tel/0011223344.", "answer": {"plan": "search_location", "arguments": {"query": "contact://tel/0011223344"}}, "unique_idx": "ACTION_SET_RINGTONE-1664-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Activate the camera's video recording mode, please. -> Alright, opening the video camera now.", "turn 2: Show me the LinkedIn info at contact://social/linkedin/john-doe. -> Displaying LinkedIn profile details for John Doe."], "query": "Can you locate that?", "rewrited_query": "Can you locate contact://social/linkedin/john-doe?", "answer": {"plan": "search_location", "arguments": {"query": "contact://social/linkedin/john-doe"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-905-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I need to edit the file at content://workspace/edits/252. Begin with 'Operational edits in progress'. -> Got it. Opening content://workspace/edits/252 for editing, starting with 'Operational edits in progress'.", "turn 2: Retrieve the business fax details using URI contact://biz/fax/444. -> Fetching business fax details from contact://biz/fax/444."], "query": "Can you show me the address?", "rewrited_query": "Can you show me the address of contact://biz/fax/444?", "answer": {"plan": "search_location", "arguments": {"query": "contact://biz/fax/444"}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1595-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Search the internet for comprehensive guides on digital photography techniques. -> Performing a web search for 'comprehensive guides on digital photography'. Results will cover topics from basic composition to advanced editing.", "turn 2: Please get the data from contact://contact/email/support@samsung.com. -> Accessing data for support@samsung.com."], "query": "Could you search for it?", "rewrited_query": "Could you search for contact://contact/email/support@samsung.com?", "answer": {"plan": "search_location", "arguments": {"query": "contact://contact/email/support@samsung.com"}}, "unique_idx": "web_search-1373-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I need a search for the best hiking trails in national parks. -> Alright, let me find the 'best hiking trails in national parks' for you. Expect to see trails with varying difficulty and scenic views.", "turn 2: I need the information linked with contact://chat/telegram/@user123. -> Getting Telegram info for @user123."], "query": "Show it to me on the map.", "rewrited_query": "Show contact://chat/telegram/@user123 to me on the map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://chat/telegram/@user123"}}, "unique_idx": "web_search-1372-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Edit the contact for my friend Owen using URI content://contacts/people/owen to update his phone to 888-999-0000 and his company to 'Owen LLC'. -> Ok, I'm updating Owen's contact info. His phone is now 888-999-0000 and his company is 'Owen LLC'. The updated contact is at content://contacts/people/owen.", "turn 2: Extract details from content URI contact://contact/line/@alice. -> Retrieving Alice's LINE contact details now."], "query": "Can you dial that?", "rewrited_query": "Can you dial contact://contact/line/@alice?", "answer": {"plan": "dial", "arguments": {"phone_number": "contact://contact/line/@alice"}}, "unique_idx": "ACTION_EDIT_CONTACT-100-get_contact_info_from_uri-1_NR-dial-1"}
{"conversation_history": ["turn 1: Email oliver@research.org an urgent notice: 'Data collection halted due to sensor failure'. -> Sending urgent notice to oliver@research.org: 'Data collection halted due to sensor failure'.", "turn 2: I require the phone info from contact://phone/office/321. -> Fetching phone info from contact://phone/office/321."], "query": "Navigate to that location.", "rewrited_query": "Navigate to the location from the phone info fetched from contact://phone/office/321.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://phone/office/321"}}, "unique_idx": "send_email-1257-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Bring up my list of text messages I have sent out. -> Displaying the sent text messages: Colleague - 'Thanks for the update!'; Client - 'I appreciate it.'", "turn 2: Could you get the social profile linked at contact://social/instagram/@sarah_insta? -> Accessing the Instagram profile from the provided URI."], "query": "Navigate there.", "rewrited_query": "Navigate to the location from the Instagram profile at contact://social/instagram/@sarah_insta.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://social/instagram/@sarah_insta"}}, "unique_idx": "ACTION_VIEW_SENT_MESSAGES-2150-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Edit the contact for my friend Owen using URI content://contacts/people/owen to update his phone to 888-999-0000 and his company to 'Owen LLC'. -> Ok, I'm updating Owen's contact info. His phone is now 888-999-0000 and his company is 'Owen LLC'. The updated contact is at content://contacts/people/owen.", "turn 2: Extract details from content URI contact://contact/line/@alice. -> Retrieving Alice's LINE contact details now."], "query": "Navigate to that address.", "rewrited_query": "Navigate to the address extracted from Alice's LINE contact details at contact://contact/line/@alice.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://contact/line/@alice"}}, "unique_idx": "ACTION_EDIT_CONTACT-100-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Snap a photo using my camera and automatically store it—no specific file path required. -> Okay, launching the camera. The image will be automatically saved to the default location.", "turn 2: Please pull the email associated with URI contact://email/info@example.org. -> Acquiring email information from contact://email/info@example.org."], "query": "Could you start navigation to that location?", "rewrited_query": "Could you start navigation to the location associated with the email information from contact://email/info@example.org?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://email/info@example.org"}}, "unique_idx": "ACTION_IMAGE_CAPTURE-372-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you add a new contact called Ella? Her phone number is 555-000-1111 and she resides at '99 Summer Road'. -> Sure, I'm adding Ella with phone number 555-000-1111 and address '99 Summer Road' to your contacts.", "turn 2: Fetch the contact data from contact://mobile/9988776655. -> Getting contact details from contact://mobile/9988776655."], "query": "Navigate to that address.", "rewrited_query": "Navigate to the address from the contact details fetched from contact://mobile/9988776655.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://mobile/9988776655"}}, "unique_idx": "ACTION_INSERT_CONTACT-423-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Change my call tone to content://media/ringtone03, attention please. -> Understood. I've changed your ringtone to content://media/ringtone03.", "turn 2: Could I have the phone number stored at contact://tel/0011223344? -> Checking for the phone number at contact://tel/0011223344."], "query": "Start navigating there.", "rewrited_query": "Start navigating to the location from the phone number at contact://tel/0011223344.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://tel/0011223344"}}, "unique_idx": "ACTION_SET_RINGTONE-1664-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Activate the camera's video recording mode, please. -> Alright, opening the video camera now.", "turn 2: Show me the LinkedIn info at contact://social/linkedin/john-doe. -> Displaying LinkedIn profile details for John Doe."], "query": "Set a course to that place.", "rewrited_query": "Set a course to the location from the LinkedIn profile details for John Doe at contact://social/linkedin/john-doe.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://social/linkedin/john-doe"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-905-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to edit the file at content://workspace/edits/252. Begin with 'Operational edits in progress'. -> Got it. Opening content://workspace/edits/252 for editing, starting with 'Operational edits in progress'.", "turn 2: Retrieve the business fax details using URI contact://biz/fax/444. -> Fetching business fax details from contact://biz/fax/444."], "query": "Navigate to that address.", "rewrited_query": "Navigate to the address from the business fax details at contact://biz/fax/444.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://biz/fax/444"}}, "unique_idx": "ACTION_EDIT_DOCUMENT-1595-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Search the internet for comprehensive guides on digital photography techniques. -> Performing a web search for 'comprehensive guides on digital photography'. Results will cover topics from basic composition to advanced editing.", "turn 2: Please get the data from contact://contact/email/support@samsung.com. -> Accessing data for support@samsung.com."], "query": "Navigate to that location.", "rewrited_query": "Navigate to the location from the data at contact://contact/email/support@samsung.com.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://contact/email/support@samsung.com"}}, "unique_idx": "web_search-1373-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need a search for the best hiking trails in national parks. -> Alright, let me find the 'best hiking trails in national parks' for you. Expect to see trails with varying difficulty and scenic views.", "turn 2: I need the information linked with contact://chat/telegram/@user123. -> Getting Telegram info for @user123."], "query": "Set navigation to that place.", "rewrited_query": "Set navigation to the location from the Telegram info for @user123.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://social/telegram/@user123"}}, "unique_idx": "web_search-1372-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Display my list of recently visited webpages to help me verify my browsing patterns. -> No problem, fetching your browsing history now... Here it is:  'Online banking', 'Local library website', 'Tech news blog'.", "turn 2: Extract contact information from URI 'contact://details/mia'. -> Okay, I'm retrieving the contact details from contact://details/mia."], "query": "Send a text to that contact saying 'Hi, there!'", "rewrited_query": "Send a text to contact://details/mia contact saying 'Hi, there!'", "answer": {"plan": "send_message", "arguments": {"to": "contact://details/mia contact", "message": "Hi, there!"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2204-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Assign content://media/ringtone20 as my phone's ringtone as early as possible. -> Affirmative. The ringtone has been successfully set to content://media/ringtone20.", "turn 2: Can you get the personal phone number from contact://personal/phone/+1234567890? -> Sure, I'm fetching the personal phone number from contact://personal/phone/+1234567890."], "query": "Text them saying 'I will call you later'", "rewrited_query": "Text contact://personal/phone/+1234567890 saying 'I will call you later'", "answer": {"plan": "send_message", "arguments": {"to": "contact://personal/phone/+1234567890", "message": "I will call you later"}}, "unique_idx": "ACTION_SET_RINGTONE-1663-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I want to capture a high-quality image; store it in content://hd/images/highres.jpg if you can. -> Sure, I'm opening the camera to take a high-quality image. It will be saved as content://hd/images/highres.jpg.", "turn 2: Kindly retrieve details from this URI: contact://work/email/employee@company.com. -> Fetching the details from contact://work/email/employee@company.com."], "query": "Send a message to it saying 'Meeting at 3 PM'.", "rewrited_query": "Send a message to contact://work/email/employee@company.com saying 'Meeting at 3 PM'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://work/email/employee@company.com", "message": "Meeting at 3 PM."}}, "unique_idx": "ACTION_IMAGE_CAPTURE-371-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please open a video without specifying any file, just launch the default video player. -> Launching the default video player.", "turn 2: Fetch the WhatsApp contact info at contact://whatsapp/9876543210. -> Alright, getting the WhatsApp contact info from contact://whatsapp/9876543210."], "query": "Text that contact 'Are you available?'", "rewrited_query": "Text contact://whatsapp/9876543210 contact 'Are you available?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://whatsapp/9876543210", "message": "Are you available?"}}, "unique_idx": "play_video-1486-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Could you schedule a 16:50 alarm on Monday, Wednesday, and Friday for 'Medication' reminders? -> I've scheduled an alarm for 4:50 PM on Monday, Wednesday, and Friday, labeled 'Medication'.", "turn 2: I'd like to see the SMS number from contact://sms/5551234567. -> Accessing the SMS number from contact://sms/5551234567 for you."], "query": "Send a message to that number: 'Can you call me back?'", "rewrited_query": "Send a message to contact://sms/5551234567: 'Can you call me back?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://sms/5551234567", "message": "Can you call me back?"}}, "unique_idx": "ACTION_SET_ALARM-587-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please open eBay so I can check the latest auctions available. -> Okay, launching eBay for you now.", "turn 2: Show me the social media info at contact://social/facebook/@jane. -> Retrieving the social media information from contact://social/facebook/@jane."], "query": "Send a message to that contact saying 'Check this out!'", "rewrited_query": "Send a message to contact://social/facebook/@jane contact saying 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "contact://social/facebook/@jane", "message": "Check this out!"}}, "unique_idx": "launch_application-1533-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please use content://media/ringtone19 as my incoming call ringtone. -> Okay, I'll set your incoming call ringtone to content://media/ringtone19.", "turn 2: Please fetch contact details using URI contact://info/office. -> Okay, fetching the contact details using URI contact://info/office."], "query": "Send them 'I'm running late.'", "rewrited_query": "Send contact://info/office 'I'm running late.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://info/office", "message": "I'm running late."}}, "unique_idx": "ACTION_SET_RINGTONE-1662-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please navigate me to the Kremlin in Moscow. -> Navigating to the Kremlin in Moscow. Please follow the directions on your screen.", "turn 2: Can you extract email contact details found at contact://email/john.doe@example.com? -> Extracting email contact details from contact://email/john.doe@example.com."], "query": "Send a text to that address with the message 'Confirm our meeting tomorrow.'", "rewrited_query": "Send a text to contact://email/john.doe@example.com with the message 'Confirm our meeting tomorrow.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://email/john.doe@example.com", "message": "Confirm our meeting tomorrow."}}, "unique_idx": "ACTION_NAVIGATE_TO_LOCATION-1826-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Take me on a trip to the Alhambra in Granada. -> Okay, let's go to Alhambra in Granada. Starting navigation now.", "turn 2: Obtain phone data available at contact://phone/1122334455. -> Getting the phone data from contact://phone/1122334455."], "query": "Text them saying 'Are you free now?'", "rewrited_query": "Text contact://phone/1122334455 saying 'Are you free now?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://phone/1122334455", "message": "Are you free now?"}}, "unique_idx": "ACTION_NAVIGATE_TO_LOCATION-1825-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Help me locate the Golden Pavilion in Kyoto. -> Okay, searching for the Golden Pavilion in Kyoto.", "turn 2: Retrieve the fax number from the URI contact://fax/001. -> Attempting to retrieve the fax number from contact://fax/001."], "query": "Text that fax number 'Document sent'.", "rewrited_query": "Text contact://fax/001 'Document sent'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://fax/001", "message": "Document sent."}}, "unique_idx": "search_location-1202-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Display my list of recently visited webpages to help me verify my browsing patterns. -> No problem, fetching your browsing history now... Here it is:  'Online banking', 'Local library website', 'Tech news blog'.", "turn 2: Extract contact information from URI 'contact://details/mia'. -> Okay, I'm retrieving the contact details from contact://details/mia."], "query": "Can you show it to me on the map?", "rewrited_query": "Can you show contact://details/mia to me on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://details/mia"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2204-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Assign content://media/ringtone20 as my phone's ringtone as early as possible. -> Affirmative. The ringtone has been successfully set to content://media/ringtone20.", "turn 2: Can you get the personal phone number from contact://personal/phone/+1234567890? -> Sure, I'm fetching the personal phone number from contact://personal/phone/+1234567890."], "query": "Could you search for it?", "rewrited_query": "Could you search for contact://personal/phone/+1234567890?", "answer": {"plan": "search_location", "arguments": {"query": "contact://personal/phone/+1234567890"}}, "unique_idx": "ACTION_SET_RINGTONE-1663-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I want to capture a high-quality image; store it in content://hd/images/highres.jpg if you can. -> Sure, I'm opening the camera to take a high-quality image. It will be saved as content://hd/images/highres.jpg.", "turn 2: Kindly retrieve details from this URI: contact://work/email/employee@company.com. -> Fetching the details from contact://work/email/employee@company.com."], "query": "Search it on map, please.", "rewrited_query": "Search contact://work/email/employee@company.com on map, please.", "answer": {"plan": "search_location", "arguments": {"query": "contact://work/email/employee@company.com"}}, "unique_idx": "ACTION_IMAGE_CAPTURE-371-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please open a video without specifying any file, just launch the default video player. -> Launching the default video player.", "turn 2: Fetch the WhatsApp contact info at contact://whatsapp/9876543210. -> Alright, getting the WhatsApp contact info from contact://whatsapp/9876543210."], "query": "I want to search that.", "rewrited_query": "I want to search contact://whatsapp/9876543210.", "answer": {"plan": "search_location", "arguments": {"query": "contact://whatsapp/9876543210"}}, "unique_idx": "play_video-1486-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you schedule a 16:50 alarm on Monday, Wednesday, and Friday for 'Medication' reminders? -> I've scheduled an alarm for 4:50 PM on Monday, Wednesday, and Friday, labeled 'Medication'.", "turn 2: I'd like to see the SMS number from contact://sms/5551234567. -> Accessing the SMS number from contact://sms/5551234567 for you."], "query": "Can you search for it?", "rewrited_query": "Can you search for contact://sms/5551234567?", "answer": {"plan": "search_location", "arguments": {"query": "contact://sms/5551234567"}}, "unique_idx": "ACTION_SET_ALARM-587-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please open eBay so I can check the latest auctions available. -> Okay, launching eBay for you now.", "turn 2: Show me the social media info at contact://social/facebook/@jane. -> Retrieving the social media information from contact://social/facebook/@jane."], "query": "Can you find that on a map?", "rewrited_query": "Can you find contact://social/facebook/@jane on a map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://social/facebook/@jane"}}, "unique_idx": "launch_application-1533-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please use content://media/ringtone19 as my incoming call ringtone. -> Okay, I'll set your incoming call ringtone to content://media/ringtone19.", "turn 2: Please fetch contact details using URI contact://info/office. -> Okay, fetching the contact details using URI contact://info/office."], "query": "Show it in maps.", "rewrited_query": "Show contact://info/office in maps.", "answer": {"plan": "search_location", "arguments": {"query": "contact://info/office"}}, "unique_idx": "ACTION_SET_RINGTONE-1662-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please navigate me to the Kremlin in Moscow. -> Navigating to the Kremlin in Moscow. Please follow the directions on your screen.", "turn 2: Can you extract email contact details found at contact://email/john.doe@example.com? -> Extracting email contact details from contact://email/john.doe@example.com."], "query": "Can you search that?", "rewrited_query": "Can you search contact://email/john.doe@example.com?", "answer": {"plan": "search_location", "arguments": {"query": "contact://email/john.doe@example.com"}}, "unique_idx": "ACTION_NAVIGATE_TO_LOCATION-1826-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Take me on a trip to the Alhambra in Granada. -> Okay, let's go to Alhambra in Granada. Starting navigation now.", "turn 2: Obtain phone data available at contact://phone/1122334455. -> Getting the phone data from contact://phone/1122334455."], "query": "Please search it.", "rewrited_query": "Please search contact://phone/1122334455.", "answer": {"plan": "search_location", "arguments": {"query": "contact://phone/1122334455"}}, "unique_idx": "ACTION_NAVIGATE_TO_LOCATION-1825-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Help me locate the Golden Pavilion in Kyoto. -> Okay, searching for the Golden Pavilion in Kyoto.", "turn 2: Retrieve the fax number from the URI contact://fax/001. -> Attempting to retrieve the fax number from contact://fax/001."], "query": "Show it on a map.", "rewrited_query": "Show contact://fax/001 on a map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://fax/001"}}, "unique_idx": "search_location-1202-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Assign content://media/ringtone20 as my phone's ringtone as early as possible. -> Affirmative. The ringtone has been successfully set to content://media/ringtone20.", "turn 2: Can you get the personal phone number from contact://personal/phone/+1234567890? -> Sure, I'm fetching the personal phone number from contact://personal/phone/+1234567890."], "query": "Please call that number for me.", "rewrited_query": "Please call the personal phone number from contact://personal/phone/+1234567890 for me.", "answer": {"plan": "dial", "arguments": {"phone_number": "+1234567890"}}, "unique_idx": "ACTION_SET_RINGTONE-1663-get_contact_info_from_uri-1_NR-dial-1"}
{"conversation_history": ["turn 1: Display my list of recently visited webpages to help me verify my browsing patterns. -> No problem, fetching your browsing history now... Here it is:  'Online banking', 'Local library website', 'Tech news blog'.", "turn 2: Extract contact information from URI 'contact://details/mia'. -> Okay, I'm retrieving the contact details from contact://details/mia."], "query": "Navigate me there.", "rewrited_query": "Navigate me to the contact details from URI 'contact://details/mia'.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://details/mia"}}, "unique_idx": "ACTION_VIEW_WEB_HISTORY-2204-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Assign content://media/ringtone20 as my phone's ringtone as early as possible. -> Affirmative. The ringtone has been successfully set to content://media/ringtone20.", "turn 2: Can you get the personal phone number from contact://personal/phone/+1234567890? -> Sure, I'm fetching the personal phone number from contact://personal/phone/+1234567890."], "query": "Navigate to that contact's location.", "rewrited_query": "Navigate to the location of the contact from contact://personal/phone/+1234567890.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://personal/phone/+1234567890"}}, "unique_idx": "ACTION_SET_RINGTONE-1663-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I want to capture a high-quality image; store it in content://hd/images/highres.jpg if you can. -> Sure, I'm opening the camera to take a high-quality image. It will be saved as content://hd/images/highres.jpg.", "turn 2: Kindly retrieve details from this URI: contact://work/email/employee@company.com. -> Fetching the details from contact://work/email/employee@company.com."], "query": "Take me there.", "rewrited_query": "Take me to the location of contact details from URI: contact://work/email/employee@company.com.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://work/email/employee@company.com"}}, "unique_idx": "ACTION_IMAGE_CAPTURE-371-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Can you modify alarm id 25 to ring at 10:15 with the label 'Team Standup'? -> Done. Alarm 25 has been changed to 10:15 AM with the label 'Team Standup'.", "turn 2: Help me pull contact information from: contact://misc/anyinfo. I'm curious! -> Alright, retrieving contact information from contact://misc/anyinfo."], "query": "Send a text to that contact saying 'Hello, this is about the recent inquiry.'", "rewrited_query": "Send a text to contact://misc/anyinfo saying 'Hello, this is about the recent inquiry.'", "answer": {"plan": "send_message", "arguments": {"to": "contact://misc/anyinfo", "message": "Hello, this is about the recent inquiry."}}, "unique_idx": "ACTION_EDIT_ALARM-1715-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I would like to open several video files; please enable multiple selections. -> Got it. Select the video files you'd like to open. Multiple selections are enabled.", "turn 2: Extract the phone data from the set content URI: contact://phone/1122334455. -> OK, extracting the phone data from contact://phone/1122334455."], "query": "Send a message to that number saying 'Can we talk?'", "rewrited_query": "Send a message to contact://phone/1122334455 saying 'Can we talk?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://phone/1122334455", "message": "Can we talk?"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-157-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: ¿Podrías llamar al 555-0031, por favor? -> En seguida. Llamando al 555-0031.", "turn 2: I want to see the email info from URI contact://contact/email/support@samsung.com. Can you do that? -> Got it. Fetching the email information from contact://contact/email/support@samsung.com."], "query": "Text that email address 'Please check the document attached'.", "rewrited_query": "Text contact://contact/email/support@samsung.com 'Please check the document attached'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://contact/email/support@samsung.com", "message": "Please check the document attached."}}, "unique_idx": "dial-988-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please send a quick SMS to center reception +11234567890 saying 'Visitor has arrived' immediately. -> Texted 'Visitor has arrived' to +11234567890.", "turn 2: Using the given URI contact://office/extension-155, retrieve the contact extension number. -> Fetching the contact extension number from contact://office/extension-155."], "query": "Send a message to that extension with the content 'Need assistance at the front desk'.", "rewrited_query": "Send a message to contact://office/extension-155 with the content 'Need assistance at the front desk'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://office/extension-155", "message": "Need assistance at the front desk."}}, "unique_idx": "send_message-1319-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Can you provide the full info from contact://zach? -> Alright, here's Zach's full contact information: Name: Zach Taylor, Phone: 777-888-9999, Email: zach.t@random.org, Address: 456 Main St, Somecity, TX 54321.", "turn 2: Please get the info linked to this URI: 'contact://info/phone_number'. -> OK, looking up the information from contact://info/phone_number."], "query": "Send a text to it that says 'Hello, are you available for a call?'", "rewrited_query": "Send a text to contact://info/phone_number that says 'Hello, are you available for a call?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://info/phone_number", "message": "Hello, are you available for a call?"}}, "unique_idx": "get_contact_info-1047-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I need to change alarm 24 so that it rings at 13:25 with the ringtone 'ringtone://pop'. -> OK, alarm 24 is now set to 1:25 PM with the ringtone set to 'ringtone://pop'.", "turn 2: Retrieve the contact information from the resource at 'contact://linkedin/in-john'. -> Retrieving contact details from contact://linkedin/in-john."], "query": "Text that LinkedIn contact saying 'Let's connect'.", "rewrited_query": "Text contact://linkedin/in-john saying 'Let's connect'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://linkedin/in-john", "message": "Let's connect."}}, "unique_idx": "ACTION_EDIT_ALARM-1714-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Show me the contact data present at contact://email/jane.doe@example.com. -> Displaying the contact data from contact://email/jane.doe@example.com."], "query": "Send a quick message to that contact: 'Can you review the new draft?'", "rewrited_query": "Send a quick message to contact://email/jane.doe@example.com: 'Can you review the new draft?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://email/jane.doe@example.com", "message": "Can you review the new draft?"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Run video playback for me with the file D:\\Videos\\party.mp4 via MX Player. -> Starting playback of D:\\Videos\\party.mp4 with MX Player.", "turn 2: Could you fetch the details using content URI 'contact://details/alpha'? -> Fetching details from contact://details/alpha."], "query": "Text that contact with 'Please confirm the attached document'.", "rewrited_query": "Text contact://details/alpha with 'Please confirm the attached document'.", "answer": {"plan": "send_message", "arguments": {"to": "contact://details/alpha", "message": "Please confirm the attached document."}}, "unique_idx": "play_video-1485-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Put on 'Thunderstruck' on the Amazon Music app. -> Playing 'Thunderstruck' on Amazon Music.", "turn 2: Could you look up the contact number using this URI: contact://phone/9876543210? -> Looking up the contact number from contact://phone/9876543210."], "query": "Send them an SMS with the message 'Are you free to chat?'", "rewrited_query": "Send contact://phone/9876543210 an SMS with the message 'Are you free to chat?'", "answer": {"plan": "send_message", "arguments": {"to": "contact://phone/9876543210", "message": "Are you free to chat?"}}, "unique_idx": "play_music-1428-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Set my alarm to go off at 12:05 with the label 'Lunch Reminder'. -> Done! Alarm set for 12:05 PM with the label 'Lunch Reminder'.", "turn 2: Fetch the contact information from the following URI: 'contact://social/twitter/@user'. -> Fetching contact information from contact://social/twitter/@user."], "query": "Send a direct message to that Twitter user: 'I saw your post and wanted to connect!'", "rewrited_query": "Send a direct message to contact://social/twitter/@user: 'I saw your post and wanted to connect!'", "answer": {"plan": "send_message", "arguments": {"to": "contact://social/twitter/@user", "message": "I saw your post and wanted to connect!"}}, "unique_idx": "ACTION_SET_ALARM-586-get_contact_info_from_uri-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I would like to open several video files; please enable multiple selections. -> Got it. Select the video files you'd like to open. Multiple selections are enabled.", "turn 2: Extract the phone data from the set content URI: contact://phone/1122334455. -> OK, extracting the phone data from contact://phone/1122334455."], "query": "Email it to my manager.", "rewrited_query": "Email phone data from contact://phone/1122334455 to my manager.", "answer": {"plan": "send_email", "arguments": {"to": "contact://phone/1122334455", "body": "to my manager"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-157-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: ¿Podrías llamar al 555-0031, por favor? -> En seguida. Llamando al 555-0031.", "turn 2: I want to see the email info from URI contact://contact/email/support@samsung.com. Can you do that? -> Got it. Fetching the email information from contact://contact/email/support@samsung.com."], "query": "Send it to myself with the subject line 'Samsung Support'.", "rewrited_query": "Send email information from contact://contact/email/support@samsung.com to myself with the subject line 'Samsung Support'.", "answer": {"plan": "send_email", "arguments": {"to": "support@samsung.com", "subject": "Samsung Support"}}, "unique_idx": "dial-988-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Can you provide the full info from contact://zach? -> Alright, here's Zach's full contact information: Name: Zach Taylor, Phone: 777-888-9999, Email: zach.t@random.org, Address: 456 Main St, Somecity, TX 54321.", "turn 2: Please get the info linked to this URI: 'contact://info/phone_number'. -> OK, looking up the information from contact://info/phone_number."], "query": "Can you send it to bob@example.com?", "rewrited_query": "Can you send information from contact://info/phone_number to bob@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "bob@example.com"}}, "unique_idx": "get_contact_info-1047-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Show me the contact data present at contact://email/jane.doe@example.com. -> Displaying the contact data from contact://email/jane.doe@example.com."], "query": "Send it to Jane Doe.", "rewrited_query": "Send contact data from contact://email/jane.doe@example.com to Jane Doe.", "answer": {"plan": "send_email", "arguments": {"to": "jane.doe@example.com"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Run video playback for me with the file D:\\Videos\\party.mp4 via MX Player. -> Starting playback of D:\\Videos\\party.mp4 with MX Player.", "turn 2: Could you fetch the details using content URI 'contact://details/alpha'? -> Fetching details from contact://details/alpha."], "query": "Forward it to hr@company.com", "rewrited_query": "Forward details from contact://details/alpha to hr@company.com", "answer": {"plan": "send_email", "arguments": {"to": "hr@company.com"}}, "unique_idx": "play_video-1485-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Put on 'Thunderstruck' on the Amazon Music app. -> Playing 'Thunderstruck' on Amazon Music.", "turn 2: Could you look up the contact number using this URI: contact://phone/9876543210? -> Looking up the contact number from contact://phone/9876543210."], "query": "Send the contact number to support@company.com, please.", "rewrited_query": "Send the contact number from contact://phone/9876543210 to support@company.com, please.", "answer": {"plan": "send_email", "arguments": {"to": "support@company.com"}}, "unique_idx": "play_music-1428-get_contact_info_from_uri-1_NR-send_email-1"}
{"conversation_history": ["turn 1: Can you modify alarm id 25 to ring at 10:15 with the label 'Team Standup'? -> Done. Alarm 25 has been changed to 10:15 AM with the label 'Team Standup'.", "turn 2: Help me pull contact information from: contact://misc/anyinfo. I'm curious! -> Alright, retrieving contact information from contact://misc/anyinfo."], "query": "Can you find that on the map?", "rewrited_query": "Can you find contact://misc/anyinfo on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://misc/anyinfo"}}, "unique_idx": "ACTION_EDIT_ALARM-1715-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I would like to open several video files; please enable multiple selections. -> Got it. Select the video files you'd like to open. Multiple selections are enabled.", "turn 2: Extract the phone data from the set content URI: contact://phone/1122334455. -> OK, extracting the phone data from contact://phone/1122334455."], "query": "Find the location for that.", "rewrited_query": "Find the location for contact://phone/1122334455.", "answer": {"plan": "search_location", "arguments": {"query": "contact://phone/1122334455"}}, "unique_idx": "ACTION_OPEN_DOCUMENT-157-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: ¿Podrías llamar al 555-0031, por favor? -> En seguida. Llamando al 555-0031.", "turn 2: I want to see the email info from URI contact://contact/email/support@samsung.com. Can you do that? -> Got it. Fetching the email information from contact://contact/email/support@samsung.com."], "query": "Show that on a map.", "rewrited_query": "Show contact://contact/email/support@samsung.com on a map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://contact/email/support@samsung.com"}}, "unique_idx": "dial-988-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please send a quick SMS to center reception +11234567890 saying 'Visitor has arrived' immediately. -> Texted 'Visitor has arrived' to +11234567890.", "turn 2: Using the given URI contact://office/extension-155, retrieve the contact extension number. -> Fetching the contact extension number from contact://office/extension-155."], "query": "Can you show it to me on the map?", "rewrited_query": "Can you show contact://office/extension-155 to me on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://office/extension-155"}}, "unique_idx": "send_message-1319-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Can you provide the full info from contact://zach? -> Alright, here's Zach's full contact information: Name: Zach Taylor, Phone: 777-888-9999, Email: zach.t@random.org, Address: 456 Main St, Somecity, TX 54321.", "turn 2: Please get the info linked to this URI: 'contact://info/phone_number'. -> OK, looking up the information from contact://info/phone_number."], "query": "Search for it.", "rewrited_query": "Search for contact://info/phone_number.", "answer": {"plan": "search_location", "arguments": {"query": "contact://info/phone_number"}}, "unique_idx": "get_contact_info-1047-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: I need to change alarm 24 so that it rings at 13:25 with the ringtone 'ringtone://pop'. -> OK, alarm 24 is now set to 1:25 PM with the ringtone set to 'ringtone://pop'.", "turn 2: Retrieve the contact information from the resource at 'contact://linkedin/in-john'. -> Retrieving contact details from contact://linkedin/in-john."], "query": "I want to locate that.", "rewrited_query": "I want to locate contact://linkedin/in-john.", "answer": {"plan": "search_location", "arguments": {"query": "contact://linkedin/in-john"}}, "unique_idx": "ACTION_EDIT_ALARM-1714-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Show me the contact data present at contact://email/jane.doe@example.com. -> Displaying the contact data from contact://email/jane.doe@example.com."], "query": "Could you find it on the map?", "rewrited_query": "Could you find contact://email/jane.doe@example.com on the map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://email/jane.doe@example.com"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Run video playback for me with the file D:\\Videos\\party.mp4 via MX Player. -> Starting playback of D:\\Videos\\party.mp4 with MX Player.", "turn 2: Could you fetch the details using content URI 'contact://details/alpha'? -> Fetching details from contact://details/alpha."], "query": "Can you look it up on a map?", "rewrited_query": "Can you look contact://details/alpha up on a map?", "answer": {"plan": "search_location", "arguments": {"query": "contact://details/alpha"}}, "unique_idx": "play_video-1485-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Put on 'Thunderstruck' on the Amazon Music app. -> Playing 'Thunderstruck' on Amazon Music.", "turn 2: Could you look up the contact number using this URI: contact://phone/9876543210? -> Looking up the contact number from contact://phone/9876543210."], "query": "Find that on the map.", "rewrited_query": "Find contact://phone/9876543210 on the map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://phone/9876543210"}}, "unique_idx": "play_music-1428-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Set my alarm to go off at 12:05 with the label 'Lunch Reminder'. -> Done! Alarm set for 12:05 PM with the label 'Lunch Reminder'.", "turn 2: Fetch the contact information from the following URI: 'contact://social/twitter/@user'. -> Fetching contact information from contact://social/twitter/@user."], "query": "Search for it on map.", "rewrited_query": "Search for contact://social/twitter/@user on map.", "answer": {"plan": "search_location", "arguments": {"query": "contact://social/twitter/@user"}}, "unique_idx": "ACTION_SET_ALARM-586-get_contact_info_from_uri-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please send a quick SMS to center reception +11234567890 saying 'Visitor has arrived' immediately. -> Texted 'Visitor has arrived' to +11234567890.", "turn 2: Using the given URI contact://office/extension-155, retrieve the contact extension number. -> Fetching the contact extension number from contact://office/extension-155."], "query": "Can you navigate to that location?", "rewrited_query": "Can you navigate to the location from contact://office/extension-155?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://office/extension-155"}}, "unique_idx": "send_message-1319-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Can you provide the full info from contact://zach? -> Alright, here's Zach's full contact information: Name: Zach Taylor, Phone: 777-888-9999, Email: zach.t@random.org, Address: 456 Main St, Somecity, TX 54321.", "turn 2: Please get the info linked to this URI: 'contact://info/phone_number'. -> OK, looking up the information from contact://info/phone_number."], "query": "Take me there.", "rewrited_query": "Take me to the location from contact://info/phone_number.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://info/phone_number"}}, "unique_idx": "get_contact_info-1047-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to change alarm 24 so that it rings at 13:25 with the ringtone 'ringtone://pop'. -> OK, alarm 24 is now set to 1:25 PM with the ringtone set to 'ringtone://pop'.", "turn 2: Retrieve the contact information from the resource at 'contact://linkedin/in-john'. -> Retrieving contact details from contact://linkedin/in-john."], "query": "Please navigate to that place.", "rewrited_query": "Please navigate to the place from contact://linkedin/in-john.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://linkedin/in-john"}}, "unique_idx": "ACTION_EDIT_ALARM-1714-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Open the video recording feature; I need to document something. -> Initiating video camera for recording.", "turn 2: Show me the contact data present at contact://email/jane.doe@example.com. -> Displaying the contact data from contact://email/jane.doe@example.com."], "query": "Could you start navigation to that place?", "rewrited_query": "Could you start navigation to the place from contact://email/jane.doe@example.com?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://email/jane.doe@example.com"}}, "unique_idx": "INTENT_ACTION_VIDEO_CAMERA-904-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Run video playback for me with the file D:\\Videos\\party.mp4 via MX Player. -> Starting playback of D:\\Videos\\party.mp4 with MX Player.", "turn 2: Could you fetch the details using content URI 'contact://details/alpha'? -> Fetching details from contact://details/alpha."], "query": "Start navigating to that location, please.", "rewrited_query": "Start navigating to the location from contact://details/alpha, please.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://details/alpha"}}, "unique_idx": "play_video-1485-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Put on 'Thunderstruck' on the Amazon Music app. -> Playing 'Thunderstruck' on Amazon Music.", "turn 2: Could you look up the contact number using this URI: contact://phone/9876543210? -> Looking up the contact number from contact://phone/9876543210."], "query": "Can you navigate me to there?", "rewrited_query": "Can you navigate me to the location from contact://phone/9876543210?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://phone/9876543210"}}, "unique_idx": "play_music-1428-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Set my alarm to go off at 12:05 with the label 'Lunch Reminder'. -> Done! Alarm set for 12:05 PM with the label 'Lunch Reminder'.", "turn 2: Fetch the contact information from the following URI: 'contact://social/twitter/@user'. -> Fetching contact information from contact://social/twitter/@user."], "query": "Navigate to it.", "rewrited_query": "Navigate to contact://social/twitter/@user.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "contact://social/twitter/@user"}}, "unique_idx": "ACTION_SET_ALARM-586-get_contact_info_from_uri-1_NR-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Trigger an alarm for 6:35 with the label 'Morning jog'. -> I've set an alarm for 6:35 AM labeled 'Morning jog'.", "turn 2: Can you help me adjust some settings? I just need to access my general device settings. -> No problem! Opening general settings for you now."], "query": "Search for the nearest cafe.", "rewrited_query": "Search for the nearest cafe.", "answer": {"plan": "search_location", "arguments": {"query": "nearest cafe"}}, "unique_idx": "ACTION_SET_ALARM-583-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Bring up the 'Piano Relax' playlist, please. -> Now showing the 'Piano Relax' playlist: Peaceful Sonata, Serene Reflection, Calm Waters...", "turn 2: I got a new SD card; kindly open the settings for memory card management. -> Navigating to memory card settings."], "query": "Find the closest library.", "rewrited_query": "Find the closest library.", "answer": {"plan": "search_location", "arguments": {"query": "closest library"}}, "unique_idx": "ACTION_VIEW_PLAYLIST-2258-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Show recently used apps on my phone's interface. -> Showing recent apps on your interface.", "turn 2: I want to see my device's storage usage details; please open the internal storage settings. -> Sure, opening internal storage settings!"], "query": "Find coffee shops in this area.", "rewrited_query": "Find coffee shops in this area.", "answer": {"plan": "search_location", "arguments": {"query": "coffee shops"}}, "unique_idx": "ACTION_VIEW_RECENT_APPS-2315-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please update my phone to play content://media/ringtone12 when someone calls. -> I've changed your ringtone. Now, content://media/ringtone12 will play when you get a call.", "turn 2: I need to calibrate my GPS. Get me to the location settings immediately. -> Alright, opening location settings now."], "query": "Search for a gas station nearby.", "rewrited_query": "Search for a gas station nearby.", "answer": {"plan": "search_location", "arguments": {"query": "gas station"}}, "unique_idx": "ACTION_SET_RINGTONE-1657-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Set default ringtone as content://media/ringtone11 for all calls. -> Alright, I've set content://media/ringtone11 as your default ringtone.", "turn 2: For enhancing my phone security, show me the security settings panel. -> Right away! Opening security settings."], "query": "Look for restaurants around here.", "rewrited_query": "Look for restaurants around here.", "answer": {"plan": "search_location", "arguments": {"query": "restaurants"}}, "unique_idx": "ACTION_SET_RINGTONE-1656-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Give me an update on any timers I have that are still running. -> Still running: [9 minutes - Bread, 18 minutes - Meditation, 1 minute - Watering Plants]", "turn 2: Please display the brightness and contrast options by opening the display settings. -> Display settings are now open."], "query": "Find the nearest hospital.", "rewrited_query": "Find the nearest hospital.", "answer": {"plan": "search_location", "arguments": {"query": "nearest hospital"}}, "unique_idx": "ACTION_SHOW_TIMERS-1966-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please launch the ringtone selection tool; I need to change my alarm sound. -> Okay, launching the ringtone selection tool.", "turn 2: I want to change my typing preferences. Navigate to the input method settings screen. -> Okay, taking you to the input method settings."], "query": "Find the closest park.", "rewrited_query": "Find the closest park.", "answer": {"plan": "search_location", "arguments": {"query": "closest park"}}, "unique_idx": "ACTION_GET_RINGTONE-313-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Reconfigure alarm id 23 to ring at 7:45 AM, add the note 'Yoga', and set it to repeat every day of the week. -> Understood. Alarm 23 is now set to 7:45 AM with the label 'Yoga', repeating every day.", "turn 2: I wish to modify the date and time on my phone. Open date settings now! -> Date settings are now open."], "query": "Look for a museum in this area.", "rewrited_query": "Look for a museum in this area.", "answer": {"plan": "search_location", "arguments": {"query": "museum"}}, "unique_idx": "ACTION_EDIT_ALARM-1713-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Need to check what timers are still set and active; please list them. -> Your active timers include: [4 minutes - Vegetables, 22 minutes - Soup]", "turn 2: Show the Bluetooth panel because I'd like to set up my new device connection. -> Opening Bluetooth settings."], "query": "Look for a train station nearby.", "rewrited_query": "Look for a train station nearby.", "answer": {"plan": "search_location", "arguments": {"query": "train station"}}, "unique_idx": "ACTION_SHOW_TIMERS-1965-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Send an email to zara@fashion.com with the subject 'New Collection Preview' and note that the collection photos are attached. -> Email sent to zara@fashion.com. Subject: 'New Collection Preview'. Body: 'The collection photos are attached.'", "turn 2: I need to tweak the APN settings for data connection adjustments. -> Alright, opening APN settings."], "query": "Find a pharmacy in this location.", "rewrited_query": "Find a pharmacy in this location.", "answer": {"plan": "search_location", "arguments": {"query": "pharmacy"}}, "unique_idx": "send_email-1253-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Can you update the details for the contact at content://contacts/people/nina by setting her name as 'Nina Simone'? -> I will update Nina's contact to 'Nina Simone'. The updated contact URI is content://contacts/people/nina.", "turn 2: Access the date and time settings so I can adjust my clock. -> Opening date and time settings."], "query": "Find the nearest clock repair shop.", "rewrited_query": "Find the nearest clock repair shop.", "answer": {"plan": "search_location", "arguments": {"query": "clock repair shop"}}, "unique_idx": "ACTION_EDIT_CONTACT-99-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Bring up the file selection tool for text files so I can browse my manuscripts. -> Okay, launching the file picker to select a text file.", "turn 2: Help me configure Bluetooth connections by opening the appropriate settings. -> Navigating to Bluetooth settings now."], "query": "Search for the nearest Bluetooth speaker store.", "rewrited_query": "Search for the nearest Bluetooth speaker store.", "answer": {"plan": "search_location", "arguments": {"query": "Bluetooth speaker store"}}, "unique_idx": "ACTION_GET_CONTENT-205-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Display the list of timers that are in the middle of counting down. -> Currently counting down: [7 minutes - Cake, 30 minutes - Cleaning]", "turn 2: I want to update APN details. Could you direct me to the APN settings? -> Sure, opening APN settings."], "query": "Find the nearest mobile carrier store.", "rewrited_query": "Find the nearest mobile carrier store.", "answer": {"plan": "search_location", "arguments": {"query": "mobile carrier store"}}, "unique_idx": "ACTION_SHOW_TIMERS-1964-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you retrieve and show my sent messages? I'm interested in the recipient list and subject lines. -> Fetching your sent messages. Here they are: Sent to family@email.com about 'Summer Vacation', and to colleague@email.com regarding 'Project Collaboration'.", "turn 2: Open Wi-Fi settings now, please! -> Okay, here are the Wi-Fi settings."], "query": "Search for the nearest internet cafe.", "rewrited_query": "Search for the nearest internet cafe.", "answer": {"plan": "search_location", "arguments": {"query": "internet cafe"}}, "unique_idx": "ACTION_VIEW_SENT_EMAILS-2073-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Please open the text file located at content://notes/todo.txt; thanks. -> Opening the text file: content://notes/todo.txt.", "turn 2: I need to check on my airplane mode options. Kindly open the page for me. -> Right away. Opening airplane mode settings."], "query": "Find the nearest airport.", "rewrited_query": "Find the nearest airport.", "answer": {"plan": "search_location", "arguments": {"query": "airport"}}, "unique_idx": "ACTION_OPEN_CONTENT-260-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Display the recently sent SMS messages on my device. -> Recently sent SMS messages: Doctor - 'See you tomorrow.'; Bank - 'Confirmed.'", "turn 2: I'd like to see my general settings so I can tweak a few things. -> No problem, opening general settings."], "query": "Search for the nearest electronics store.", "rewrited_query": "Search for the nearest electronics store.", "answer": {"plan": "search_location", "arguments": {"query": "electronics store"}}, "unique_idx": "ACTION_VIEW_SENT_MESSAGES-2149-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Fetch and display my list of recently accessed apps. -> Fetching your recently used apps and displaying them now.", "turn 2: I’m having trouble with my email sync over wireless; open the wireless settings section. -> Opening wireless settings for you now."], "query": "Find the closest public library.", "rewrited_query": "Find the closest public library.", "answer": {"plan": "search_location", "arguments": {"query": "public library"}}, "unique_idx": "ACTION_VIEW_RECENT_APPS-2314-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Start up the default music player; I want some music now. -> Firing up your default music player.", "turn 2: Show me the memory card settings page as I have a new microSD card inserted. -> Displaying memory card settings."], "query": "Search for the nearest camera shop.", "rewrited_query": "Search for the nearest camera shop.", "answer": {"plan": "search_location", "arguments": {"query": "camera shop"}}, "unique_idx": "play_music-1426-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Set up a 'Gymnastics Practice' session labeled as evening practice. It takes place from 1704200000000 to 1704205400000. -> Alright, 'Gymnastics Practice' evening session is on your calendar, running from 1704200000000 to 1704205400000. Event URI: content://calender/event/3", "turn 2: I want to review the internal storage details; please open the corresponding settings screen. -> Okay, opening internal storage settings."], "query": "Find the nearest computer repair shop.", "rewrited_query": "Find the nearest computer repair shop.", "answer": {"plan": "search_location", "arguments": {"query": "computer repair shop"}}, "unique_idx": "ACTION_INSERT_EVENT-478-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Could you please launch Pinterest? I need some design inspiration. -> Launching Pinterest.", "turn 2: Can you take me to the location settings page? I need to update my GPS preferences. -> Sure, taking you to location settings."], "query": "Find the nearest gas station.", "rewrited_query": "Find the nearest gas station.", "answer": {"plan": "search_location", "arguments": {"query": "gas station"}}, "unique_idx": "launch_application-1531-open_settings-1_NR-search_location-1"}
{"conversation_history": ["turn 1: Modify the contact data for the person at URI content://contacts/people/sam by changing the name to 'Samuel Lee'. -> I've changed the contact's name to Samuel Lee. The URI for the updated contact is content://contacts/people/sam.", "turn 2: Where does Samuel Lee live? -> Okay, searching for Samuel Lee's address now."], "query": "Can you send it to my other phone?", "rewrited_query": "Can you send Samuel Lee's address to my other phone?", "answer": {"plan": "send_message", "arguments": {"to": "my other phone", "message": "Samuel Lee's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-59-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I want to open the edit interface for the contact at content://contacts/people/michael without any immediate changes. -> Okay, I'm opening the edit interface for the contact at content://contacts/people/michael. You can make your changes there.", "turn 2: Where does Michael work? -> Searching for Michael's workplace address..."], "query": "Text that to my assistant.", "rewrited_query": "Text Michael's workplace address to my assistant.", "answer": {"plan": "send_message", "arguments": {"to": "my assistant", "message": "Michael's workplace address"}}, "unique_idx": "ACTION_EDIT_CONTACT-61-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Please update my mentor's details; use the contact URI content://contacts/people/jane and change her company to TechSoft. -> Alright, I'm updating Jane's company to TechSoft. The updated contact URI is content://contacts/people/jane.", "turn 2: Show me where TechSoft is located. -> Let me find TechSoft for you."], "query": "Send the address to my son.", "rewrited_query": "Send the address of TechSoft to my son.", "answer": {"plan": "send_message", "arguments": {"to": "my son", "message": "the address of TechSoft"}}, "unique_idx": "ACTION_EDIT_CONTACT-62-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Please add a new contact for John Doe with phone number 123-456-7890. -> Okay, I'm creating a contact for John Doe with the phone number 123-456-7890.", "turn 2: Search location for John Doe -> Searching for the location of John Doe."], "query": "Text it to him.", "rewrited_query": "Text the location of John Doe to John Doe.", "answer": {"plan": "send_message", "arguments": {"to": "John Doe", "message": "the location of John Doe"}}, "unique_idx": "ACTION_INSERT_CONTACT-382-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I need to insert a contact for Jane Smith. Her mobile is 098-765-4321 and her email is jane@example.com. -> I'm adding Jane Smith to your contacts with the number 098-765-4321 and email jane@example.com.", "turn 2: Find the location of Jane Smith -> I'm on it. Searching for Jane Smith's location now."], "query": "Send it to her.", "rewrited_query": "Send the location of Jane Smith to Jane Smith.", "answer": {"plan": "send_message", "arguments": {"to": "Jane Smith", "message": "the location of Jane Smith"}}, "unique_idx": "ACTION_INSERT_CONTACT-383-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Could you create a new contact entry for Michael? His number is 555-555-5555 and he lives at 123 Main St. -> I am now creating a contact for Michael with the number 555-555-5555 and address 123 Main St.", "turn 2: Show 123 Main St. on the map. -> Displaying 123 Main St. on the map."], "query": "Can you text it to my friend?", "rewrited_query": "Can you text the location of 123 Main St. to my friend?", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "the location of 123 Main St."}}, "unique_idx": "ACTION_INSERT_CONTACT-384-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Add a record to my contacts: Name: Alice, Email: alice@wonderland.com, Address: 42 Fantasy Rd. -> Alright, adding Alice to your contacts with email alice@wonderland.com and address 42 Fantasy Rd.", "turn 2: Can you pull up 42 Fantasy Rd. in maps? -> Alright, let me pull up 42 Fantasy Rd. on the map for you."], "query": "Send it to my husband.", "rewrited_query": "Send the location of 42 Fantasy Rd. to my husband.", "answer": {"plan": "send_message", "arguments": {"to": "my husband", "message": "the location of 42 Fantasy Rd."}}, "unique_idx": "ACTION_INSERT_CONTACT-385-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Insert a contact with these details: Name: Bob K., Phone: 111-222-3333, Email: bob@examplemail.com. -> Okay, inserting a contact for Bob K. with phone 111-222-3333 and email bob@examplemail.com.", "turn 2: Find the location of Bob K. -> Searching for Bob K.'s location now."], "query": "Send that to my other number.", "rewrited_query": "Send the location of Bob K. to my other number.", "answer": {"plan": "send_message", "arguments": {"to": "my other number", "message": "the location of Bob K."}}, "unique_idx": "ACTION_INSERT_CONTACT-386-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I need to change the address for the contact at content://contacts/people/robert. Please update his address to '123 Elm Street'. -> I've updated Robert's address to '123 Elm Street'. The edited contact can be found at content://contacts/people/robert.", "turn 2: Can you locate 123 Elm Street address? -> Sure, one moment while I locate 123 Elm Street."], "query": "Email it to robert@example.com.", "rewrited_query": "Email 123 Elm Street to robert@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "robert@example.com", "body": "123 Elm Street"}}, "unique_idx": "ACTION_EDIT_CONTACT-58-search_location-1-send_email-1"}
{"conversation_history": ["turn 1: Please update my mentor's details; use the contact URI content://contacts/people/jane and change her company to TechSoft. -> Alright, I'm updating Jane's company to TechSoft. The updated contact URI is content://contacts/people/jane.", "turn 2: Show me where TechSoft is located. -> Let me find TechSoft for you."], "query": "Email it to jane@example.com", "rewrited_query": "Email the location of TechSoft to jane@example.com", "answer": {"plan": "send_email", "arguments": {"to": "jane@example.com", "body": "the location of TechSoft"}}, "unique_idx": "ACTION_EDIT_CONTACT-62-search_location-1-send_email-1"}
{"conversation_history": ["turn 1: Could you edit the details for my coworker at content://contacts/people/alice to update her email to alice@example.com and set her company to AcmeCorp? -> No problem! I'm updating Alice's contact information with the email alice@example.com and company AcmeCorp. The contact URI is now content://contacts/people/alice.", "turn 2: Show me where AcmeCorp is located. -> Alright, let me pull up the location for AcmeCorp."], "query": "Navigate there.", "rewrited_query": "Navigate to AcmeCorp.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "AcmeCorp"}}, "unique_idx": "ACTION_EDIT_CONTACT-57-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to change the address for the contact at content://contacts/people/robert. Please update his address to '123 Elm Street'. -> I've updated Robert's address to '123 Elm Street'. The edited contact can be found at content://contacts/people/robert.", "turn 2: Can you locate 123 Elm Street address? -> Sure, one moment while I locate 123 Elm Street."], "query": "Please get directions to that location.", "rewrited_query": "Please get directions to 123 Elm Street location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "123 Elm Street"}}, "unique_idx": "ACTION_EDIT_CONTACT-58-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Modify the contact data for the person at URI content://contacts/people/sam by changing the name to 'Samuel Lee'. -> I've changed the contact's name to Samuel Lee. The URI for the updated contact is content://contacts/people/sam.", "turn 2: Where does Samuel Lee live? -> Okay, searching for Samuel Lee's address now."], "query": "Can you navigate me there?", "rewrited_query": "Can you navigate me to Samuel Lee's address?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Samuel Lee's address"}}, "unique_idx": "ACTION_EDIT_CONTACT-59-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I want to open the edit interface for the contact at content://contacts/people/michael without any immediate changes. -> Okay, I'm opening the edit interface for the contact at content://contacts/people/michael. You can make your changes there.", "turn 2: Where does Michael work? -> Searching for Michael's workplace address..."], "query": "Okay, take me there.", "rewrited_query": "Okay, navigate to Michael's workplace.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Michael's workplace"}}, "unique_idx": "ACTION_EDIT_CONTACT-61-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please update my mentor's details; use the contact URI content://contacts/people/jane and change her company to TechSoft. -> Alright, I'm updating Jane's company to TechSoft. The updated contact URI is content://contacts/people/jane.", "turn 2: Show me where TechSoft is located. -> Let me find TechSoft for you."], "query": "Start navigation to it.", "rewrited_query": "Start navigation to TechSoft.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "TechSoft"}}, "unique_idx": "ACTION_EDIT_CONTACT-62-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please add a new contact for John Doe with phone number 123-456-7890. -> Okay, I'm creating a contact for John Doe with the phone number 123-456-7890.", "turn 2: Search location for John Doe -> Searching for the location of John Doe."], "query": "Navigate to there.", "rewrited_query": "Navigate to John Doe's location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "John Doe's location"}}, "unique_idx": "ACTION_INSERT_CONTACT-382-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to insert a contact for Jane Smith. Her mobile is 098-765-4321 and her email is jane@example.com. -> I'm adding Jane Smith to your contacts with the number 098-765-4321 and email jane@example.com.", "turn 2: Find the location of Jane Smith -> I'm on it. Searching for Jane Smith's location now."], "query": "Set a course for there.", "rewrited_query": "Set a course for Jane Smith's location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Jane Smith's location"}}, "unique_idx": "ACTION_INSERT_CONTACT-383-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you create a new contact entry for Michael? His number is 555-555-5555 and he lives at 123 Main St. -> I am now creating a contact for Michael with the number 555-555-5555 and address 123 Main St.", "turn 2: Show 123 Main St. on the map. -> Displaying 123 Main St. on the map."], "query": "Let's go there.", "rewrited_query": "Let's go to 123 Main St..", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "123 Main St."}}, "unique_idx": "ACTION_INSERT_CONTACT-384-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Add a record to my contacts: Name: Alice, Email: alice@wonderland.com, Address: 42 Fantasy Rd. -> Alright, adding Alice to your contacts with email alice@wonderland.com and address 42 Fantasy Rd.", "turn 2: Can you pull up 42 Fantasy Rd. in maps? -> Alright, let me pull up 42 Fantasy Rd. on the map for you."], "query": "Okay, let's navigate to there.", "rewrited_query": "Okay, let's navigate to 42 Fantasy Rd..", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "42 Fantasy Rd."}}, "unique_idx": "ACTION_INSERT_CONTACT-385-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Insert a contact with these details: Name: Bob K., Phone: 111-222-3333, Email: bob@examplemail.com. -> Okay, inserting a contact for Bob K. with phone 111-222-3333 and email bob@examplemail.com.", "turn 2: Find the location of Bob K. -> Searching for Bob K.'s location now."], "query": "Take me to him.", "rewrited_query": "Take me to Bob K.'s location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Bob K.'s location"}}, "unique_idx": "ACTION_INSERT_CONTACT-386-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Add a meeting with Bob to discuss project updates in the Conference Room A from 1700000000000 to 1700003600000. -> OK, I've added 'Meeting with Bob' on my calendar. We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000. The event URI is content://calender/event/1.", "turn 2: Can you show me where Conference Room A is? -> Alright, I'm now pulling up Conference Room A on the map."], "query": "Text that location to my wife.", "rewrited_query": "Text Conference Room A location to my wife.", "answer": {"plan": "send_message", "arguments": {"to": "my wife", "message": "Conference Room A location"}}, "unique_idx": "ACTION_INSERT_EVENT-436-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I need to schedule a dentist appointment for a dental cleaning; it starts at 1700100000000 and ends at 1700101800000. No specific location was provided. -> Alright, I've scheduled your dentist appointment for a dental cleaning. It's set for 1700100000000 to 1700101800000. The event URI is content://calender/event/2.", "turn 2: Can you search for the nearest dentist? -> Sure, searching for the nearest dentist now."], "query": "Send the location to my son.", "rewrited_query": "Send the nearest dentist location to my son.", "answer": {"plan": "send_message", "arguments": {"to": "my son", "message": "the nearest dentist location"}}, "unique_idx": "ACTION_INSERT_EVENT-437-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Please add an event called 'Lunch with Sarah': a lunch meeting to catch up with her at Cafe Nero, starting at 1700200000000 and ending at 1700203600000. -> I've added 'Lunch with Sarah' to your calendar at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000. The event URI is content://calender/event/3.", "turn 2: Could you pull Cafe Nero up on the map? -> Displaying Cafe Nero on the map for you."], "query": "Send that to Sarah.", "rewrited_query": "Send Cafe Nero location to Sarah.", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Cafe Nero location"}}, "unique_idx": "ACTION_INSERT_EVENT-438-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Create a calendar entry for a 'Yoga Class'. The event is described as an evening yoga session for relaxation. It begins at 1700300000000 and ends at 1700304500000. No location provided. -> Okay, 'Yoga Class' has been added to your calendar. It's an evening yoga session for relaxation from 1700300000000 to 1700304500000. The event URI is content://calender/event/4.", "turn 2: Find a nearby yoga studio, please. -> Finding nearby yoga studios for you."], "query": "Text the address of the yoga studio to my friend.", "rewrited_query": "Text the address of the nearby yoga studio to my friend.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "the address of the nearby yoga studio"}}, "unique_idx": "ACTION_INSERT_EVENT-439-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Show the contact details for the URI content://contacts/people/123. -> Okay, showing contact details from content://contacts/people/123.", "turn 2: Show me the contact's address on a map. -> Sure, I'm showing the contact's address on the map."], "query": "Send it to my assistant.", "rewrited_query": "Send the contact's address to my assistant.", "answer": {"plan": "send_message", "arguments": {"to": "my assistant", "message": "the contact's address"}}, "unique_idx": "ACTION_VIEW_CONTACT-761-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Could you open the contact profile at content://contacts/people/4567 for me? -> Sure, opening contact profile at content://contacts/people/4567.", "turn 2: Can you show me where the contact lives? -> Let me find where the contact lives and display it on the map."], "query": "Send that to him.", "rewrited_query": "Send the contact's address to him.", "answer": {"plan": "send_message", "arguments": {"to": "him", "message": "the contact's address"}}, "unique_idx": "ACTION_VIEW_CONTACT-762-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I need to view the details of the contact whose URI is content://contacts/contacts/9876. -> I am now displaying the contact details from content://contacts/contacts/9876.", "turn 2: Find the location of the contact. -> Okay, I'm now locating the contact on the map."], "query": "Send that location to my brother.", "rewrited_query": "Send the contact's location to my brother.", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "the contact's location"}}, "unique_idx": "ACTION_VIEW_CONTACT-763-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Display the contact information available at content://contacts/people/1010. -> Displaying contact information from content://contacts/people/1010.", "turn 2: Can you navigate to the contact's address? -> Navigating to the contact's address now."], "query": "Text it to my friend.", "rewrited_query": "Text the contact's address to my friend.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "the contact's address"}}, "unique_idx": "ACTION_VIEW_CONTACT-764-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: What's the phone number of the contact at contact://john_doe? -> Okay, the phone number for John Doe is 555-123-4567.", "turn 2: Find 555-123-4567 on the map -> Sure, pinpointing 555-123-4567 on the map."], "query": "Send this location to my client.", "rewrited_query": "Send 555-123-4567 location to my client.", "answer": {"plan": "send_message", "arguments": {"to": "my client", "message": "555-123-4567 location"}}, "unique_idx": "get_contact_info-998-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Retrieve the email for my colleague at contact://jane_smith. -> No problem, the email address for Jane Smith is jane.smith@example.com.", "turn 2: Show jane.smith@example.com on a map. -> Let me pull up jane.smith@example.com on the map."], "query": "Send the location to my secretary.", "rewrited_query": "Send jane.smith@example.com location to my secretary.", "answer": {"plan": "send_message", "arguments": {"to": "my secretary", "message": "jane.smith@example.com location"}}, "unique_idx": "get_contact_info-999-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Retrieve the email for my colleague at contact://jane_smith. -> No problem, the email address for Jane Smith is jane.smith@example.com.", "turn 2: Show jane.smith@example.com on a map. -> Let me pull up jane.smith@example.com on the map."], "query": "Email it to her.", "rewrited_query": "Email jane.smith@example.com to her.", "answer": {"plan": "send_email", "arguments": {"to": "jane.smith@example.com"}}, "unique_idx": "get_contact_info-999-search_location-1-send_email-1"}
{"conversation_history": ["turn 1: I need to schedule a dentist appointment for a dental cleaning; it starts at 1700100000000 and ends at 1700101800000. No specific location was provided. -> Alright, I've scheduled your dentist appointment for a dental cleaning. It's set for 1700100000000 to 1700101800000. The event URI is content://calender/event/2.", "turn 2: Can you search for the nearest dentist? -> Sure, searching for the nearest dentist now."], "query": "Take me to that location.", "rewrited_query": "Take me to the nearest dentist.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the nearest dentist"}}, "unique_idx": "ACTION_INSERT_EVENT-437-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please add an event called 'Lunch with Sarah': a lunch meeting to catch up with her at Cafe Nero, starting at 1700200000000 and ending at 1700203600000. -> I've added 'Lunch with Sarah' to your calendar at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000. The event URI is content://calender/event/3.", "turn 2: Could you pull Cafe Nero up on the map? -> Displaying Cafe Nero on the map for you."], "query": "Start navigating to it.", "rewrited_query": "Start navigating to Cafe Nero.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Cafe Nero"}}, "unique_idx": "ACTION_INSERT_EVENT-438-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Create a calendar entry for a 'Yoga Class'. The event is described as an evening yoga session for relaxation. It begins at 1700300000000 and ends at 1700304500000. No location provided. -> Okay, 'Yoga Class' has been added to your calendar. It's an evening yoga session for relaxation from 1700300000000 to 1700304500000. The event URI is content://calender/event/4.", "turn 2: Find a nearby yoga studio, please. -> Finding nearby yoga studios for you."], "query": "Guide me to one.", "rewrited_query": "Guide me to a nearby yoga studio.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "a nearby yoga studio"}}, "unique_idx": "ACTION_INSERT_EVENT-439-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Show the contact details for the URI content://contacts/people/123. -> Okay, showing contact details from content://contacts/people/123.", "turn 2: Show me the contact's address on a map. -> Sure, I'm showing the contact's address on the map."], "query": "Let's go there.", "rewrited_query": "Let's go to the contact's address.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the contact's address"}}, "unique_idx": "ACTION_VIEW_CONTACT-761-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you open the contact profile at content://contacts/people/4567 for me? -> Sure, opening contact profile at content://contacts/people/4567.", "turn 2: Can you show me where the contact lives? -> Let me find where the contact lives and display it on the map."], "query": "Okay, start navigation to there.", "rewrited_query": "Okay, start navigation to the contact's address.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the contact's address"}}, "unique_idx": "ACTION_VIEW_CONTACT-762-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to view the details of the contact whose URI is content://contacts/contacts/9876. -> I am now displaying the contact details from content://contacts/contacts/9876.", "turn 2: Find the location of the contact. -> Okay, I'm now locating the contact on the map."], "query": "Can you direct me there?", "rewrited_query": "Can you direct me to the location of the contact?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the location of the contact"}}, "unique_idx": "ACTION_VIEW_CONTACT-763-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Display the contact information available at content://contacts/people/1010. -> Displaying contact information from content://contacts/people/1010.", "turn 2: Can you navigate to the contact's address? -> Navigating to the contact's address now."], "query": "Continue navigation to there.", "rewrited_query": "Continue navigation to the contact's address.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the contact's address"}}, "unique_idx": "ACTION_VIEW_CONTACT-764-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: What's the phone number of the contact at contact://john_doe? -> Okay, the phone number for John Doe is 555-123-4567.", "turn 2: Find 555-123-4567 on the map -> Sure, pinpointing 555-123-4567 on the map."], "query": "Navigate to it, please.", "rewrited_query": "Navigate to 555-123-4567, please.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "555-123-4567"}}, "unique_idx": "get_contact_info-998-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Retrieve the email for my colleague at contact://jane_smith. -> No problem, the email address for Jane Smith is jane.smith@example.com.", "turn 2: Show jane.smith@example.com on a map. -> Let me pull up jane.smith@example.com on the map."], "query": "Okay, let's navigate to there.", "rewrited_query": "Okay, let's navigate to jane.smith@example.com.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "jane.smith@example.com"}}, "unique_idx": "get_contact_info-999-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to find the physical address of my friend at contact://alice_representative. -> Sure, the address for Alice Representative is 123 Main Street, Anytown, USA.", "turn 2: Can you show me where 123 Main Street, Anytown, USA is? -> Okay, mapping 123 Main Street, Anytown, USA for you now."], "query": "Text that to my sister.", "rewrited_query": "Text 123 Main Street, Anytown, USA to my sister.", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "123 Main Street, Anytown, USA"}}, "unique_idx": "get_contact_info-1000-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Show me a summary of the contact at contact://bob_resource. -> Okay, here's a summary for Bob Resource: Name - Bob Resource, Phone - 555-555-5555, Email - bob.resource@email.com.", "turn 2: Map 555-555-5555 -> Alright, pinpointing the location for 555-555-5555 on the map."], "query": "Text the address of that location to my friend.", "rewrited_query": "Text the address of the location for 555-555-5555 to my friend.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "the address of the location for 555-555-5555"}}, "unique_idx": "get_contact_info-1001-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I'm trying to get a contact's phone number using the content URI content://contacts/data/phone1. Can you fetch it for me? -> Okay, fetching the contact information from content://contacts/data/phone1.", "turn 2: Can you search for content://contacts/data/phone1 contact's address? -> Searching for the address associated with content://contacts/data/phone1."], "query": "Send that to my boss.", "rewrited_query": "Send the address associated with content://contacts/data/phone1 to my boss.", "answer": {"plan": "send_message", "arguments": {"to": "my boss", "message": "the address associated with content://contacts/data/phone1"}}, "unique_idx": "get_contact_info_from_uri-1053-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Could you extract the phone details from content://contacts/phones/local/123? I need that contact info. -> No problem, extracting the phone details from content://contacts/phones/local/123.", "turn 2: Find the location linked to content://contacts/phones/local/123 number. -> Locating the address for content://contacts/phones/local/123 on the map."], "query": "Text that to my wife.", "rewrited_query": "Text the address for content://contacts/phones/local/123 to my wife.", "answer": {"plan": "send_message", "arguments": {"to": "my wife", "message": "the address for content://contacts/phones/local/123"}}, "unique_idx": "get_contact_info_from_uri-1055-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I want to view the contact details at content://data/contacts/number/5555. Please get that information. -> Alright, let me pull up the contact details at content://data/contacts/number/5555.", "turn 2: Could you look up content://data/contacts/number/5555 address? -> Scouting out the address details for content://data/contacts/number/5555 now."], "query": "Send the address to my friend.", "rewrited_query": "Send the address for content://data/contacts/number/5555 to my friend.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "the address for content://data/contacts/number/5555"}}, "unique_idx": "get_contact_info_from_uri-1056-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Could you open the general settings on my device? -> Okay, opening the general settings now.", "turn 2: Search for restaurants in this area. -> Finding restaurants near your current location."], "query": "Text me the name and address of the first restaurant.", "rewrited_query": "Text me the name and address of the first restaurant that finding restaurants near your current location.", "answer": {"plan": "send_message", "arguments": {"to": "me", "message": "the name and address of the first restaurant that finding restaurants near your current location"}}, "unique_idx": "open_settings-1108-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I want to see my Wi-Fi settings now. -> Sure, routing you to the Wi-Fi settings.", "turn 2: Find the nearest coffee shop. -> Here are some nearby coffee shops. Displaying them on the map."], "query": "Send the details of the top one to my friend.", "rewrited_query": "Send the details of the top one to my friend from the nearby coffee shops.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "the details of the top one from the nearby coffee shops"}}, "unique_idx": "open_settings-1109-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Display settings please. -> Navigating to display settings.", "turn 2: Look for the closest gas station. -> Locating the closest gas station for you."], "query": "Text me the address of that gas station.", "rewrited_query": "Text me the address of the closest gas station.", "answer": {"plan": "send_message", "arguments": {"to": "me", "message": "the address of the closest gas station"}}, "unique_idx": "open_settings-1110-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: Switch to airplane mode settings for my phone. -> Alright, airplane mode settings are now open.", "turn 2: Is there a library nearby? -> Searching for libraries in your vicinity."], "query": "Text the address of the closest library to my mom.", "rewrited_query": "Text the address of the closest library to my mom from searching for libraries in your vicinity.", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "the address of the closest library from searching for libraries in your vicinity"}}, "unique_idx": "open_settings-1111-search_location-1-send_message-1"}
{"conversation_history": ["turn 1: I want to view the contact details at content://data/contacts/number/5555. Please get that information. -> Alright, let me pull up the contact details at content://data/contacts/number/5555.", "turn 2: Could you look up content://data/contacts/number/5555 address? -> Scouting out the address details for content://data/contacts/number/5555 now."], "query": "Can you email it to david@example.com?", "rewrited_query": "Can you email the address details for content://data/contacts/number/5555 to david@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "david@example.com"}}, "unique_idx": "get_contact_info_from_uri-1056-search_location-1-send_email-1"}
{"conversation_history": ["turn 1: I need to find the physical address of my friend at contact://alice_representative. -> Sure, the address for Alice Representative is 123 Main Street, Anytown, USA.", "turn 2: Can you show me where 123 Main Street, Anytown, USA is? -> Okay, mapping 123 Main Street, Anytown, USA for you now."], "query": "Navigate me there.", "rewrited_query": "Navigate me to 123 Main Street, Anytown, USA.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "123 Main Street, Anytown, USA"}}, "unique_idx": "get_contact_info-1000-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Show me a summary of the contact at contact://bob_resource. -> Okay, here's a summary for Bob Resource: Name - Bob Resource, Phone - 555-555-5555, Email - bob.resource@email.com.", "turn 2: Map 555-555-5555 -> Alright, pinpointing the location for 555-555-5555 on the map."], "query": "Start navigation to that phone number's location.", "rewrited_query": "Start navigation to 555-555-5555 phone number's location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "555-555-5555 phone number's location"}}, "unique_idx": "get_contact_info-1001-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I'm trying to get a contact's phone number using the content URI content://contacts/data/phone1. Can you fetch it for me? -> Okay, fetching the contact information from content://contacts/data/phone1.", "turn 2: Can you search for content://contacts/data/phone1 contact's address? -> Searching for the address associated with content://contacts/data/phone1."], "query": "Start navigating to that address.", "rewrited_query": "Start navigating to content://contacts/data/phone1 contact's address.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://contacts/data/phone1 contact's address"}}, "unique_idx": "get_contact_info_from_uri-1053-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you extract the phone details from content://contacts/phones/local/123? I need that contact info. -> No problem, extracting the phone details from content://contacts/phones/local/123.", "turn 2: Find the location linked to content://contacts/phones/local/123 number. -> Locating the address for content://contacts/phones/local/123 on the map."], "query": "Take me there now.", "rewrited_query": "Take me to the address for content://contacts/phones/local/123 now.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the address for content://contacts/phones/local/123"}}, "unique_idx": "get_contact_info_from_uri-1055-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I want to view the contact details at content://data/contacts/number/5555. Please get that information. -> Alright, let me pull up the contact details at content://data/contacts/number/5555.", "turn 2: Could you look up content://data/contacts/number/5555 address? -> Scouting out the address details for content://data/contacts/number/5555 now."], "query": "Navigate to it.", "rewrited_query": "Navigate to content://data/contacts/number/5555 address.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "content://data/contacts/number/5555"}}, "unique_idx": "get_contact_info_from_uri-1056-search_location-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to insert a contact for Jane Smith. Her mobile is 098-765-4321 and her email is jane@example.com. -> I'm adding Jane Smith to your contacts with the number 098-765-4321 and email jane@example.com.", "turn 2: Send jane@example.com a quick email. -> Sure thing, sending a quick email to jane@example.com."], "query": "Can you also text her 'Email sent!'", "rewrited_query": "Can you also text Jane Smith 'Email sent!'", "answer": {"plan": "send_message", "arguments": {"to": "Jane Smith", "message": "Email sent!"}}, "unique_idx": "ACTION_INSERT_CONTACT-383-send_email-1-send_message-1"}
{"conversation_history": ["turn 1: I need to create a new text document. Can you help by creating one called 'Journal.txt'? -> Sure, I've created a new text document named 'Journal.txt' for you. The URI is content://documents/Journal.txt.", "turn 2: Send content://documents/Journal.txt to my friend John and say 'I just created this.' -> Okay, sending 'I just created this.' and the file 'content://documents/Journal.txt' to John."], "query": "Could you also email it to john.friend@example.com?", "rewrited_query": "Could you also email content://documents/Journal.txt to john.friend@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "john.friend@example.com", "attachments": ["content://documents/Journal.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-1-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Please generate a PDF document for me named 'Resume.pdf'. -> No problem, creating 'Resume.pdf' now. You can find it at content://documents/Resume.pdf.", "turn 2: Can you text content://documents/Resume.pdf to Sarah? -> Sending the file at content://documents/Resume.pdf to Sarah now."], "query": "Can you send the same document to sarah@example.com via email?", "rewrited_query": "Can you send the document at content://documents/Resume.pdf to sarah@example.com via email?", "answer": {"plan": "send_email", "arguments": {"to": "sarah@example.com", "attachments": ["content://documents/Resume.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-2-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Please update the contact for John using URI content://contacts/people/john; his phone number should now be 123-456-7890. -> Okay, I'm updating John's contact with the new phone number 123-456-7890.  The edited contact URI is content://contacts/people/john.", "turn 2: Send John a text message saying 'Your contact information has been updated!' -> Texting John 'Your contact information has been updated!'"], "query": "Email him the same thing at his email, johndoe@example.com", "rewrited_query": "Email John the same thing at his email, johndoe@example.com", "answer": {"plan": "send_email", "arguments": {"to": "johndoe@example.com"}}, "unique_idx": "ACTION_EDIT_CONTACT-56-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Please open a document in PDF format from my device. -> Okay, I'm opening the file selector for PDF documents. Please choose a PDF file to proceed.", "turn 2: Okay, I've chosen the PDF file. Text my mom 'I sent you the PDF file.' -> Sending 'I sent you the PDF file.' and the selected PDF file to your mom."], "query": "Send the same message and the PDF file to mom's email, which is mom@example.com.", "rewrited_query": "Send the same message 'I sent you the PDF file.' and the PDF file to mom's email, which is mom@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "mom@example.com", "body": "I sent you the PDF file.", "attachments": ["PDF file"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-111-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Can you show me how to select text files? I need to choose multiple files at once. -> Sure, I'm opening the file selector to choose multiple text files. Please select the files you need.", "turn 2: Okay, I selected the multiple text files. Send the multiple text files to 555-123-4567 with the message 'Here are the files.' -> Okay, sending 'Here are the files.' and the selected text files to 555-123-4567."], "query": "Can you also email that to friend@example.com?", "rewrited_query": "Can you also email the multiple text files to friend@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "friend@example.com", "attachments": ["text files"]}}, "unique_idx": "ACTION_OPEN_DOCUMENT-112-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: I need to quickly pick a single image file to attach to my email. -> Okay, opening the file selector for images. Please choose one image to attach.", "turn 2: Send the image selected to John saying 'Here's the image I mentioned'. -> Sending 'Here's the image I mentioned' and the selected image to John."], "query": "Can you email it to him at john@example.com, with subject line 'Image'?", "rewrited_query": "Can you email the image selected to him at john@example.com, with subject line 'Image'?", "answer": {"plan": "send_email", "arguments": {"to": "john@example.com", "subject": "Image", "attachments": ["image selected"]}}, "unique_idx": "ACTION_GET_CONTENT-164-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Please open the PDF file located at content://documents/report.pdf. -> Okay, opening content://documents/report.pdf now.", "turn 2: Text content://documents/report.pdf to John, saying 'Here is the report'. -> Sending 'Here is the report' with content://documents/report.pdf to John."], "query": "Can you email him that too at john@example.com?", "rewrited_query": "Can you email John the PDF file too at john@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "john@example.com", "attachments": ["PDF file"]}}, "unique_idx": "ACTION_OPEN_CONTENT-219-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Show me the picture from content://gallery/pic01.jpg; it's a JPEG image. -> Displaying the JPEG image from content://gallery/pic01.jpg.", "turn 2: Send content://gallery/pic01.jpg to my mom with the message 'Look what I found!' -> Sending 'Look what I found!' and content://gallery/pic01.jpg to your mom."], "query": "Can you email it to my mom at mom@example.com with the subject 'A photo for you'?", "rewrited_query": "Can you email the image at content://gallery/pic01.jpg to my mom at mom@example.com with the subject 'A photo for you'?", "answer": {"plan": "send_email", "arguments": {"to": "mom@example.com", "subject": "A photo for you", "attachments": ["content://gallery/pic01.jpg"]}}, "unique_idx": "ACTION_OPEN_CONTENT-220-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Please snap a photo and save it to content://myfolder/photo1.jpg. -> Alright, taking a photo and saving it to content://myfolder/photo1.jpg.", "turn 2: Send content://myfolder/photo1.jpg in a message to my friend, Kevin. -> Sending content://myfolder/photo1.jpg to your friend, Kevin."], "query": "Can you send it to kevin@example.com?", "rewrited_query": "Can you send the photo at content://myfolder/photo1.jpg to kevin@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "kevin@example.com", "attachments": ["content://myfolder/photo1.jpg"]}}, "unique_idx": "ACTION_IMAGE_CAPTURE-326-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Please add a new contact for John Doe with phone number 123-456-7890. -> Okay, I'm creating a contact for John Doe with the phone number 123-456-7890.", "turn 2: Send John Doe a text saying 'Hi John, it's nice to meet you!' -> Sending 'Hi John, it's nice to meet you!' to John Doe."], "query": "Also, email him at john.doe@email.com with the same message.", "rewrited_query": "Also, email John Doe at john.doe@email.com with the same message 'Hi John, it's nice to meet you!'.", "answer": {"plan": "send_email", "arguments": {"to": "john.doe@email.com", "body": "Hi John, it's nice to meet you!"}}, "unique_idx": "ACTION_INSERT_CONTACT-382-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: I need to insert a contact for Jane Smith. Her mobile is 098-765-4321 and her email is jane@example.com. -> I'm adding Jane Smith to your contacts with the number 098-765-4321 and email jane@example.com.", "turn 2: Text Jane Smith 'Hi Jane, this is my new number!' -> Texting 'Hi Jane, this is my new number!' to Jane Smith."], "query": "Can you email that to jane@example.com?", "rewrited_query": "Can you email 'Hi Jane, this is my new number!' to jane@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "jane@example.com", "body": "Hi Jane, this is my new number!"}}, "unique_idx": "ACTION_INSERT_CONTACT-383-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Add a meeting with Bob to discuss project updates in the Conference Room A from 1700000000000 to 1700003600000. -> OK, I've added 'Meeting with Bob' on my calendar. We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000. The event URI is content://calender/event/1.", "turn 2: Text Bob to remind him about 'Meeting with Bob'. -> Sending 'Meeting with Bob' to Bob now."], "query": "Send that reminder to bob@example.com as well.", "rewrited_query": "Send 'Meeting with Bob' to bob@example.com as well.", "answer": {"plan": "send_email", "arguments": {"to": "bob@example.com", "subject": "Meeting with Bob"}}, "unique_idx": "ACTION_INSERT_EVENT-436-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Please record a video and save it at content://videos/myclip.mp4. -> Sure, recording video and saving it to content://videos/myclip.mp4.", "turn 2: Send content://videos/myclip.mp4 with 'Here is the video I recorded for you' to John. -> Sending 'Here is the video I recorded for you' with the attached video content://videos/myclip.mp4 to John."], "query": "Also, email that video to john.email@samsung.com.", "rewrited_query": "Also, email content://videos/myclip.mp4 to john.email@samsung.com.", "answer": {"plan": "send_email", "arguments": {"to": "john.email@samsung.com", "attachments": ["content://videos/myclip.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-708-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: Show the contact details for the URI content://contacts/people/123. -> Okay, showing contact details from content://contacts/people/123.", "turn 2: Text the contact at content://contacts/people/123 'I'm on my way'. -> Texting 'I'm on my way.' to the contact at content://contacts/people/123."], "query": "Email 'I'm on my way' to that contact.", "rewrited_query": "Email 'I'm on my way' to the contact at content://contacts/people/123.", "answer": {"plan": "send_email", "arguments": {"to": "content://contacts/people/123", "body": "I'm on my way"}}, "unique_idx": "ACTION_VIEW_CONTACT-761-send_message-1-send_email-1"}
{"conversation_history": ["turn 1: I need a fresh plain text document for notes. Name it 'QuickNotes.txt', please. -> Okay, I've created a new text document named 'QuickNotes.txt' for you. The URI is content://documents/QuickNotes.txt.", "turn 2: Now, open content://documents/QuickNotes.txt so I can start typing. -> Okay, opening 'QuickNotes.txt' at content://documents/QuickNotes.txt for you to start typing."], "query": "Send it to my supervisor at boss@example.com.", "rewrited_query": "Send content://documents/QuickNotes.txt to my supervisor at boss@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "boss@example.com", "attachments": ["content://documents/QuickNotes.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-11-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Help me open a new file; I'm looking for a text document called 'Recipe.txt'. -> Sure, I've generated a new text document called 'Recipe.txt'. You can find it at content://example/uri.", "turn 2: Can you open content://example/uri for me? -> Alright, opening the document at content://example/uri now."], "query": "Email it to mom at mom@example.com.", "rewrited_query": "Email content://example/uri to mom at mom@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "mom@example.com", "attachments": ["content://example/uri"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-12-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I want to create a PDF file for my current project details. Please create one named 'ProjectDetails.pdf'. -> No problem! I've created 'ProjectDetails.pdf' for you. Its URI is content://documents/ProjectDetails.pdf.", "turn 2: Can you open content://documents/ProjectDetails.pdf for editing, please? -> No problem, opening content://documents/ProjectDetails.pdf for editing."], "query": "Email it to my team at team@mycompany.com with the subject 'Project Details'.", "rewrited_query": "Email content://documents/ProjectDetails.pdf to my team at team@mycompany.com with the subject 'Project Details'.", "answer": {"plan": "send_email", "arguments": {"to": "team@mycompany.com", "subject": "Project Details", "attachments": ["content://documents/ProjectDetails.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-13-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Start a new text document with the suggested name 'IdeaLog.txt' so I can record my ideas. -> I've started a new text document, 'IdeaLog.txt', for you to jot down your ideas. The URI is content://example/IdeaLog.txt.", "turn 2: Edit content://example/IdeaLog.txt and add 'New Ideas:' to it. -> I'm adding 'New Ideas:' to content://example/IdeaLog.txt and opening it for you to continue editing."], "query": "Email that to ideas@company.com.", "rewrited_query": "Email content://example/IdeaLog.txt to ideas@company.com.", "answer": {"plan": "send_email", "arguments": {"to": "ideas@company.com", "attachments": ["content://example/IdeaLog.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-14-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you create a document in PDF format? I'd like it named 'Budget.pdf' for tracking my expenses. -> Alright, I've created a PDF document named 'Budget.pdf'. It's located at content://documents/Budget.pdf.", "turn 2: Now, let's open content://documents/Budget.pdf so I can input the initial figures. -> Okay, opening content://documents/Budget.pdf for you to input the initial figures."], "query": "Send it to my accountant at accountant@example.com.", "rewrited_query": "Send content://documents/Budget.pdf to my accountant at accountant@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "accountant@example.com", "attachments": ["content://documents/Budget.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-15-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need a new text file; please create one with the name 'DraftProposal.txt'. -> Okay, I've created a new text file called 'DraftProposal.txt'. You can access it via content://documents/DraftProposal.txt.", "turn 2: Could you open content://documents/DraftProposal.txt for me to start drafting? -> Sure, opening content://documents/DraftProposal.txt so you can start drafting."], "query": "Email it to submissions@example.com.", "rewrited_query": "Email content://documents/DraftProposal.txt to submissions@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "submissions@example.com", "attachments": ["content://documents/DraftProposal.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-16-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you generate a fresh PDF document titled 'Invoice.pdf' for me? -> I've generated a fresh PDF document titled 'Invoice.pdf' for you. Its URI is content://example/Invoice.pdf.", "turn 2: Please open content://example/Invoice.pdf for editing. -> Opening content://example/Invoice.pdf for editing now."], "query": "Can you email it to billing@client.com?", "rewrited_query": "Can you email content://example/Invoice.pdf to billing@client.com?", "answer": {"plan": "send_email", "arguments": {"to": "billing@client.com", "attachments": ["content://example/Invoice.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-17-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please help me by setting up a plain text file called 'Notes.txt'. -> I've set up a plain text file called 'Notes.txt' for you. The URI is content://documents/Notes.txt.", "turn 2: Open content://documents/Notes.txt, so I can begin to type my notes. -> Opening content://documents/Notes.txt for you to start typing your notes."], "query": "Email it to myself at myemail@example.com.", "rewrited_query": "Email content://documents/Notes.txt to myself at myemail@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "myemail@example.com", "attachments": ["content://documents/Notes.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-18-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I'm looking to produce a PDF report. Can you create one named 'SummaryReport.pdf'? -> I've created a PDF report named 'SummaryReport.pdf' for you. The URI is content://example/SummaryReport.pdf.", "turn 2: Could you please open content://example/SummaryReport.pdf so I can review and edit? -> Certainly, opening content://example/SummaryReport.pdf for you to review and edit."], "query": "Send it to management@example.com.", "rewrited_query": "Send content://example/SummaryReport.pdf to management@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "management@example.com", "attachments": ["content://example/SummaryReport.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-19-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Would you mind starting a new note as a plain text document, and naming it 'PersonalNote.txt'? -> I've started a new note as a plain text document and named it 'PersonalNote.txt'. It's available at content://documents/PersonalNote.txt.", "turn 2: Now, let’s open content://documents/PersonalNote.txt so I can add to it. -> Alright, opening content://documents/PersonalNote.txt so you can add to it."], "query": "Email it to support@company.com with the subject line 'Urgent Note'.", "rewrited_query": "Email content://documents/PersonalNote.txt to support@company.com with the subject line 'Urgent Note'.", "answer": {"plan": "send_email", "arguments": {"to": "support@company.com", "subject": "Urgent Note", "attachments": ["content://documents/PersonalNote.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-20-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Would you create a PDF document labeled 'Portfolio.pdf' for my portfolio? -> Certainly, I've created a PDF document named 'Portfolio.pdf' for you. You can access it via content://documents/Portfolio.pdf.", "turn 2: Can you open content://documents/Portfolio.pdf so I can add my work samples? -> Alright, opening 'Portfolio.pdf' now so you can add your work samples."], "query": "Send it to my supervisor at supervisor@company.com.", "rewrited_query": "Send content://documents/Portfolio.pdf to my supervisor at supervisor@company.com.", "answer": {"plan": "send_email", "arguments": {"to": "supervisor@company.com", "attachments": ["content://documents/Portfolio.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-31-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Generate a text document for me; the file should be called 'Announcement.txt'. -> No problem, I've generated 'Announcement.txt' as a text document. It's located at content://example/Announcement.txt.", "turn 2: Now, please open content://example/Announcement.txt for editing and insert the announcement details. -> Okay, I'm opening 'Announcement.txt' and inserting the announcement details now."], "query": "Email it to everyone on the marketing team at marketing@example.com.", "rewrited_query": "Email content://example/Announcement.txt to everyone on the marketing team at marketing@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "marketing@example.com", "attachments": ["content://example/Announcement.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-32-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need a PDF invitation for an event. Please make one named 'Invitation.pdf'. -> Okay, I've created a PDF invitation named 'Invitation.pdf'. You'll find it at content://documents/Invitation.pdf.", "turn 2: Could you open content://documents/Invitation.pdf so I can put the date and time in there? -> Sure, opening 'Invitation.pdf' and preparing it for you to input the date and time."], "query": "Could you email that to RSVP@party.com?", "rewrited_query": "Could you email content://documents/Invitation.pdf to RSVP@party.com?", "answer": {"plan": "send_email", "arguments": {"to": "RSVP@party.com", "attachments": ["content://documents/Invitation.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-33-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Help me start a journal entry by creating a text file titled 'Entry.txt'. -> Creating 'Entry.txt' for your journal now. The file is available at content://example/Entry.txt.", "turn 2: Please go ahead and open content://example/Entry.txt so I can start writing. -> No problem, opening 'Entry.txt' now."], "query": "Now send it to my email address personal@email.com.", "rewrited_query": "Now send content://example/Entry.txt to my email address personal@email.com.", "answer": {"plan": "send_email", "arguments": {"to": "personal@email.com", "attachments": ["content://example/Entry.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-34-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Can you set up a new PDF document for me called 'Booklet.pdf'? -> Alright, I've set up a new PDF document titled 'Booklet.pdf'. The URI is content://documents/Booklet.pdf.", "turn 2: Now open content://documents/Booklet.pdf and put in the introduction. -> Opening 'Booklet.pdf' and inserting the introduction for you."], "query": "Email it to publishing@company.com.", "rewrited_query": "Email content://documents/Booklet.pdf to publishing@company.com.", "answer": {"plan": "send_email", "arguments": {"to": "publishing@company.com", "attachments": ["content://documents/Booklet.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-35-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I'd like to create a text document named 'Summary.txt'. -> Creating 'Summary.txt' as a text document. It's available at content://example/Summary.txt.", "turn 2: Please open content://example/Summary.txt so I can type in the key points. -> Opening 'Summary.txt' and preparing it for your key points input."], "query": "Now email it to my project team at team@project.net.", "rewrited_query": "Now email content://example/Summary.txt to my project team at team@project.net.", "answer": {"plan": "send_email", "arguments": {"to": "team@project.net", "attachments": ["content://example/Summary.txt"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-36-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please generate a PDF for my research abstract, titled 'ResearchAbstract.pdf'. -> Generating the PDF 'ResearchAbstract.pdf' for you now. You can find it at content://documents/ResearchAbstract.pdf.", "turn 2: Now open content://documents/ResearchAbstract.pdf so I can make some edits. -> Opening 'ResearchAbstract.pdf' so you can proceed with your edits."], "query": "Send it to the professors at science@university.edu.", "rewrited_query": "Send content://documents/ResearchAbstract.pdf to the professors at science@university.edu.", "answer": {"plan": "send_email", "arguments": {"to": "science@university.edu", "attachments": ["content://documents/ResearchAbstract.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-37-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you set up a new PDF document with the title 'ProductDetails.pdf'? -> I've set up the 'ProductDetails.pdf' document for you. You can access it at content://documents/ProductDetails.pdf.", "turn 2: Can you open content://documents/ProductDetails.pdf up so I can add in the features? -> Okay, opening 'ProductDetails.pdf' and setting it up for you to add the features."], "query": "Email it to my colleague at colleague@company.com.", "rewrited_query": "Email content://documents/ProductDetails.pdf to my colleague at colleague@company.com.", "answer": {"plan": "send_email", "arguments": {"to": "colleague@company.com", "attachments": ["content://documents/ProductDetails.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-39-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need a PDF for storing my blueprints. Please create one named 'Blueprint.pdf'. -> Okay, I've created a PDF document for your blueprints. You can access it at content://documents/Blueprint.pdf.", "turn 2: Now, I want to add some content to content://documents/Blueprint.pdf. -> No problem, opening 'Blueprint.pdf' so you can add the content."], "query": "Can you send it to the construction team at builders@email.com?", "rewrited_query": "Can you send content://documents/Blueprint.pdf to the construction team at builders@email.com?", "answer": {"plan": "send_email", "arguments": {"to": "builders@email.com", "attachments": ["content://documents/Blueprint.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-41-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Set up a plain text document for me with the name 'DiaryEntry.txt'. -> No problem, a plain text document called 'DiaryEntry.txt' has been created. You'll find it at content://example/uri.", "turn 2: Let's go ahead and open content://example/uri for editing. -> Okay, opening content://example/uri for you to edit."], "query": "Send it to my best friend at friend@example.com.", "rewrited_query": "Send content://example/uri to my best friend at friend@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "friend@example.com", "attachments": ["content://example/uri"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-42-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: I'm looking to create a PDF file titled 'EventSchedule.pdf'. -> Alright, I've initiated the 'EventSchedule.pdf' file for you! It's located at content://documents/EventSchedule.pdf.", "turn 2: Can you open content://documents/EventSchedule.pdf up so I can add some details? -> Got it! Opening content://documents/EventSchedule.pdf for you now."], "query": "Email it to john.doe@example.com once I'm done.", "rewrited_query": "Email content://documents/EventSchedule.pdf to john.doe@example.com once I'm done.", "answer": {"plan": "send_email", "arguments": {"to": "john.doe@example.com", "attachments": ["content://documents/EventSchedule.pdf"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-43-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Help me launch a new document in text format called 'Bulletin.txt'. -> No problem! I've created a new text document called 'Bulletin.txt'. You can find it at content://example/uri.", "turn 2: Can you open content://example/uri to add some initial information? -> Okay, opening content://example/uri with 'some initial information' already inserted."], "query": "Send it to the department's mailing list once I add all the relevant info.", "rewrited_query": "Send content://example/uri to the department's mailing list once I add all the relevant info.", "answer": {"plan": "send_email", "arguments": {"to": "department's mailing list", "attachments": ["content://example/uri"]}}, "unique_idx": "ACTION_CREATE_DOCUMENT-52-ACTION_EDIT_DOCUMENT-1-send_email-1"}
{"conversation_history": ["turn 1: Shoot a video and store the file at content://media/videos/clip1.mp4. -> Okay, I'm now recording a video and saving it to content://media/videos/clip1.mp4.", "turn 2: Can you mute content://media/videos/clip1.mp4 video? -> Understood. I'm muting the audio for content://media/videos/clip1.mp4."], "query": "Send it to my brother.", "rewrited_query": "Send content://media/videos/clip1.mp4 to my brother.", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "content://media/videos/clip1.mp4"}}, "unique_idx": "ACTION_VIDEO_CAPTURE-727-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Begin capturing video and save the recording to content://videos/capture1.mp4. -> I'm recording the video and saving it to content://videos/capture1.mp4.", "turn 2: Could you trim content://videos/capture1.mp4 video to the last 10 seconds? -> Ok, trimming content://videos/capture1.mp4 to the last 10 seconds."], "query": "Text it to 555-123-4567 with the message 'Check this out!'", "rewrited_query": "Text content://videos/capture1.mp4 to 555-123-4567 with the message 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Check this out!", "attachments": ["content://videos/capture1.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-729-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I require a video recording; save it at content://video_storage/newvideo.mp4. -> Affirmative, the video is being recorded and will be saved to content://video_storage/newvideo.mp4.", "turn 2: Can you cut the first 15 seconds from content://video_storage/newvideo.mp4 video? -> Alright, cutting the first 15 seconds from content://video_storage/newvideo.mp4."], "query": "Can you send it to Mom with a message 'Here is the video!'?", "rewrited_query": "Can you send content://video_storage/newvideo.mp4 to Mom with a message 'Here is the video!'?", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "Here is the video!", "attachments": ["content://video_storage/newvideo.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-731-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Utilize the camera to record a short video and save it at content://clips/clipA.mp4. -> Roger that, recording the video and saving it to content://clips/clipA.mp4.", "turn 2: Please mute content://clips/clipA.mp4 video. -> Muting the video located at content://clips/clipA.mp4."], "query": "Text it to 123-456-7890.", "rewrited_query": "Text content://clips/clipA.mp4 to 123-456-7890.", "answer": {"plan": "send_message", "arguments": {"to": "123-456-7890", "message": "", "attachments": ["content://clips/clipA.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-733-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Initiate video capture and direct the camera to store the resulting video at content://archive/videos/vid.mp4. -> Understood. Commencing video capture and saving to content://archive/videos/vid.mp4.", "turn 2: Trim content://archive/videos/vid.mp4 video from 10 seconds to 60 seconds, please. -> Okay, trimming content://archive/videos/vid.mp4 from 10 seconds to 60 seconds."], "query": "Send that to Sarah.", "rewrited_query": "Send content://archive/videos/vid.mp4 to Sarah.", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "", "attachments": ["content://archive/videos/vid.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-735-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Record a video and have it saved at content://movie/film.mp4. -> I'm starting the video recording, and it will be saved at content://movie/film.mp4.", "turn 2: Could you trim content://movie/film.mp4 video from 0 to 120 seconds? -> I'm trimming content://movie/film.mp4 from the start to 120 seconds."], "query": "Send it to David, please.", "rewrited_query": "Send content://movie/film.mp4 to David, please.", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "", "attachments": ["content://movie/film.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-736-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I need a new video recording; please save it to content://app/videos/record.mp4. -> Okay, recording a video now, and it will be saved to content://app/videos/record.mp4.", "turn 2: Now, can you mute content://app/videos/record.mp4? -> Muting the audio for content://app/videos/record.mp4."], "query": "Send it to my friend.", "rewrited_query": "Send content://app/videos/record.mp4 to my friend.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "", "attachments": ["content://app/videos/record.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-738-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Record a high-impact video and save it at content://videos/highlight.mp4. -> Understood. Recording the video and saving it directly to content://videos/highlight.mp4.", "turn 2: I want to edit content://videos/highlight.mp4 from 5 seconds to 15 seconds. -> Trimming content://videos/highlight.mp4 from 5 to 15 seconds."], "query": "Send it to my group chat.", "rewrited_query": "Send content://videos/highlight.mp4 to my group chat.", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "", "attachments": ["content://videos/highlight.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-740-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Capture a video with the camera and store it at content://captures/video_today.mp4. -> Affirmative. Commencing video capture and saving it to content://captures/video_today.mp4.", "turn 2: Please edit content://captures/video_today.mp4 to start at 2 seconds and end at 10 seconds. -> Understood, I'm editing content://captures/video_today.mp4 to start at 2 seconds and end at 10 seconds."], "query": "Send it to +15555555555", "rewrited_query": "Send content://captures/video_today.mp4 to +15555555555", "answer": {"plan": "send_message", "arguments": {"to": "+15555555555", "message": "", "attachments": ["content://captures/video_today.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-742-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly create a video recording and set the file URI as content://docs/videos/clip.mp4. -> Acknowledged. Creating the video recording and saving it at content://docs/videos/clip.mp4.", "turn 2: Please edit content://docs/videos/clip.mp4 to the first 5 seconds. -> Okay, setting the end time for content://docs/videos/clip.mp4 to 5 seconds."], "query": "Send the edited video to my sister.", "rewrited_query": "Send content://docs/videos/clip.mp4 to my sister.", "answer": {"plan": "send_message", "arguments": {"to": "my sister", "message": "", "attachments": ["content://docs/videos/clip.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-744-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Open the camera to record a video, storing the result at content://video_archive/vid1.mp4. -> Okay, I'm recording a video and saving it to content://video_archive/vid1.mp4.", "turn 2: Trim content://video_archive/vid1.mp4 from 5 seconds to 15 seconds. -> Okay, trimming content://video_archive/vid1.mp4 from 5 seconds to 15 seconds."], "query": "Send it to my friend Sarah.", "rewrited_query": "Send content://video_archive/vid1.mp4 to my friend Sarah.", "answer": {"plan": "send_message", "arguments": {"to": "my friend Sarah", "message": "", "attachments": ["content://video_archive/vid1.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-748-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Capture a documentary clip and save the file at content://films/today.mp4. -> Got it. Filming and saving to content://films/today.mp4 now.", "turn 2: Trim content://films/today.mp4 to only show the last 10 seconds. -> Affirmative. I'm setting the end time for content://films/today.mp4 to 10 seconds."], "query": "Text it to my group chat.", "rewrited_query": "Text content://films/today.mp4 to my group chat.", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "", "attachments": ["content://films/today.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-750-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Record my video and assign the save path as content://media/recordedvideo.mp4. -> Affirmative. The video will be saved at content://media/recordedvideo.mp4.", "turn 2: Trim content://media/recordedvideo.mp4 from the beginning to 1 minute, please. -> Understood. Trimming content://media/recordedvideo.mp4 from 0 seconds to 60 seconds."], "query": "Can you send it to 555-123-4567 with the message 'Check this out!'?", "rewrited_query": "Can you send content://media/recordedvideo.mp4 to 555-123-4567 with the message 'Check this out!'?", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Check this out!", "attachments": ["content://media/recordedvideo.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-752-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I need to record a quick video and have it stored at content://snapshots/capture.mp4. -> Okay, recording video and saving it to content://snapshots/capture.mp4.", "turn 2: Trim content://snapshots/capture.mp4, showing only seconds 10 through 20. -> All right, trimming content://snapshots/capture.mp4 to show only seconds 10 through 20."], "query": "Send it to my mom with the message 'Here's a quick update'.", "rewrited_query": "Send content://snapshots/capture.mp4 to my mom with the message 'Here's a quick update'.", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "Here's a quick update", "attachments": ["content://snapshots/capture.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-754-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Proceed with recording a video and put it in content://saves/video_clip.mp4. -> Commencing video recording and saving to content://saves/video_clip.mp4.", "turn 2: Can you trim content://saves/video_clip.mp4 to the last 5 seconds? -> Acknowledged. Setting the end time for content://saves/video_clip.mp4 to 5 seconds."], "query": "Send that to my friend, Alex.", "rewrited_query": "Send content://saves/video_clip.mp4 to my friend, Alex.", "answer": {"plan": "send_message", "arguments": {"to": "my friend, Alex", "message": "", "attachments": ["content://saves/video_clip.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-756-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I want you to record a video clip and save the footage at content://clips/video_final.mp4. -> Understood. I'm now recording a video and saving it to content://clips/video_final.mp4.", "turn 2: Can you edit content://clips/video_final.mp4 to start at 5000ms and end at 15000ms? -> Okay, editing content://clips/video_final.mp4 to start at 5000ms and end at 15000ms."], "query": "Send that to my colleague with the text 'Here's the edited version'.", "rewrited_query": "Send content://clips/video_final.mp4 to my colleague with the text 'Here's the edited version'.", "answer": {"plan": "send_message", "arguments": {"to": "my colleague", "message": "Here's the edited version", "attachments": ["content://clips/video_final.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-758-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Record a video and upload the file to content://uploads/new_recording.mp4. -> Sure, recording video and saving it directly to content://uploads/new_recording.mp4.", "turn 2: Now, can you edit content://uploads/new_recording.mp4 to the first 5 seconds? -> Sure, trimming content://uploads/new_recording.mp4 to the first 5 seconds."], "query": "Send that to +15551234567.", "rewrited_query": "Send content://uploads/new_recording.mp4 to +15551234567.", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "", "attachments": ["content://uploads/new_recording.mp4"]}}, "unique_idx": "ACTION_VIDEO_CAPTURE-760-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Play video from the URL http://example.com/video.mp4 using default settings. -> Playing the video from http://example.com/video.mp4.", "turn 2: Trim the video from http://example.com/video.mp4 from the beginning to 1 minute. -> Got it. Trimming the video at http://example.com/video.mp4 to the first minute."], "query": "Send it to my brother at 408-555-1212.", "rewrited_query": "Send http://example.com/video.mp4 to my brother at 408-555-1212.", "answer": {"plan": "send_message", "arguments": {"to": "my brother at 408-555-1212", "message": "", "attachments": ["http://example.com/video.mp4"]}}, "unique_idx": "play_video-1439-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Launch my VLC player to play this video at http://videos.example.net/movie.mp4. -> Okay, launching VLC to play http://videos.example.net/movie.mp4.", "turn 2: Can you mute the video at http://videos.example.net/movie.mp4? -> Okay, muting the video at http://videos.example.net/movie.mp4."], "query": "Send this to David, saying 'Here is the muted version'.", "rewrited_query": "Send http://videos.example.net/movie.mp4 to David, saying 'Here is the muted version'.", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "Here is the muted version", "attachments": ["http://videos.example.net/movie.mp4"]}}, "unique_idx": "play_video-1440-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Can you play the video from this link: https://media.com/clip.mp4? -> Sure, playing the video from https://media.com/clip.mp4.", "turn 2: Can you trim the video from https://media.com/clip.mp4 from 10 seconds to 30 seconds? -> Trimming https://media.com/clip.mp4 from 10 to 30 seconds."], "query": "Send it via text to +19876543210.", "rewrited_query": "Send https://media.com/clip.mp4 via text to +19876543210.", "answer": {"plan": "send_message", "arguments": {"to": "+19876543210", "message": "", "attachments": ["https://media.com/clip.mp4"]}}, "unique_idx": "play_video-1443-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Help me watch the following video: ftp://files.host/video.mp4 on the default player. -> Now playing ftp://files.host/video.mp4 with the default player.", "turn 2: I want to trim the video from ftp://files.host/video.mp4 from 5 seconds to 20 seconds. -> Okay, I'm opening ftp://files.host/video.mp4 for editing, trimming it from 5 to 20 seconds."], "query": "Send it to my brother with a note 'Check this out!'", "rewrited_query": "Send ftp://files.host/video.mp4 to my brother with a note 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "Check this out!", "attachments": ["ftp://files.host/video.mp4"]}}, "unique_idx": "play_video-1445-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Play this video file: C:\\Videos\\holiday.mp4, please. -> Okay, playing the video from C:\\Videos\\holiday.mp4.", "turn 2: I want to edit the video from C:\\Videos\\holiday.mp4 now. -> Sure, opening C:\\Videos\\holiday.mp4 in the video editor."], "query": "Send it to Sarah", "rewrited_query": "Send C:\\Videos\\holiday.mp4 to Sarah", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "", "attachments": ["C:\\Videos\\holiday.mp4"]}}, "unique_idx": "play_video-1447-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Please open the video located at /mnt/videos/holiday.mp4. -> Now playing the video from /mnt/videos/holiday.mp4.", "turn 2: Can you edit the video located at /mnt/videos/holiday.mp4 to trim the first 10 seconds? -> No problem, I'm opening /mnt/videos/holiday.mp4 in the editor and will trim the first 10 seconds."], "query": "Text it to my mom.", "rewrited_query": "Text /mnt/videos/holiday.mp4 to my mom.", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "/mnt/videos/holiday.mp4", "attachments": []}}, "unique_idx": "play_video-1458-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I want to watch a movie using MX Player. The video's URL is http://movies.org/fun.mp4. -> Alright, I'm opening http://movies.org/fun.mp4 with MX Player.", "turn 2: Edit the video from http://movies.org/fun.mp4 to mute the audio, please. -> Got it. Opening http://movies.org/fun.mp4 in the video editor with audio muted."], "query": "Send it to +15551234567 with the message 'Here is the muted video.'", "rewrited_query": "Send http://movies.org/fun.mp4 to +15551234567 with the message 'Here is the muted video.'", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "Here is the muted video.", "attachments": ["http://movies.org/fun.mp4"]}}, "unique_idx": "play_video-1459-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Could you stream this clip from http://streaming.net/live.mp4? -> Starting the stream from http://streaming.net/live.mp4.", "turn 2: Edit the clip from http://streaming.net/live.mp4, cutting off the last 5 seconds. -> Alright, opening http://streaming.net/live.mp4 and trimming the last 5 seconds."], "query": "Send it to my group chat.", "rewrited_query": "Send http://streaming.net/live.mp4 to my group chat.", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "http://streaming.net/live.mp4", "attachments": []}}, "unique_idx": "play_video-1461-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Play the following video: /videos/family.mp4 using the default player. -> Playing /videos/family.mp4 now.", "turn 2: Edit the video /videos/family.mp4 to remove the first and last 2 seconds. -> Okay, editing /videos/family.mp4 to remove the first and last 2 seconds of the video."], "query": "Send that to David.", "rewrited_query": "Send /videos/family.mp4 to David.", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "/videos/family.mp4", "attachments": []}}, "unique_idx": "play_video-1462-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I need to watch my saved video in QuickTime: /Users/me/Videos/clip.mov. -> Okay, playing /Users/me/Videos/clip.mov in QuickTime.", "turn 2: Edit the video /Users/me/Videos/clip.mov to start from the 5-second mark. -> Sure, opening /Users/me/Videos/clip.mov for editing, starting from the 5-second mark."], "query": "Can you send it to my friend John with a message 'Take a look'?", "rewrited_query": "Can you send /Users/me/Videos/clip.mov to my friend John with a message 'Take a look'?", "answer": {"plan": "send_message", "arguments": {"to": "my friend John", "message": "Take a look", "attachments": ["/Users/me/Videos/clip.mov"]}}, "unique_idx": "play_video-1463-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Please play my recorded video from D:\\Recordings\\video.mp4. -> Now starting video playback from D:\\Recordings\\video.mp4.", "turn 2: Edit the recorded video from D:\\Recordings\\video.mp4 and mute the entire thing. -> Got it. Opening D:\\Recordings\\video.mp4 for editing and muting the audio."], "query": "Send it to 555-555-5555.", "rewrited_query": "Send D:\\Recordings\\video.mp4 to 555-555-5555.", "answer": {"plan": "send_message", "arguments": {"to": "555-555-5555", "message": "D:\\Recordings\\video.mp4", "attachments": []}}, "unique_idx": "play_video-1466-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I want to view the trailer available at https://trailers.com/video.mp4 on MX Player. -> Got it, playing the trailer from https://trailers.com/video.mp4 using MX Player.", "turn 2: Edit the trailer available at https://trailers.com/video.mp4 to trim it to 30 seconds. -> No problem, opening https://trailers.com/video.mp4 in the editor and trimming to 30 seconds."], "query": "Send this to my dad.", "rewrited_query": "Send https://trailers.com/video.mp4 to my dad.", "answer": {"plan": "send_message", "arguments": {"to": "my dad", "message": "https://trailers.com/video.mp4", "attachments": []}}, "unique_idx": "play_video-1467-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly launch the media player and play the video: /home/vids/doc.mp4. -> Playing the video from /home/vids/doc.mp4 now.", "turn 2: Can you trim the video from /home/vids/doc.mp4 from 10 seconds to 30 seconds? -> Sure, I'm opening /home/vids/doc.mp4 for editing. It will be trimmed from 10 to 30 seconds."], "query": "Send the file to my friend.", "rewrited_query": "Send the file /home/vids/doc.mp4 to my friend.", "answer": {"plan": "send_message", "arguments": {"to": "my friend", "message": "/home/vids/doc.mp4", "attachments": []}}, "unique_idx": "play_video-1468-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Please play the video located at /videos/unknown.mp4 on QuickTime player. -> Alright, playing /videos/unknown.mp4 with QuickTime.", "turn 2: Can you trim /videos/unknown.mp4? -> Sure, I'm opening /videos/unknown.mp4 for trimming."], "query": "Text it to my brother.", "rewrited_query": "Text /videos/unknown.mp4 to my brother.", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "/videos/unknown.mp4", "attachments": []}}, "unique_idx": "play_video-1478-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I need to play the movie from the URL http://movies.example.org/classic.mp4, please. -> Now playing the movie from http://movies.example.org/classic.mp4.", "turn 2: Mute the movie from http://movies.example.org/classic.mp4. -> Okay, muting the audio for http://movies.example.org/classic.mp4. Just a moment."], "query": "Send that to Sarah with the message 'Here is the video, check it out!'", "rewrited_query": "Send http://movies.example.org/classic.mp4 to Sarah with the message 'Here is the video, check it out!'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "Here is the video, check it out!", "attachments": ["http://movies.example.org/classic.mp4"]}}, "unique_idx": "play_video-1479-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Open the video player and show the video from C:\\Users\\Documents\\video_watching.mp4. -> Sure, I'm starting video playback from the file located at C:\\Users\\Documents\\video_watching.mp4.", "turn 2: Trim the video from C:\\Users\\Documents\\video_watching.mp4 from 10 second to 30 second. -> Alright, trimming C:\\Users\\Documents\\video_watching.mp4 from 10 seconds to 30 seconds."], "query": "Send it to +15551234567.", "rewrited_query": "Send C:\\Users\\Documents\\video_watching.mp4 to +15551234567.", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "C:\\Users\\Documents\\video_watching.mp4", "attachments": []}}, "unique_idx": "play_video-1480-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Can you launch VLC to play https://firebasestorage.com/video.mp4? -> Okay, launching VLC and playing https://firebasestorage.com/video.mp4.", "turn 2: Can you edit https://firebasestorage.com/video.mp4 from the beginning to 1 minute? -> Sure, editing https://firebasestorage.com/video.mp4 to trim it from the start to 1 minute."], "query": "Can you send it to my friend with the number 555-555-5555?", "rewrited_query": "Can you send https://firebasestorage.com/video.mp4 to my friend with the number 555-555-5555?", "answer": {"plan": "send_message", "arguments": {"to": "555-555-5555", "message": "https://firebasestorage.com/video.mp4", "attachments": []}}, "unique_idx": "play_video-1481-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Please play the file located at /var/www/movie.mkv. -> Playing the video file from /var/www/movie.mkv.", "turn 2: Edit the file located at /var/www/movie.mkv and mute the audio. -> Okay, opening /var/www/movie.mkv for editing and muting the audio."], "query": "Send it to my group chat with the message 'Check this out!'", "rewrited_query": "Send /var/www/movie.mkv to my group chat with the message 'Check this out!'", "answer": {"plan": "send_message", "arguments": {"to": "my group chat", "message": "Check this out! /var/www/movie.mkv", "attachments": []}}, "unique_idx": "play_video-1483-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I want to stream the video from URL https://server.net/stream.mp4 using default settings. -> Streaming the video from https://server.net/stream.mp4.", "turn 2: Can you cut the video from URL https://server.net/stream.mp4? -> Sure, let's open https://server.net/stream.mp4 for editing."], "query": "Send that via text to my dad.", "rewrited_query": "Send https://server.net/stream.mp4 via text to my dad.", "answer": {"plan": "send_message", "arguments": {"to": "my dad", "message": "https://server.net/stream.mp4", "attachments": []}}, "unique_idx": "play_video-1484-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Run video playback for me with the file D:\\Videos\\party.mp4 via MX Player. -> Starting playback of D:\\Videos\\party.mp4 with MX Player.", "turn 2: I want to edit D:\\Videos\\party.mp4. -> Opening D:\\Videos\\party.mp4 for editing."], "query": "Text it to 555-123-4567 with the message 'Here's the edited video!'", "rewrited_query": "Text D:\\Videos\\party.mp4 to 555-123-4567 with the message 'Here's the edited video!'", "answer": {"plan": "send_message", "arguments": {"to": "555-123-4567", "message": "Here's the edited video! D:\\Videos\\party.mp4", "attachments": []}}, "unique_idx": "play_video-1485-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Let's watch a movie; here's the link: https://movies.net/2020_hit.mp4. Use VLC to play it. -> Alright, playing https://movies.net/2020_hit.mp4 via VLC.", "turn 2: Edit https://movies.net/2020_hit.mp4 and start from 5 seconds. -> Okay, editing https://movies.net/2020_hit.mp4 and setting the start time to 5 seconds."], "query": "Send that to my mom.", "rewrited_query": "Send https://movies.net/2020_hit.mp4 to my mom.", "answer": {"plan": "send_message", "arguments": {"to": "my mom", "message": "https://movies.net/2020_hit.mp4", "attachments": []}}, "unique_idx": "play_video-1487-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Start the default video application and play the movie from /home/user/watch.mkv. -> Now playing /home/user/watch.mkv. Enjoy!", "turn 2: Trim /home/user/watch.mkv from the beginning to 30 seconds. -> Alright, trimming /home/user/watch.mkv from 0 to 30 seconds."], "query": "Send it as a text to my friend Tom.", "rewrited_query": "Send /home/user/watch.mkv as a text to my friend Tom.", "answer": {"plan": "send_message", "arguments": {"to": "my friend Tom", "message": "/home/user/watch.mkv", "attachments": []}}, "unique_idx": "play_video-1488-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Initiate VLC to play this video: C:\\Downloads\\funny_video.mp4. -> Alright, starting VLC and playing C:\\Downloads\\funny_video.mp4.", "turn 2: Can you mute C:\\Downloads\\funny_video.mp4? -> Sure, muting the audio for C:\\Downloads\\funny_video.mp4."], "query": "Send it to +18005550123.", "rewrited_query": "Send C:\\Downloads\\funny_video.mp4 to +18005550123.", "answer": {"plan": "send_message", "arguments": {"to": "+18005550123", "message": "C:\\Downloads\\funny_video.mp4", "attachments": []}}, "unique_idx": "play_video-1489-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: I would appreciate it if you could play a video from the link http://videoarchives.com/clip.avi. -> Sure thing! Playing the video from http://videoarchives.com/clip.avi.", "turn 2: I want to edit http://videoarchives.com/clip.avi. Can you open it for editing? -> Alright, opening http://videoarchives.com/clip.avi for editing now."], "query": "Send it to my friend John.", "rewrited_query": "Send http://videoarchives.com/clip.avi to my friend John.", "answer": {"plan": "send_message", "arguments": {"to": "my friend John", "message": "http://videoarchives.com/clip.avi", "attachments": []}}, "unique_idx": "play_video-1490-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Play the video file /srv/videos/exam.mp4 on MX Player if possible. -> Okay, I'm attempting to play /srv/videos/exam.mp4 with MX Player.", "turn 2: Can you edit /srv/videos/exam.mp4 to start at 10 seconds and end at 20 seconds? -> Okay, I'll trim /srv/videos/exam.mp4 to start at 10 seconds and end at 20 seconds."], "query": "Send it to +15551234567.", "rewrited_query": "Send /srv/videos/exam.mp4 to +15551234567.", "answer": {"plan": "send_message", "arguments": {"to": "+15551234567", "message": "/srv/videos/exam.mp4", "attachments": []}}, "unique_idx": "play_video-1491-ACTION_EDIT_VIDEO-1-send_message-1"}
{"conversation_history": ["turn 1: Please update the contact for John using URI content://contacts/people/john; his phone number should now be 123-456-7890. -> Okay, I'm updating John's contact with the new phone number 123-456-7890.  The edited contact URI is content://contacts/people/john.", "turn 2: Okay, take me to John's contact location. -> Navigating to John's contact location now."], "query": "Send his wife a message that I'm on my way.", "rewrited_query": "Send John's wife a message that I'm on my way.", "answer": {"plan": "send_message", "arguments": {"to": "John's wife", "message": "I'm on my way."}}, "unique_idx": "ACTION_EDIT_CONTACT-56-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: Could you edit the details for my coworker at content://contacts/people/alice to update her email to alice@example.com and set her company to AcmeCorp? -> No problem! I'm updating Alice's contact information with the email alice@example.com and company AcmeCorp. The contact URI is now content://contacts/people/alice.", "turn 2: Can you navigate to Alice's company, AcmeCorp? -> Okay, I'm starting navigation to AcmeCorp."], "query": "Send her a text saying I'm almost there.", "rewrited_query": "Send Alice a text saying I'm almost there.", "answer": {"plan": "send_message", "arguments": {"to": "Alice", "message": "I'm almost there."}}, "unique_idx": "ACTION_EDIT_CONTACT-57-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: I need to change the address for the contact at content://contacts/people/robert. Please update his address to '123 Elm Street'. -> I've updated Robert's address to '123 Elm Street'. The edited contact can be found at content://contacts/people/robert.", "turn 2: Navigate to the address 123 Elm Street, please. -> Initiating navigation to 123 Elm Street."], "query": "Text Robert I'm en route.", "rewrited_query": "Text Robert I'm en route.", "answer": {"plan": "send_message", "arguments": {"to": "Robert", "message": "I'm en route."}}, "unique_idx": "ACTION_EDIT_CONTACT-58-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: Modify the contact data for the person at URI content://contacts/people/sam by changing the name to 'Samuel Lee'. -> I've changed the contact's name to Samuel Lee. The URI for the updated contact is content://contacts/people/sam.", "turn 2: Can you navigate to Samuel Lee's address? -> Alright, starting navigation to Samuel Lee's address."], "query": "Text Samuel Lee to let him know that I will be arriving in 10 minutes.", "rewrited_query": "Text Samuel Lee to let him know that I will be arriving in 10 minutes.", "answer": {"plan": "send_message", "arguments": {"to": "Samuel Lee", "message": "I will be arriving in 10 minutes."}}, "unique_idx": "ACTION_EDIT_CONTACT-59-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: Add a meeting with Bob to discuss project updates in the Conference Room A from 1700000000000 to 1700003600000. -> OK, I've added 'Meeting with Bob' on my calendar. We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000. The event URI is content://calender/event/1.", "turn 2: Navigate me to Conference Room A. -> Commencing navigation to Conference Room A."], "query": "Send Bob a message saying that I'm on the way.", "rewrited_query": "Send Bob a message saying that I'm on the way.", "answer": {"plan": "send_message", "arguments": {"to": "Bob", "message": "I'm on the way."}}, "unique_idx": "ACTION_INSERT_EVENT-436-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: I need to schedule a dentist appointment for a dental cleaning; it starts at 1700100000000 and ends at 1700101800000. No specific location was provided. -> Alright, I've scheduled your dentist appointment for a dental cleaning. It's set for 1700100000000 to 1700101800000. The event URI is content://calender/event/2.", "turn 2: Take me to the dentist office. -> Okay, navigating you to the dentist office."], "query": "Send them a message I'm running 5 minutes late.", "rewrited_query": "Send the dentist office a message I'm running 5 minutes late.", "answer": {"plan": "send_message", "arguments": {"to": "the dentist office", "message": "I'm running 5 minutes late."}}, "unique_idx": "ACTION_INSERT_EVENT-437-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: Please add an event called 'Lunch with Sarah': a lunch meeting to catch up with her at Cafe Nero, starting at 1700200000000 and ending at 1700203600000. -> I've added 'Lunch with Sarah' to your calendar at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000. The event URI is content://calender/event/3.", "turn 2: Could you navigate me to Cafe Nero? -> Sure, starting navigation to Cafe Nero."], "query": "Send Sarah a message saying I'll be there soon.", "rewrited_query": "Send Sarah a message saying I'll be there soon.", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "I'll be there soon."}}, "unique_idx": "ACTION_INSERT_EVENT-438-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: Create a calendar entry for a 'Yoga Class'. The event is described as an evening yoga session for relaxation. It begins at 1700300000000 and ends at 1700304500000. No location provided. -> Okay, 'Yoga Class' has been added to your calendar. It's an evening yoga session for relaxation from 1700300000000 to 1700304500000. The event URI is content://calender/event/4.", "turn 2: Navigate to the yoga class location. -> Got it. Navigating to the yoga class location."], "query": "Send a message to the yoga studio saying I'm on my way.", "rewrited_query": "Send a message to the yoga studio saying I'm on my way.", "answer": {"plan": "send_message", "arguments": {"to": "the yoga studio", "message": "I'm on my way."}}, "unique_idx": "ACTION_INSERT_EVENT-439-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: What's the phone number of the contact at contact://john_doe? -> Okay, the phone number for John Doe is 555-123-4567.", "turn 2: Can you navigate to John Doe's address? -> Alright, I'm starting navigation to John Doe's address."], "query": "Send him a text saying that I'll be arriving soon.", "rewrited_query": "Send John Doe a text saying that I'll be arriving soon.", "answer": {"plan": "send_message", "arguments": {"to": "John Doe", "message": "I'll be arriving soon."}}, "unique_idx": "get_contact_info-998-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: Retrieve the email for my colleague at contact://jane_smith. -> No problem, the email address for Jane Smith is jane.smith@example.com.", "turn 2: Take me to Jane Smith's address. -> Okay, let's navigate to Jane Smith's address."], "query": "Send a message to her that I'm 10 minutes away.", "rewrited_query": "Send a message to Jane Smith that I'm 10 minutes away.", "answer": {"plan": "send_message", "arguments": {"to": "Jane Smith", "message": "I'm 10 minutes away."}}, "unique_idx": "get_contact_info-999-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: Locate 1600 Amphitheatre Parkway, Mountain View, CA for me. -> Finding 1600 Amphitheatre Parkway, Mountain View, CA.", "turn 2: Can you start navigation to 1600 Amphitheatre Parkway, Mountain View, CA? -> Okay, initiating navigation to 1600 Amphitheatre Parkway, Mountain View, CA."], "query": "Text my wife that I'm on my way there.", "rewrited_query": "Text my wife that I'm on my way to 1600 Amphitheatre Parkway, Mountain View, CA.", "answer": {"plan": "send_message", "arguments": {"to": "my wife", "message": "I'm on my way to 1600 Amphitheatre Parkway, Mountain View, CA."}}, "unique_idx": "search_location-1166-ACTION_NAVIGATE_TO_LOCATION-1-send_message-1"}
{"conversation_history": ["turn 1: Add a meeting with Bob to discuss project updates in the Conference Room A from 1700000000000 to 1700003600000. -> OK, I've added 'Meeting with Bob' on my calendar. We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000. The event URI is content://calender/event/1.", "turn 2: Can you show me the event content://calender/event/1? -> Sure, displaying the details for 'Meeting with Bob'. We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000."], "query": "Take me there now.", "rewrited_query": "Take me to Conference Room A now.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Conference Room A"}}, "unique_idx": "ACTION_INSERT_EVENT-436-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to schedule a dentist appointment for a dental cleaning; it starts at 1700100000000 and ends at 1700101800000. No specific location was provided. -> Alright, I've scheduled your dentist appointment for a dental cleaning. It's set for 1700100000000 to 1700101800000. The event URI is content://calender/event/2.", "turn 2: Okay, show me the details of the dentist appointment content://calender/event/2, please. -> OK, showing your dentist appointment for a dental cleaning. It's scheduled from 1700100000000 to 1700101800000."], "query": "Navigate to the dentist office.", "rewrited_query": "Navigate to the dentist office.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "dentist office"}}, "unique_idx": "ACTION_INSERT_EVENT-437-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please add an event called 'Lunch with Sarah': a lunch meeting to catch up with her at Cafe Nero, starting at 1700200000000 and ending at 1700203600000. -> I've added 'Lunch with Sarah' to your calendar at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000. The event URI is content://calender/event/3.", "turn 2: Can you display the event content://calender/event/3? -> Displaying 'Lunch with Sarah' at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000."], "query": "Start navigation to that cafe.", "rewrited_query": "Start navigation to Cafe Nero.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Cafe Nero"}}, "unique_idx": "ACTION_INSERT_EVENT-438-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Create a calendar entry for a 'Yoga Class'. The event is described as an evening yoga session for relaxation. It begins at 1700300000000 and ends at 1700304500000. No location provided. -> Okay, 'Yoga Class' has been added to your calendar. It's an evening yoga session for relaxation from 1700300000000 to 1700304500000. The event URI is content://calender/event/4.", "turn 2: Show me the event content://calender/event/4. -> Showing the details for 'Yoga Class': an evening yoga session for relaxation from 1700300000000 to 1700304500000."], "query": "Can you navigate to my yoga class?", "rewrited_query": "Can you navigate to my yoga class?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "my yoga class"}}, "unique_idx": "ACTION_INSERT_EVENT-439-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Set up an event titled 'Project Deadline' with the description 'Final submission of the project report'. The meeting is at the office, starting at 1700400000000 and concluding at 1700407200000. -> Got it! 'Project Deadline' has been created for the final submission of the project report at the office, running from 1700400000000 to 1700407200000. The event URI is content://calender/event/5.", "turn 2: What are the details of the event content://calender/event/5? -> Here's the 'Project Deadline' event. It's the final submission of the project report at the office, running from 1700400000000 to 1700407200000."], "query": "Navigate me to the office, please.", "rewrited_query": "Navigate me to the office, please.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the office"}}, "unique_idx": "ACTION_INSERT_EVENT-440-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please schedule an event named 'Gym Session' for a morning workout. It starts at 1700600000000 and finishes at 1700601800000. -> I've scheduled a 'Gym Session' for your morning workout. It's set for 1700600000000 to 1700601800000. The event URI is content://calender/event/7.", "turn 2: Can you pull up that calendar event content://calender/event/7? -> Okay, pulling up the 'Gym Session' event for your morning workout. It's scheduled from 1700600000000 to 1700601800000."], "query": "Take me to the gym.", "rewrited_query": "Take me to the gym.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the gym"}}, "unique_idx": "ACTION_INSERT_EVENT-442-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Add an event to my calendar: 'Interview with Jane' for the marketing position. Details include a job interview scheduled to take place on Zoom (Online) starting at 1700700000000 and ending at 1700703600000. -> OK, I've added 'Interview with Jane' to your calendar for the marketing position on Zoom (Online). It's scheduled from 1700700000000 to 1700703600000. The event URI is content://calender/event/8.", "turn 2: Show me the calendar entry content://calender/event/8. -> Showing the calendar entry for 'Interview with Jane' for the marketing position on Zoom (Online). It's scheduled from 1700700000000 to 1700703600000."], "query": "Guide me to the online meeting, please.", "rewrited_query": "Guide me to Zoom (Online), please.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Zoom (Online)"}}, "unique_idx": "ACTION_INSERT_EVENT-443-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Insert a 'Birthday Party' event—a full-day celebration for a friend. It should start at 1700800000000 and wrap up at 1700820000000, held at home. -> 'Birthday Party' event added to your calendar for a full-day celebration at home, starting at 1700800000000 and ending at 1700820000000. The event URI is content://calender/event/9.", "turn 2: Display the event content://calender/event/9. -> Displaying the 'Birthday Party' event, a full-day celebration for a friend at home, starting at 1700800000000 and ending at 1700820000000."], "query": "Navigate to my home.", "rewrited_query": "Navigate to my home.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "my home"}}, "unique_idx": "ACTION_INSERT_EVENT-444-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Create an event for a 'Webinar on AI' where the focus is on machine learning trends. It should begin at 1700900000000 and end at 1700907200000. No specific venue mentioned. -> I've created an event for the 'Webinar on AI' to focus on machine learning trends, starting at 1700900000000 and ending at 1700907200000. The event URI is content://calender/event/10.", "turn 2: Let me see the event content://calender/event/10. -> Here is the 'Webinar on AI' event focusing on machine learning trends, starting at 1700900000000 and ending at 1700907200000."], "query": "Start navigating to the webinar location.", "rewrited_query": "Start navigating to the webinar location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the webinar location"}}, "unique_idx": "ACTION_INSERT_EVENT-445-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Add a meeting with Bob to discuss project updates in the Conference Room A from 1700000000000 to 1700003600000. -> OK, I've added 'Meeting with Bob' on my calendar. We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000. The event URI is content://calender/event/1.", "turn 2: Can you show me the event content://calender/event/1? -> Sure, displaying the details for 'Meeting with Bob'. We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000."], "query": "Email these details to my colleague at coworker@example.com", "rewrited_query": "Email 'Meeting with Bob'. We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000 to my colleague at coworker@example.com", "answer": {"plan": "send_email", "arguments": {"to": "coworker@example.com", "subject": "Meeting with Bob", "body": "We'll discuss project updates at Conference Room A. Starts at 1700000000000 and ends at 1700003600000"}}, "unique_idx": "ACTION_INSERT_EVENT-436-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need to schedule a dentist appointment for a dental cleaning; it starts at 1700100000000 and ends at 1700101800000. No specific location was provided. -> Alright, I've scheduled your dentist appointment for a dental cleaning. It's set for 1700100000000 to 1700101800000. The event URI is content://calender/event/2.", "turn 2: Okay, show me the details of the dentist appointment content://calender/event/2, please. -> OK, showing your dentist appointment for a dental cleaning. It's scheduled from 1700100000000 to 1700101800000."], "query": "Email it to my mom at mom@example.com.", "rewrited_query": "Email your dentist appointment for a dental cleaning. It's scheduled from 1700100000000 to 1700101800000 to my mom at mom@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "mom@example.com", "subject": "dentist appointment for a dental cleaning", "body": "It's scheduled from 1700100000000 to 1700101800000"}}, "unique_idx": "ACTION_INSERT_EVENT-437-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please add an event called 'Lunch with Sarah': a lunch meeting to catch up with her at Cafe Nero, starting at 1700200000000 and ending at 1700203600000. -> I've added 'Lunch with Sarah' to your calendar at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000. The event URI is content://calender/event/3.", "turn 2: Can you display the event content://calender/event/3? -> Displaying 'Lunch with Sarah' at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000."], "query": "Can you email these details to sarah@example.com?", "rewrited_query": "Can you email 'Lunch with Sarah' at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000 to sarah@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "sarah@example.com", "subject": "Lunch with Sarah", "body": "at Cafe Nero to catch up. It's scheduled from 1700200000000 to 1700203600000"}}, "unique_idx": "ACTION_INSERT_EVENT-438-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Create a calendar entry for a 'Yoga Class'. The event is described as an evening yoga session for relaxation. It begins at 1700300000000 and ends at 1700304500000. No location provided. -> Okay, 'Yoga Class' has been added to your calendar. It's an evening yoga session for relaxation from 1700300000000 to 1700304500000. The event URI is content://calender/event/4.", "turn 2: Show me the event content://calender/event/4. -> Showing the details for 'Yoga Class': an evening yoga session for relaxation from 1700300000000 to 1700304500000."], "query": "Email this to my friend at friend@example.com.", "rewrited_query": "Email 'Yoga Class': an evening yoga session for relaxation from 1700300000000 to 1700304500000 to my friend at friend@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "friend@example.com", "subject": "Yoga Class", "body": "an evening yoga session for relaxation from 1700300000000 to 1700304500000"}}, "unique_idx": "ACTION_INSERT_EVENT-439-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Set up an event titled 'Project Deadline' with the description 'Final submission of the project report'. The meeting is at the office, starting at 1700400000000 and concluding at 1700407200000. -> Got it! 'Project Deadline' has been created for the final submission of the project report at the office, running from 1700400000000 to 1700407200000. The event URI is content://calender/event/5.", "turn 2: What are the details of the event content://calender/event/5? -> Here's the 'Project Deadline' event. It's the final submission of the project report at the office, running from 1700400000000 to 1700407200000."], "query": "Email it to the team at team@example.com with the subject 'Project Deadline Reminder'.", "rewrited_query": "Email the 'Project Deadline' event. It's the final submission of the project report at the office, running from 1700400000000 to 1700407200000 to the team at team@example.com with the subject 'Project Deadline Reminder'.", "answer": {"plan": "send_email", "arguments": {"to": "team@example.com", "subject": "Project Deadline Reminder", "body": "It's the final submission of the project report at the office, running from 1700400000000 to 1700407200000"}}, "unique_idx": "ACTION_INSERT_EVENT-440-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I want to insert an event 'Book Club Meeting' where we'll discuss this month's selection at the local library. It should begin at 1700500000000 and end at 1700505400000. -> 'Book Club Meeting' added to your calendar at the local library to discuss this month's selection. The meeting is scheduled from 1700500000000 to 1700505400000. The event URI is content://calender/event/6.", "turn 2: Can I see the event details of content://calender/event/6? -> Certainly, showing you 'Book Club Meeting' at the local library to discuss this month's selection. It's scheduled from 1700500000000 to 1700505400000."], "query": "Email these details to my book club members at books@example.com.", "rewrited_query": "Email 'Book Club Meeting' at the local library to discuss this month's selection. It's scheduled from 1700500000000 to 1700505400000 to my book club members at books@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "books@example.com", "subject": "Book Club Meeting", "body": "at the local library to discuss this month's selection. It's scheduled from 1700500000000 to 1700505400000"}}, "unique_idx": "ACTION_INSERT_EVENT-441-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please schedule an event named 'Gym Session' for a morning workout. It starts at 1700600000000 and finishes at 1700601800000. -> I've scheduled a 'Gym Session' for your morning workout. It's set for 1700600000000 to 1700601800000. The event URI is content://calender/event/7.", "turn 2: Can you pull up that calendar event content://calender/event/7? -> Okay, pulling up the 'Gym Session' event for your morning workout. It's scheduled from 1700600000000 to 1700601800000."], "query": "Email it to my workout buddy at buddy@example.com.", "rewrited_query": "Email the 'Gym Session' event for your morning workout. It's scheduled from 1700600000000 to 1700601800000 to my workout buddy at buddy@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "buddy@example.com", "subject": "Gym Session", "body": "for your morning workout. It's scheduled from 1700600000000 to 1700601800000"}}, "unique_idx": "ACTION_INSERT_EVENT-442-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Add an event to my calendar: 'Interview with Jane' for the marketing position. Details include a job interview scheduled to take place on Zoom (Online) starting at 1700700000000 and ending at 1700703600000. -> OK, I've added 'Interview with Jane' to your calendar for the marketing position on Zoom (Online). It's scheduled from 1700700000000 to 1700703600000. The event URI is content://calender/event/8.", "turn 2: Show me the calendar entry content://calender/event/8. -> Showing the calendar entry for 'Interview with Jane' for the marketing position on Zoom (Online). It's scheduled from 1700700000000 to 1700703600000."], "query": "Email these details to hr@example.com with the subject line 'Jane Interview Details'.", "rewrited_query": "Email the calendar entry for 'Interview with Jane' for the marketing position on Zoom (Online). It's scheduled from 1700700000000 to 1700703600000 to hr@example.com with the subject line 'Jane Interview Details'.", "answer": {"plan": "send_email", "arguments": {"to": "hr@example.com", "subject": "Jane Interview Details", "body": "the calendar entry for 'Interview with Jane' for the marketing position on Zoom (Online). It's scheduled from 1700700000000 to 1700703600000"}}, "unique_idx": "ACTION_INSERT_EVENT-443-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Insert a 'Birthday Party' event—a full-day celebration for a friend. It should start at 1700800000000 and wrap up at 1700820000000, held at home. -> 'Birthday Party' event added to your calendar for a full-day celebration at home, starting at 1700800000000 and ending at 1700820000000. The event URI is content://calender/event/9.", "turn 2: Display the event content://calender/event/9. -> Displaying the 'Birthday Party' event, a full-day celebration for a friend at home, starting at 1700800000000 and ending at 1700820000000."], "query": "Email it to my friend at partygoers@example.com to remind them about it.", "rewrited_query": "Email the 'Birthday Party' event, a full-day celebration for a friend at home, starting at 1700800000000 and ending at 1700820000000 to my friend at partygoers@example.com to remind them about it.", "answer": {"plan": "send_email", "arguments": {"to": "partygoers@example.com", "subject": "Birthday Party", "body": "a full-day celebration for a friend at home, starting at 1700800000000 and ending at 1700820000000 to remind them about it"}}, "unique_idx": "ACTION_INSERT_EVENT-444-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Create an event for a 'Webinar on AI' where the focus is on machine learning trends. It should begin at 1700900000000 and end at 1700907200000. No specific venue mentioned. -> I've created an event for the 'Webinar on AI' to focus on machine learning trends, starting at 1700900000000 and ending at 1700907200000. The event URI is content://calender/event/10.", "turn 2: Let me see the event content://calender/event/10. -> Here is the 'Webinar on AI' event focusing on machine learning trends, starting at 1700900000000 and ending at 1700907200000."], "query": "Email these details to ai_group@example.com.", "rewrited_query": "Email the 'Webinar on AI' event focusing on machine learning trends, starting at 1700900000000 and ending at 1700907200000 to ai_group@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "ai_group@example.com", "subject": "Webinar on AI", "body": "Webinar on AI event focusing on machine learning trends, starting at 1700900000000 and ending at 1700907200000"}}, "unique_idx": "ACTION_INSERT_EVENT-445-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Add a calendar event titled 'Client Call' to discuss contract details with a client. The call is scheduled on Microsoft Teams, starting at 1701000000000 and ending at 1701001800000. -> OK, I've added 'Client Call' to your calendar on Microsoft Teams. It will run from 1701000000000 to 1701001800000. content://calender/event/1", "turn 2: Can you show me content://calender/event/1 event? -> Displaying the 'Client Call' event details: Microsoft Teams, from 1701000000000 to 1701001800000."], "query": "Take me there.", "rewrited_query": "Take me to Microsoft Teams.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Microsoft Teams"}}, "unique_idx": "ACTION_INSERT_EVENT-446-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I want to add a session titled 'Cooking Class' that covers learning Italian cuisine, held at Culinary School. The event begins at 1701100000000 and ends at 1701105400000. -> No problem! I've scheduled 'Cooking Class' at Culinary School from 1701100000000 to 1701105400000. content://calender/event/2", "turn 2: Can you display content://calender/event/2? -> Showing the 'Cooking Class' event details: Culinary School, from 1701100000000 to 1701105400000."], "query": "Navigate to that place.", "rewrited_query": "Navigate to Culinary School.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Culinary School"}}, "unique_idx": "ACTION_INSERT_EVENT-447-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Schedule 'Movie Night' with friends to watch the latest blockbuster at a private theater. The event begins at 1701300000000 and ends at 1701310000000. -> Okay, 'Movie Night' at the private theater has been added to your calendar. The event is scheduled from 1701300000000 to 1701310000000. content://calender/event/4", "turn 2: Could you show me content://calender/event/4 event? -> Displaying 'Movie Night' details: private theater, scheduled from 1701300000000 to 1701310000000."], "query": "Navigate me there.", "rewrited_query": "Navigate me to private theater.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "private theater"}}, "unique_idx": "ACTION_INSERT_EVENT-449-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please insert the event 'Gardening Workshop', which is a hands-on session on sustainable gardening practices. It will take place at Community Garden, starting at 1701400000000 and ending at 1701405400000. -> Great! I've added 'Gardening Workshop' at Community Garden, running from 1701400000000 to 1701405400000. content://calender/event/5", "turn 2: Let me see content://calender/event/5. -> Showing 'Gardening Workshop' event: Community Garden, from 1701400000000 to 1701405400000."], "query": "Can you give me directions to get there?", "rewrited_query": "Can you give me directions to get to Community Garden?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Community Garden"}}, "unique_idx": "ACTION_INSERT_EVENT-450-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please create a 'Morning Briefing' event for a team update meeting at the main office. It starts at 1701500000000 and ends at 1701501800000. -> I've scheduled 'Morning Briefing' at the main office from 1701500000000 to 1701501800000. content://calender/event/6", "turn 2: Can you show content://calender/event/6? -> Here's the 'Morning Briefing' event: main office, scheduled from 1701500000000 to 1701501800000."], "query": "Could you navigate me to there?", "rewrited_query": "Could you navigate me to main office?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "main office"}}, "unique_idx": "ACTION_INSERT_EVENT-451-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Schedule a 'Weekly Sync' meeting on Zoom to discuss project progress. It should kick off at 1701600000000 and wrap up at 1701603600000. -> 'Weekly Sync' is now scheduled on Zoom from 1701600000000 to 1701603600000. content://calender/event/7", "turn 2: View content://calender/event/7 event. -> Displaying 'Weekly Sync' details: Zoom, from 1701600000000 to 1701603600000."], "query": "Can you navigate me?", "rewrited_query": "Can you navigate me to Zoom?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Zoom"}}, "unique_idx": "ACTION_INSERT_EVENT-452-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Add an event for a 'Yoga Session' focused on relaxation and flexibility. It begins at 1701700000000 and ends at 1701701800000. -> Added 'Yoga Session' from 1701700000000 to 1701701800000. content://calender/event/8", "turn 2: Can I see content://calender/event/8? -> Showing the details for 'Yoga Session': from 1701700000000 to 1701701800000."], "query": "Okay, navigate to that location.", "rewrited_query": "Okay, navigate to the Yoga Session location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Yoga Session location"}}, "unique_idx": "ACTION_INSERT_EVENT-453-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to insert a 'Board Meeting' event with the purpose of discussing quarterly reports. It'll be held at the Conference Room B and run from 1701800000000 until 1701807200000. -> I've added 'Board Meeting' in Conference Room B, scheduled from 1701800000000 to 1701807200000. content://calender/event/9", "turn 2: Show content://calender/event/9 event. -> Here are the details for the 'Board Meeting' event: Conference Room B, scheduled from 1701800000000 to 1701807200000."], "query": "Start navigation to there.", "rewrited_query": "Start navigation to Conference Room B.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Conference Room B"}}, "unique_idx": "ACTION_INSERT_EVENT-454-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you add my 'Doctor Appointment' scheduled at the City Clinic? Appointment starts at 1701900000000 and ends at 1701903600000. -> 'Doctor Appointment' at City Clinic is scheduled from 1701900000000 to 1701903600000. content://calender/event/10", "turn 2: Can you show me content://calender/event/10 appointment? -> Displaying 'Doctor Appointment' event details: City Clinic, from 1701900000000 to 1701903600000."], "query": "I want to navigate to that place.", "rewrited_query": "I want to navigate to City Clinic.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "City Clinic"}}, "unique_idx": "ACTION_INSERT_EVENT-455-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Add a calendar event titled 'Client Call' to discuss contract details with a client. The call is scheduled on Microsoft Teams, starting at 1701000000000 and ending at 1701001800000. -> OK, I've added 'Client Call' to your calendar on Microsoft Teams. It will run from 1701000000000 to 1701001800000. content://calender/event/1", "turn 2: Can you show me content://calender/event/1 event? -> Displaying the 'Client Call' event details: Microsoft Teams, from 1701000000000 to 1701001800000."], "query": "Email it to my manager at manager@example.com.", "rewrited_query": "Email Displaying the 'Client Call' event details: Microsoft Teams, from 1701000000000 to 1701001800000. to my manager at manager@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "manager@example.com", "subject": "Client Call", "body": "Displaying the 'Client Call' event details: Microsoft Teams, from 1701000000000 to 1701001800000."}}, "unique_idx": "ACTION_INSERT_EVENT-446-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I want to add a session titled 'Cooking Class' that covers learning Italian cuisine, held at Culinary School. The event begins at 1701100000000 and ends at 1701105400000. -> No problem! I've scheduled 'Cooking Class' at Culinary School from 1701100000000 to 1701105400000. content://calender/event/2", "turn 2: Can you display content://calender/event/2? -> Showing the 'Cooking Class' event details: Culinary School, from 1701100000000 to 1701105400000."], "query": "Send that to my friend at friend@example.com", "rewrited_query": "Send Showing the 'Cooking Class' event details: Culinary School, from 1701100000000 to 1701105400000. to my friend at friend@example.com", "answer": {"plan": "send_email", "arguments": {"to": "friend@example.com", "subject": "Cooking Class", "body": "Showing the 'Cooking Class' event details: Culinary School, from 1701100000000 to 1701105400000."}}, "unique_idx": "ACTION_INSERT_EVENT-447-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Plan a 'Networking Event' where professionals from the industry can meet. It starts at 1701200000000 and ends at 1701207200000, but no specific location is mentioned. -> Alright, 'Networking Event' is on the calendar from 1701200000000 to 1701207200000. I've saved it. content://calender/event/3", "turn 2: Show me the details of content://calender/event/3. -> Here are the details for the 'Networking Event': No specific location, from 1701200000000 to 1701207200000."], "query": "Email these details to marketing@example.com.", "rewrited_query": "Email Here are the details for the 'Networking Event': No specific location, from 1701200000000 to 1701207200000. to marketing@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "marketing@example.com", "subject": "Networking Event", "body": "Here are the details for the 'Networking Event': No specific location, from 1701200000000 to 1701207200000."}}, "unique_idx": "ACTION_INSERT_EVENT-448-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Schedule 'Movie Night' with friends to watch the latest blockbuster at a private theater. The event begins at 1701300000000 and ends at 1701310000000. -> Okay, 'Movie Night' at the private theater has been added to your calendar. The event is scheduled from 1701300000000 to 1701310000000. content://calender/event/4", "turn 2: Could you show me content://calender/event/4 event? -> Displaying 'Movie Night' details: private theater, scheduled from 1701300000000 to 1701310000000."], "query": "Send it to dave@example.com with subject \"Movie Night Details\".", "rewrited_query": "Send Displaying 'Movie Night' details: private theater, scheduled from 1701300000000 to 1701310000000. to dave@example.com with subject \"Movie Night Details\".", "answer": {"plan": "send_email", "arguments": {"to": "dave@example.com", "subject": "Movie Night Details", "body": "Displaying 'Movie Night' details: private theater, scheduled from 1701300000000 to 1701310000000."}}, "unique_idx": "ACTION_INSERT_EVENT-449-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please insert the event 'Gardening Workshop', which is a hands-on session on sustainable gardening practices. It will take place at Community Garden, starting at 1701400000000 and ending at 1701405400000. -> Great! I've added 'Gardening Workshop' at Community Garden, running from 1701400000000 to 1701405400000. content://calender/event/5", "turn 2: Let me see content://calender/event/5. -> Showing 'Gardening Workshop' event: Community Garden, from 1701400000000 to 1701405400000."], "query": "Email the details to susan@example.com.", "rewrited_query": "Email Showing 'Gardening Workshop' event: Community Garden, from 1701400000000 to 1701405400000. to susan@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "susan@example.com", "subject": "Gardening Workshop", "body": "Showing 'Gardening Workshop' event: Community Garden, from 1701400000000 to 1701405400000."}}, "unique_idx": "ACTION_INSERT_EVENT-450-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please create a 'Morning Briefing' event for a team update meeting at the main office. It starts at 1701500000000 and ends at 1701501800000. -> I've scheduled 'Morning Briefing' at the main office from 1701500000000 to 1701501800000. content://calender/event/6", "turn 2: Can you show content://calender/event/6? -> Here's the 'Morning Briefing' event: main office, scheduled from 1701500000000 to 1701501800000."], "query": "Email this to my assistant at assistant@example.com.", "rewrited_query": "Email Here's the 'Morning Briefing' event: main office, scheduled from 1701500000000 to 1701501800000. to my assistant at assistant@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "assistant@example.com", "subject": "Morning Briefing", "body": "Here's the 'Morning Briefing' event: main office, scheduled from 1701500000000 to 1701501800000."}}, "unique_idx": "ACTION_INSERT_EVENT-451-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Schedule a 'Weekly Sync' meeting on Zoom to discuss project progress. It should kick off at 1701600000000 and wrap up at 1701603600000. -> 'Weekly Sync' is now scheduled on Zoom from 1701600000000 to 1701603600000. content://calender/event/7", "turn 2: View content://calender/event/7 event. -> Displaying 'Weekly Sync' details: Zoom, from 1701600000000 to 1701603600000."], "query": "Email the details to my team lead at teamlead@example.com.", "rewrited_query": "Email Displaying 'Weekly Sync' details: Zoom, from 1701600000000 to 1701603600000. to my team lead at teamlead@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "teamlead@example.com", "subject": "Weekly Sync", "body": "Displaying 'Weekly Sync' details: Zoom, from 1701600000000 to 1701603600000."}}, "unique_idx": "ACTION_INSERT_EVENT-452-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Add an event for a 'Yoga Session' focused on relaxation and flexibility. It begins at 1701700000000 and ends at 1701701800000. -> Added 'Yoga Session' from 1701700000000 to 1701701800000. content://calender/event/8", "turn 2: Can I see content://calender/event/8? -> Showing the details for 'Yoga Session': from 1701700000000 to 1701701800000."], "query": "Email it to fitnessgroup@example.com.", "rewrited_query": "Email Showing the details for 'Yoga Session': from 1701700000000 to 1701701800000. to fitnessgroup@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "fitnessgroup@example.com", "subject": "Yoga Session", "body": "Showing the details for 'Yoga Session': from 1701700000000 to 1701701800000."}}, "unique_idx": "ACTION_INSERT_EVENT-453-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need to insert a 'Board Meeting' event with the purpose of discussing quarterly reports. It'll be held at the Conference Room B and run from 1701800000000 until 1701807200000. -> I've added 'Board Meeting' in Conference Room B, scheduled from 1701800000000 to 1701807200000. content://calender/event/9", "turn 2: Show content://calender/event/9 event. -> Here are the details for the 'Board Meeting' event: Conference Room B, scheduled from 1701800000000 to 1701807200000."], "query": "Email those details to ceo@example.com.", "rewrited_query": "Email Here are the details for the 'Board Meeting' event: Conference Room B, scheduled from 1701800000000 to 1701807200000. to ceo@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "ceo@example.com", "subject": "Board Meeting", "body": "Here are the details for the 'Board Meeting' event: Conference Room B, scheduled from 1701800000000 to 1701807200000."}}, "unique_idx": "ACTION_INSERT_EVENT-454-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you add my 'Doctor Appointment' scheduled at the City Clinic? Appointment starts at 1701900000000 and ends at 1701903600000. -> 'Doctor Appointment' at City Clinic is scheduled from 1701900000000 to 1701903600000. content://calender/event/10", "turn 2: Can you show me content://calender/event/10 appointment? -> Displaying 'Doctor Appointment' event details: City Clinic, from 1701900000000 to 1701903600000."], "query": "Send it to my wife at wife@example.com", "rewrited_query": "Send Displaying 'Doctor Appointment' event details: City Clinic, from 1701900000000 to 1701903600000. to my wife at wife@example.com", "answer": {"plan": "send_email", "arguments": {"to": "wife@example.com", "subject": "Doctor Appointment", "body": "Event details: City Clinic, from 1701900000000 to 1701903600000."}}, "unique_idx": "ACTION_INSERT_EVENT-455-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Kindly schedule a 'Holiday Party' at Downtown Banquet Hall. The celebration will run from 1704000000000 to 1704007200000. -> OK, I've added 'Holiday Party' to your calendar for the celebration at Downtown Banquet Hall. The event is scheduled from 1704000000000 to 1704007200000. Event URI: content://calender/event/1", "turn 2: Can you display the event details of content://calender/event/1? -> Here are the details for the 'Holiday Party' event: It's scheduled at Downtown Banquet Hall from 1704000000000 to 1704007200000."], "query": "Take me there.", "rewrited_query": "Take me to Downtown Banquet Hall.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Downtown Banquet Hall"}}, "unique_idx": "ACTION_INSERT_EVENT-476-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please add an event for a 'Language Exchange' meetup. There is no specific location mentioned. It starts at 1704100000000 and ends at 1704103600000. -> I've scheduled 'Language Exchange' from 1704100000000 to 1704103600000. It's saved in your calendar. Event URI: content://calender/event/2", "turn 2: Show me the details for the event content://calender/event/2. -> Displaying event details: 'Language Exchange', scheduled from 1704100000000 to 1704103600000."], "query": "Navigate to that event location.", "rewrited_query": "Navigate to the Language Exchange event location.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Language Exchange event location"}}, "unique_idx": "ACTION_INSERT_EVENT-477-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Set up a 'Gymnastics Practice' session labeled as evening practice. It takes place from 1704200000000 to 1704205400000. -> Alright, 'Gymnastics Practice' evening session is on your calendar, running from 1704200000000 to 1704205400000. Event URI: content://calender/event/3", "turn 2: What are the specifics of the Gymnastics Practice event content://calender/event/3 I just scheduled? -> The Gymnastics Practice event details: Evening session, scheduled from 1704200000000 to 1704205400000."], "query": "Can you start navigation to it?", "rewrited_query": "Can you start navigation to the Gymnastics Practice event?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Gymnastics Practice event"}}, "unique_idx": "ACTION_INSERT_EVENT-478-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Insert a 'Sports Day' event for outdoor activities. It is scheduled to start at 1704300000000 and finish at 1704307200000. -> I've added 'Sports Day' to your calendar, for outdoor activities from 1704300000000 to 1704307200000. Event URI: content://calender/event/4", "turn 2: Display the details of the Sports Day event content://calender/event/4 I just created. -> Here are the details for 'Sports Day': It's scheduled for outdoor activities from 1704300000000 to 1704307200000."], "query": "Please navigate me there.", "rewrited_query": "Please navigate me to the Sports Day.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Sports Day"}}, "unique_idx": "ACTION_INSERT_EVENT-479-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please arrange a 'Meetup: Startup Founders' event at the Innovation Hub. The event runs from 1704400000000 to 1704403600000. -> I've scheduled 'Meetup: Startup Founders' at the Innovation Hub from 1704400000000 to 1704403600000. Event URI: content://calender/event/5", "turn 2: Could you show me the event details for Meetup: Startup Founders content://calender/event/5? -> The 'Meetup: Startup Founders' event is scheduled at the Innovation Hub from 1704400000000 to 1704403600000."], "query": "Get directions to there.", "rewrited_query": "Get directions to the Innovation Hub.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Innovation Hub"}}, "unique_idx": "ACTION_INSERT_EVENT-480-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Schedule a 'Webinar on Cybersecurity' to be held on Teams. It starts at 1704500000000 and concludes at 1704503600000. -> OK, I've scheduled 'Webinar on Cybersecurity' on Teams from 1704500000000 to 1704503600000. Event URI: content://calender/event/6", "turn 2: Can I see the specifics of the Webinar on Cybersecurity content://calender/event/6? -> The 'Webinar on Cybersecurity' is scheduled on Teams from 1704500000000 to 1704503600000."], "query": "Could you navigate me to that location?", "rewrited_query": "Could you navigate me to Teams?", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Teams"}}, "unique_idx": "ACTION_INSERT_EVENT-481-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to set up a 'Research Seminar' at University Hall to discuss recent findings. It begins at 1704600000000 and ends at 1704607200000. -> Got it. I've added 'Research Seminar' at University Hall to your calendar. It will run from 1704600000000 to 1704607200000. Event URI: content://calender/event/7", "turn 2: What are the details of the Research Seminar content://calender/event/7? -> Displaying 'Research Seminar' details: University Hall, from 1704600000000 to 1704607200000."], "query": "Navigate to that location.", "rewrited_query": "Navigate to University Hall.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "University Hall"}}, "unique_idx": "ACTION_INSERT_EVENT-482-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Add an event for a 'Coding Bootcamp' where participants learn to code fast. The session will be held online from 1704800000000 to 1704805400000. -> 'Coding Bootcamp' scheduled online from 1704800000000 to 1704805400000. It's now on your calendar. Event URI: content://calender/event/8", "turn 2: Show me the information for content://calender/event/8. -> The 'Coding Bootcamp' is scheduled online from 1704800000000 to 1704805400000."], "query": "Set a navigation to it.", "rewrited_query": "Set a navigation to the Coding Bootcamp.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Coding Bootcamp"}}, "unique_idx": "ACTION_INSERT_EVENT-483-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Set up a 'Charity Run' event, a 5K run for charity at City Park. It starts at 1705100000000 and ends at 1705105400000. -> OK, the 'Charity Run' at City Park has been scheduled from 1705100000000 to 1705105400000. Event URI: content://calender/event/10", "turn 2: Let me see the details for content://calender/event/10. -> Showing 'Charity Run' details: At City Park, from 1705100000000 to 1705105400000."], "query": "Let's get directions to there.", "rewrited_query": "Let's get directions to City Park.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "City Park"}}, "unique_idx": "ACTION_INSERT_EVENT-485-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Kindly schedule a 'Holiday Party' at Downtown Banquet Hall. The celebration will run from 1704000000000 to 1704007200000. -> OK, I've added 'Holiday Party' to your calendar for the celebration at Downtown Banquet Hall. The event is scheduled from 1704000000000 to 1704007200000. Event URI: content://calender/event/1", "turn 2: Can you display the event details of content://calender/event/1? -> Here are the details for the 'Holiday Party' event: It's scheduled at Downtown Banquet Hall from 1704000000000 to 1704007200000."], "query": "Send this to my colleague at work@example.com.", "rewrited_query": "Send Here are the details for the 'Holiday Party' event: It's scheduled at Downtown Banquet Hall from 1704000000000 to 1704007200000. to my colleague at work@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "work@example.com", "subject": "Holiday Party", "body": "Here are the details: It's scheduled at Downtown Banquet Hall from 1704000000000 to 1704007200000."}}, "unique_idx": "ACTION_INSERT_EVENT-476-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please add an event for a 'Language Exchange' meetup. There is no specific location mentioned. It starts at 1704100000000 and ends at 1704103600000. -> I've scheduled 'Language Exchange' from 1704100000000 to 1704103600000. It's saved in your calendar. Event URI: content://calender/event/2", "turn 2: Show me the details for the event content://calender/event/2. -> Displaying event details: 'Language Exchange', scheduled from 1704100000000 to 1704103600000."], "query": "Email this to my friend at friend@example.com.", "rewrited_query": "Email Displaying event details: 'Language Exchange', scheduled from 1704100000000 to 1704103600000. to my friend at friend@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "friend@example.com", "subject": "Language Exchange", "body": "Event details: scheduled from 1704100000000 to 1704103600000."}}, "unique_idx": "ACTION_INSERT_EVENT-477-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Set up a 'Gymnastics Practice' session labeled as evening practice. It takes place from 1704200000000 to 1704205400000. -> Alright, 'Gymnastics Practice' evening session is on your calendar, running from 1704200000000 to 1704205400000. Event URI: content://calender/event/3", "turn 2: What are the specifics of the Gymnastics Practice event content://calender/event/3 I just scheduled? -> The Gymnastics Practice event details: Evening session, scheduled from 1704200000000 to 1704205400000."], "query": "Email this to my coach at coach@example.com.", "rewrited_query": "Email The Gymnastics Practice event details: Evening session, scheduled from 1704200000000 to 1704205400000. to my coach at coach@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "coach@example.com", "subject": "Gymnastics Practice", "body": "Event details: Evening session, scheduled from 1704200000000 to 1704205400000."}}, "unique_idx": "ACTION_INSERT_EVENT-478-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Insert a 'Sports Day' event for outdoor activities. It is scheduled to start at 1704300000000 and finish at 1704307200000. -> I've added 'Sports Day' to your calendar, for outdoor activities from 1704300000000 to 1704307200000. Event URI: content://calender/event/4", "turn 2: Display the details of the Sports Day event content://calender/event/4 I just created. -> Here are the details for 'Sports Day': It's scheduled for outdoor activities from 1704300000000 to 1704307200000."], "query": "Email the details to team@example.com.", "rewrited_query": "Email Here are the details for 'Sports Day': It's scheduled for outdoor activities from 1704300000000 to 1704307200000. to team@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "team@example.com", "subject": "Sports Day", "body": "Here are the details: It's scheduled for outdoor activities from 1704300000000 to 1704307200000."}}, "unique_idx": "ACTION_INSERT_EVENT-479-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please arrange a 'Meetup: Startup Founders' event at the Innovation Hub. The event runs from 1704400000000 to 1704403600000. -> I've scheduled 'Meetup: Startup Founders' at the Innovation Hub from 1704400000000 to 1704403600000. Event URI: content://calender/event/5", "turn 2: Could you show me the event details for Meetup: Startup Founders content://calender/event/5? -> The 'Meetup: Startup Founders' event is scheduled at the Innovation Hub from 1704400000000 to 1704403600000."], "query": "Email it to partner@example.com.", "rewrited_query": "Email The 'Meetup: Startup Founders' event is scheduled at the Innovation Hub from 1704400000000 to 1704403600000. to partner@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "partner@example.com", "subject": "Meetup: Startup Founders", "body": "The event is scheduled at the Innovation Hub from 1704400000000 to 1704403600000."}}, "unique_idx": "ACTION_INSERT_EVENT-480-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Schedule a 'Webinar on Cybersecurity' to be held on Teams. It starts at 1704500000000 and concludes at 1704503600000. -> OK, I've scheduled 'Webinar on Cybersecurity' on Teams from 1704500000000 to 1704503600000. Event URI: content://calender/event/6", "turn 2: Can I see the specifics of the Webinar on Cybersecurity content://calender/event/6? -> The 'Webinar on Cybersecurity' is scheduled on Teams from 1704500000000 to 1704503600000."], "query": "Email this information to my boss at boss@example.com.", "rewrited_query": "Email The 'Webinar on Cybersecurity' is scheduled on Teams from 1704500000000 to 1704503600000. to my boss at boss@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "boss@example.com", "subject": "Webinar on Cybersecurity", "body": "The webinar is scheduled on Teams from 1704500000000 to 1704503600000."}}, "unique_idx": "ACTION_INSERT_EVENT-481-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need to set up a 'Research Seminar' at University Hall to discuss recent findings. It begins at 1704600000000 and ends at 1704607200000. -> Got it. I've added 'Research Seminar' at University Hall to your calendar. It will run from 1704600000000 to 1704607200000. Event URI: content://calender/event/7", "turn 2: What are the details of the Research Seminar content://calender/event/7? -> Displaying 'Research Seminar' details: University Hall, from 1704600000000 to 1704607200000."], "query": "Email the details to professor@example.com.", "rewrited_query": "Email Displaying 'Research Seminar' details: University Hall, from 1704600000000 to 1704607200000. to professor@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "professor@example.com", "subject": "Research Seminar", "body": "Event details: University Hall, from 1704600000000 to 1704607200000."}}, "unique_idx": "ACTION_INSERT_EVENT-482-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Add an event for a 'Coding Bootcamp' where participants learn to code fast. The session will be held online from 1704800000000 to 1704805400000. -> 'Coding Bootcamp' scheduled online from 1704800000000 to 1704805400000. It's now on your calendar. Event URI: content://calender/event/8", "turn 2: Show me the information for content://calender/event/8. -> The 'Coding Bootcamp' is scheduled online from 1704800000000 to 1704805400000."], "query": "Email this to student@example.com.", "rewrited_query": "Email The 'Coding Bootcamp' is scheduled online from 1704800000000 to 1704805400000. to student@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "student@example.com", "subject": "Coding Bootcamp", "body": "The event is scheduled online from 1704800000000 to 1704805400000."}}, "unique_idx": "ACTION_INSERT_EVENT-483-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need to add a 'Finance Meeting' to discuss quarterly results in the Office Boardroom. It commences at 1705000000000 and ends at 1705003600000. -> I've added the 'Finance Meeting' in the Office Boardroom to your calendar from 1705000000000 to 1705003600000. Event URI: content://calender/event/9", "turn 2: Show me content://calender/event/9 event. -> The 'Finance Meeting' is in the Office Boardroom, scheduled from 1705000000000 to 1705003600000."], "query": "Email this to manager@example.com.", "rewrited_query": "Email The 'Finance Meeting' is in the Office Boardroom, scheduled from 1705000000000 to 1705003600000. to manager@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "manager@example.com", "subject": "Finance Meeting", "body": "The meeting is in the Office Boardroom, scheduled from 1705000000000 to 1705003600000."}}, "unique_idx": "ACTION_INSERT_EVENT-484-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Set up a 'Charity Run' event, a 5K run for charity at City Park. It starts at 1705100000000 and ends at 1705105400000. -> OK, the 'Charity Run' at City Park has been scheduled from 1705100000000 to 1705105400000. Event URI: content://calender/event/10", "turn 2: Let me see the details for content://calender/event/10. -> Showing 'Charity Run' details: At City Park, from 1705100000000 to 1705105400000."], "query": "Email it to volunteer@example.com.", "rewrited_query": "Email Showing 'Charity Run' details: At City Park, from 1705100000000 to 1705105400000. to volunteer@example.com.", "answer": {"plan": "send_email", "arguments": {"to": "volunteer@example.com", "subject": "Charity Run", "body": "Charity Run details: At City Park, from 1705100000000 to 1705105400000."}}, "unique_idx": "ACTION_INSERT_EVENT-485-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Could you add a 'Podcast Recording' session to record the new episode at the Studio? It starts at 1705200000000 and ends at 1705203600000. -> OK, I've added 'Podcast Recording' at the Studio to your calendar. It starts on January 14, 2024, at 6:00:00 PM and ends on January 14, 2024, at 7:00:00 PM. Here's the URI: content://calender/event/1", "turn 2: Can you show me the details of content://calender/event/1 event? -> Okay, displaying the details for 'Podcast Recording' at the Studio on January 14, 2024, from 6:00 PM to 7:00 PM."], "query": "Navigate me to that place.", "rewrited_query": "Navigate me to the Studio.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "the Studio"}}, "unique_idx": "ACTION_INSERT_EVENT-486-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: I need to schedule a 'Customer Support Training' session at the Training Center. The event will run from 1705300000000 to 1705303600000. -> I've scheduled 'Customer Support Training' at the Training Center from January 15, 2024, 10:00:00 AM to January 15, 2024, 11:00:00 AM. You can find it here: content://calender/event/2", "turn 2: Could you display content://calender/event/2 event? -> Alright, showing you the 'Customer Support Training' event details at the Training Center from 10:00 AM to 11:00 AM on January 15, 2024."], "query": "Take me there.", "rewrited_query": "Take me to the Training Center.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Training Center"}}, "unique_idx": "ACTION_INSERT_EVENT-487-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Please add a 'Stress Relief Workshop' event focused on meditation and relaxation exercises. It begins at 1705400000000 and ends at 1705405400000. -> Okay, I've added 'Stress Relief Workshop' to your calendar for January 16, 2024, from 2:00:00 PM to 3:30:00 PM, focusing on meditation and relaxation exercises. The event URI is content://calender/event/3", "turn 2: Can you view content://calender/event/3 on the calendar? -> No problem! Displaying 'Stress Relief Workshop' details: January 16, 2024, 2:00 PM - 3:30 PM, focusing on meditation and relaxation exercises."], "query": "Okay, start navigation to that location.", "rewrited_query": "Okay, start navigation to the location of Stress Relief Workshop.", "answer": {"plan": "ACTION_NAVIGATE_TO_LOCATION", "arguments": {"location": "Stress Relief Workshop"}}, "unique_idx": "ACTION_INSERT_EVENT-488-ACTION_VIEW_EVENT-1-ACTION_NAVIGATE_TO_LOCATION-1"}
{"conversation_history": ["turn 1: Could you add a 'Podcast Recording' session to record the new episode at the Studio? It starts at 1705200000000 and ends at 1705203600000. -> OK, I've added 'Podcast Recording' at the Studio to your calendar. It starts on January 14, 2024, at 6:00:00 PM and ends on January 14, 2024, at 7:00:00 PM. Here's the URI: content://calender/event/1", "turn 2: Can you show me the details of content://calender/event/1 event? -> Okay, displaying the details for 'Podcast Recording' at the Studio on January 14, 2024, from 6:00 PM to 7:00 PM."], "query": "Email these details to the producer, and the address is producer@example.com", "rewrited_query": "Email the details for 'Podcast Recording' at the Studio on January 14, 2024, from 6:00 PM to 7:00 PM to the producer, and the address is producer@example.com", "answer": {"plan": "send_email", "arguments": {"to": "producer@example.com", "subject": "Podcast Recording", "body": "Podcast Recording details: at the Studio on January 14, 2024, from 6:00 PM to 7:00 PM."}}, "unique_idx": "ACTION_INSERT_EVENT-486-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I need to schedule a 'Customer Support Training' session at the Training Center. The event will run from 1705300000000 to 1705303600000. -> I've scheduled 'Customer Support Training' at the Training Center from January 15, 2024, 10:00:00 AM to January 15, 2024, 11:00:00 AM. You can find it here: content://calender/event/2", "turn 2: Could you display content://calender/event/2 event? -> Alright, showing you the 'Customer Support Training' event details at the Training Center from 10:00 AM to 11:00 AM on January 15, 2024."], "query": "Email it to hr@company.com.", "rewrited_query": "Email the 'Customer Support Training' event details at the Training Center from 10:00 AM to 11:00 AM on January 15, 2024 to hr@company.com.", "answer": {"plan": "send_email", "arguments": {"to": "hr@company.com", "subject": "Customer Support Training", "body": "Customer Support Training event details at the Training Center from 10:00 AM to 11:00 AM on January 15, 2024."}}, "unique_idx": "ACTION_INSERT_EVENT-487-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: Please add a 'Stress Relief Workshop' event focused on meditation and relaxation exercises. It begins at 1705400000000 and ends at 1705405400000. -> Okay, I've added 'Stress Relief Workshop' to your calendar for January 16, 2024, from 2:00:00 PM to 3:30:00 PM, focusing on meditation and relaxation exercises. The event URI is content://calender/event/3", "turn 2: Can you view content://calender/event/3 on the calendar? -> No problem! Displaying 'Stress Relief Workshop' details: January 16, 2024, 2:00 PM - 3:30 PM, focusing on meditation and relaxation exercises."], "query": "Can you email it to wellnessgroup@example.com?", "rewrited_query": "Can you email 'Stress Relief Workshop' details: January 16, 2024, 2:00 PM - 3:30 PM, focusing on meditation and relaxation exercises to wellnessgroup@example.com?", "answer": {"plan": "send_email", "arguments": {"to": "wellnessgroup@example.com", "subject": "Stress Relief Workshop", "body": "Stress Relief Workshop details: January 16, 2024, 2:00 PM - 3:30 PM, focusing on meditation and relaxation exercises"}}, "unique_idx": "ACTION_INSERT_EVENT-488-ACTION_VIEW_EVENT-1-send_email-1"}
{"conversation_history": ["turn 1: I'd like to call 1-800-432-1000. Please dial it for me. -> Dialing 1-800-432-1000 now.", "turn 2: Show me my call history. -> Here's your call history: 1-800-432-1000 (Outgoing) - Today at 1:00 PM."], "query": "Call them again.", "rewrited_query": "Call 1-800-432-1000 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "1-800-432-1000"}}, "unique_idx": "dial-929-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Could you please make a call to 010-1234-5678? -> Making a call to 010-1234-5678.", "turn 2: Can I view my recent call history? -> Your recent call history: 010-1234-5678 (Outgoing) - Today at 2:00 PM."], "query": "Call that number.", "rewrited_query": "Call 010-1234-5678 number.", "answer": {"plan": "dial", "arguments": {"phone_number": "010-1234-5678"}}, "unique_idx": "dial-930-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Connect me with 212-555-0198 right away. -> Connecting you to 212-555-0198.", "turn 2: Let me check my call log. -> Here's a look at your call log: 212-555-0198 (Outgoing) - Today at 3:00 PM."], "query": "Call that one again.", "rewrited_query": "Call 212-555-0198 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "212-555-0198"}}, "unique_idx": "dial-931-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I need to reach someone; dial 044-668-2354 immediately. -> Calling 044-668-2354 now.", "turn 2: Show recent calls. -> Displaying recent calls: 044-668-2354 (Outgoing) - Just now."], "query": "Call that number back, please.", "rewrited_query": "Call 044-668-2354 back, please.", "answer": {"plan": "dial", "arguments": {"phone_number": "044-668-2354"}}, "unique_idx": "dial-932-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Would you mind calling 020-7946-0018 for me? -> Sure, calling 020-7946-0018.", "turn 2: Could you show me my call log? -> Call log: 020-7946-0018 (Outgoing) - Yesterday, 6:00 PM."], "query": "Give them a call.", "rewrited_query": "Give 020-7946-0018 a call.", "answer": {"plan": "dial", "arguments": {"phone_number": "020-7946-0018"}}, "unique_idx": "dial-933-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Get me in touch with 02-123-4567. Please call this number. -> Initiating a call to 02-123-4567.", "turn 2: Can you show me my call log? -> Here's your call log: 02-123-4567 (Outgoing) - Yesterday at 7:00 PM."], "query": "Try calling that.", "rewrited_query": "Try calling 02-123-4567.", "answer": {"plan": "dial", "arguments": {"phone_number": "02-123-4567"}}, "unique_idx": "dial-934-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Call +91-9876543210 for me, please. -> Now dialing +91-9876543210.", "turn 2: Can I see my recent calls? -> Your recent calls: +91-9876543210 (Outgoing) - 2 days ago at 10:00 AM."], "query": "Please redial that number.", "rewrited_query": "Please redial +91-9876543210 number.", "answer": {"plan": "dial", "arguments": {"phone_number": "+91-9876543210"}}, "unique_idx": "dial-936-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I would like to ring up the number 303-555-0123; could you do that for me? -> Calling 303-555-0123.", "turn 2: Could you please display my call log? -> Here's your call log: 303-555-0123 (Outgoing) - Today, 10:00 AM; John Doe (Incoming) - Yesterday, 4:30 PM; Jane Smith (Missed) - 2 days ago, 2:00 PM."], "query": "Text Jane Smith 'Sorry I missed your call'.", "rewrited_query": "Text Jane Smith 'Sorry I missed your call'.", "answer": {"plan": "send_message", "arguments": {"to": "Jane Smith", "message": "Sorry I missed your call."}}, "unique_idx": "dial-937-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: Make a phone call to 555-1234. -> Okay, calling 555-1234.", "turn 2: Please present the call log. -> Okay, displaying call log: 555-1234 (Outgoing) - Today 9:00 AM; Unknown (Incoming) - Yesterday 6:00 PM; Pizza Place (Outgoing) - 3 days ago 7:00 PM."], "query": "Send a message to Unknown saying 'Who is this?'", "rewrited_query": "Send a message to Unknown saying 'Who is this?'", "answer": {"plan": "send_message", "arguments": {"to": "Unknown", "message": "Who is this?"}}, "unique_idx": "dial-938-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: Ring 800-123-4567 immediately, please. -> Ringing 800-123-4567 immediately.", "turn 2: I want to check if that call went through. Show me my call log. -> No problem! Here is your call history: 800-123-4567 (Outgoing) - Today at 11:15 AM; Dad (Incoming) - Yesterday at 6:00 PM; Work (Missed) - 2 days ago at 3:00 PM."], "query": "Can you send Dad a message saying 'I'll call you later'?", "rewrited_query": "Can you send Dad a message saying 'I'll call you later'?", "answer": {"plan": "send_message", "arguments": {"to": "Dad", "message": "I'll call you later"}}, "unique_idx": "dial-939-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: I require assistance; connect my call to 999-888-7777. -> Connecting you to 999-888-7777.", "turn 2: Let me view the last calls. -> Sure, displaying your recent call history: 999-888-7777 (Outgoing) - Today, 12:30 PM; Mom (Incoming) - Yesterday, 7:45 PM; Doctor's Office (Outgoing) - 3 days ago, 9:00 AM."], "query": "Send a message to Mom saying 'I'm running late'.", "rewrited_query": "Send a message to Mom saying 'I'm running late'.", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "I'm running late."}}, "unique_idx": "dial-940-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: I need to get in touch with the support center at 1800-222-333. -> Calling the support center at 1800-222-333.", "turn 2: Show me call log. -> Here's the call log: 1800-222-333 (Outgoing) - Today 1:00 PM; Sister (Incoming) - Yesterday 8:00 PM; Bank (Missed) - 4 days ago 10:00 AM."], "query": "Send a text to Sister saying 'Are you free to talk?'", "rewrited_query": "Send a text to Sister saying 'Are you free to talk?'", "answer": {"plan": "send_message", "arguments": {"to": "Sister", "message": "Are you free to talk?"}}, "unique_idx": "dial-941-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: Can you connect me to 646-123-4567? -> Connecting you to 646-123-4567.", "turn 2: Can I see my call history? -> No problem, the call history is as follows: 646-123-4567 (Outgoing) - Today at 2:00 PM; Friend (Incoming) - Yesterday at 9:00 PM; Grocery Store (Outgoing) - 5 days ago at 11:00 AM."], "query": "Send a message to Friend saying 'I'll call you back later'.", "rewrited_query": "Send a message to Friend saying 'I'll call you back later'.", "answer": {"plan": "send_message", "arguments": {"to": "Friend", "message": "I'll call you back later."}}, "unique_idx": "dial-942-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: Help me out and call the number 0208 123 4567. -> Calling 0208 123 4567 now.", "turn 2: Can I see the call log to check that calling 0208 123 4567? -> Certainly! Here is your recent call log: 0208 123 4567 (Outgoing) - Today at 3:00 PM; Client (Incoming) - 2 days ago at 10:00 AM; Restaurant (Outgoing) - 6 days ago at 1:00 PM."], "query": "Text Client 'Thanks for the call today'.", "rewrited_query": "Text Client 'Thanks for the call today'.", "answer": {"plan": "send_message", "arguments": {"to": "Client", "message": "Thanks for the call today."}}, "unique_idx": "dial-944-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: I'd like to chat with someone on 1(234)567-8901, so please dial it. -> Now dialing 1(234)567-8901.", "turn 2: Show me the recent calls. -> Here's your recent call log: 1(234)567-8901 (Outgoing) - Today, 4:00 PM; John (Incoming) - Yesterday, 10:00 AM; Meeting (Missed) - 1 week ago, 3:00 PM."], "query": "Send John a message saying 'I have a question for you'.", "rewrited_query": "Send John a message saying 'I have a question for you'.", "answer": {"plan": "send_message", "arguments": {"to": "John", "message": "I have a question for you."}}, "unique_idx": "dial-945-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: For assistance, please call 321-654-0987. -> Initiating call to 321-654-0987.", "turn 2: What does the call history say? -> The call history shows: 321-654-0987 (Outgoing) - Today 5:00 PM; Supervisor (Incoming) - Yesterday 11:00 AM; Pharmacy (Outgoing) - 1 week ago 4:00 PM."], "query": "Text Supervisor 'Need to talk ASAP'.", "rewrited_query": "Text Supervisor 'Need to talk ASAP'.", "answer": {"plan": "send_message", "arguments": {"to": "Supervisor", "message": "Need to talk ASAP."}}, "unique_idx": "dial-946-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: Please make a call to the following number: 011-2233-4455. -> Calling 011-2233-4455.", "turn 2: Display my call log. -> Okay, displaying the call log now: 011-2233-4455 (Outgoing) - Today, 6:00 PM; Sister (Incoming) - Yesterday, 12:00 PM; Plumber (Missed) - Last Week, 5:00 PM."], "query": "Send a message to Plumber saying 'Can you call me back when you get a chance?'", "rewrited_query": "Send a message to Plumber saying 'Can you call me back when you get a chance?'", "answer": {"plan": "send_message", "arguments": {"to": "Plumber", "message": "Can you call me back when you get a chance?"}}, "unique_idx": "dial-947-ACTION_VIEW_CALL_LOG-1-send_message-1"}
{"conversation_history": ["turn 1: I want to speak with customer service; please dial 800.765.4321. -> Dialing 800.765.4321 for you.", "turn 2: I want to see dialing 800.765.4321 in the call history. -> Here's your call history: Customer Service 800-765-4321 (Outgoing) - Today 10:30 AM."], "query": "Call that number again.", "rewrited_query": "Call 800-765-4321 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "800-765-4321"}}, "unique_idx": "dial-948-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Fire up the phone app and dial +49-89-636-48018. -> Calling +49-89-636-48018.", "turn 2: Bring up the call log. -> Okay, displaying your call log: +49-89-636-48018 (Outgoing) - Today 3:17 PM; John Doe +1-555-1234 (Incoming) - Yesterday 9:00 AM; Jane Smith +1-555-5678 (Missed) - Yesterday 6:22 PM."], "query": "Call the first number again.", "rewrited_query": "Call +49-89-636-48018 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "+49-89-636-48018"}}, "unique_idx": "dial-949-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I need a call placed on 06-1234567. -> Placing a call to 06-1234567.", "turn 2: Can you show the call log? -> Here's your recent call history: 06-1234567 (Outgoing) - Today 11:48 AM; Mom (Incoming) - Yesterday 7:21 PM; Work +442079460000 (Outgoing) - Yesterday 10:00 AM."], "query": "Redial 06-1234567.", "rewrited_query": "Redial 06-1234567.", "answer": {"plan": "dial", "arguments": {"phone_number": "06-1234567"}}, "unique_idx": "dial-950-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Could you ring the number 07400 123456 for me? -> Ringing 07400 123456.", "turn 2: I want to see the list of my calls. -> Alright, here's your call list: 07400 123456 (Outgoing) - Today 2:50 PM; Dad (Incoming) - Today 8:00 AM; Sarah (Missed) - Yesterday 4:30 PM."], "query": "Call 07400 123456 again.", "rewrited_query": "Call 07400 123456 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "07400 123456"}}, "unique_idx": "dial-951-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Please call me now at 07700-900123. -> Dialing 07700-900123 now.", "turn 2: Display the recent calls made. -> Displaying your recent calls: 07700-900123 (Outgoing) - Just now; John Smith +1-555-2468 (Incoming) - 2 hours ago; Jane Doe +1-555-1357 (Outgoing) - Yesterday."], "query": "Call that number again.", "rewrited_query": "Call 07700-900123 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "07700-900123"}}, "unique_idx": "dial-952-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I wish to speak with someone on 02 1234 5678. Can you call that number? -> Calling 02 1234 5678.", "turn 2: Show me the call history. -> Here's your call history: 02 1234 5678 (Outgoing) - Today 4:00 PM; Sister (Incoming) - Yesterday 6:00 PM; Unknown Number (Missed) - 2 days ago."], "query": "Dial 02 1234 5678.", "rewrited_query": "Dial 02 1234 5678.", "answer": {"plan": "dial", "arguments": {"phone_number": "02 1234 5678"}}, "unique_idx": "dial-953-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Connect me to the office at 444-555-6666. -> Calling 444-555-6666 now.", "turn 2: Can I see my call log to check if the call to the office at 444-555-6666 went through? -> Okay, here's your call log: Office 444-555-6666 (Outgoing) - Today 11:05 AM; Mom (Incoming) - Today 8:00 AM; John (Outgoing) - Yesterday 5:00 PM."], "query": "Call the office again.", "rewrited_query": "Call 444-555-6666 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "444-555-6666"}}, "unique_idx": "dial-954-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I need to arrange a call to 202-555-0143, please do so. -> Calling 202-555-0143 now.", "turn 2: Could you display my call log, please? -> Certainly, displaying your call log now: 202-555-0143 (Outgoing) - just now; Jane Doe (Incoming) - Yesterday 3:00 PM; Unknown Number (Missed) - Last Week."], "query": "Call 202-555-0143 again please.", "rewrited_query": "Call 202-555-0143 again please.", "answer": {"plan": "dial", "arguments": {"phone_number": "202-555-0143"}}, "unique_idx": "dial-956-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Could you make the call for me using 307-867-5309? -> Initiating call to 307-867-5309.", "turn 2: What's my recent call history? -> Your recent call history: 307-867-5309 (Outgoing) - Today at 1:10 PM; Dad (Incoming) - Yesterday at 6:00 PM; Verizon (Outgoing) - Last week."], "query": "Dial that number again.", "rewrited_query": "Dial 307-867-5309 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "307-867-5309"}}, "unique_idx": "dial-957-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Can you connect directly to 13-6500 in Australia? -> Connecting to 13-6500.", "turn 2: After the call to 13-6500 in Australia, can you show me my call log? -> Here is your call log: 13-6500 (Outgoing) - Today 5:20 PM; Mum (Incoming) - Today 9:00 AM; Bank (Outgoing) - Yesterday 2:00 PM."], "query": "Can you call 13-6500?", "rewrited_query": "Can you call 13-6500?", "answer": {"plan": "dial", "arguments": {"phone_number": "13-6500"}}, "unique_idx": "dial-960-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I want to speak with the hotel; can you dial +353-1-234-5678? -> Calling +353-1-234-5678.", "turn 2: Please pull up the call history. -> Sure, here's your recent call log: +353-1-234-5678 (Outgoing) - Today at [Time]."], "query": "Call that number again.", "rewrited_query": "Call +353-1-234-5678 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "+353-1-234-5678"}}, "unique_idx": "dial-961-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Please make a call to 555-0001. -> Calling 555-0001.", "turn 2: Can you display my recent calls? -> Okay, displaying your recent calls. You called 555-0001 (Outgoing) - Today at [Time]."], "query": "Could you call that number back?", "rewrited_query": "Could you call 555-0001 back?", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0001"}}, "unique_idx": "dial-963-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Could you try calling 555-0002 for me right away? -> Now dialing 555-0002.", "turn 2: Did that call to 555-0002 go through? -> Here's your call history: 555-0002 (Outgoing) - Today at [Time]."], "query": "Please, redial that number.", "rewrited_query": "Please, redial 555-0002.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0002"}}, "unique_idx": "dial-964-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I need to chat with someone; please dial 555-0003. -> Calling 555-0003 now.", "turn 2: Can I see the call log, please? -> Certainly, pulling up your call log now. The most recent call was to 555-0003 (Outgoing) - Today at [Time]."], "query": "Can you dial that number for me, please?", "rewrited_query": "Can you dial 555-0003 for me, please?", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0003"}}, "unique_idx": "dial-965-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Call this number 555-0007 as soon as possible. -> I'm dialing 555-0007 for you.", "turn 2: What does my call log look like? -> Your call log includes: 555-0007 (Outgoing) - Today at [Time]."], "query": "Call it again.", "rewrited_query": "Call 555-0007 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0007"}}, "unique_idx": "dial-967-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I'd like to speak with someone at 555-0008, can you dial it? -> Calling 555-0008.", "turn 2: Can you pull up my recent calls? -> Here are your recent calls. You have a call to 555-0008 (Outgoing) - Today at [Time]."], "query": "Please dial it.", "rewrited_query": "Please dial 555-0008.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0008"}}, "unique_idx": "dial-968-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Can you ring 555-0010 for me? -> Ringing 555-0010 now.", "turn 2: Could you display my call log? -> Displaying call log: 555-0010 (Outgoing) - Today at [Time]."], "query": "Dial that one.", "rewrited_query": "Dial 555-0010.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0010"}}, "unique_idx": "dial-969-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Kindly connect me with the number 555-0011. -> Connecting to 555-0011.", "turn 2: What's in my call log? -> Your call log contains: 555-0011 (Outgoing) - Today at [Time]."], "query": "Please call that number.", "rewrited_query": "Please call 555-0011.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0011"}}, "unique_idx": "dial-970-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Dial this number for me: 555-0014. -> Okay, dialing 555-0014.", "turn 2: Can you show the call log to me? -> Showing the call log: 555-0014 (Outgoing) - Today at [Time]."], "query": "Can you call that number again?", "rewrited_query": "Can you call 555-0014 again?", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0014"}}, "unique_idx": "dial-972-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Help me out by calling 555-0015 immediately. -> Immediately calling 555-0015.", "turn 2: Display recent calls. -> Here are your recent calls. Includes 555-0015 (Outgoing) - Today at [Time]."], "query": "Call that.", "rewrited_query": "Call 555-0015.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0015"}}, "unique_idx": "dial-973-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: I need to make a call to +86 10 1234 5678. -> Now dialing +86 10 1234 5678.", "turn 2: Did the call to +86 10 1234 5678 go through? -> Checking your call history: +86 10 1234 5678 (Outgoing) - Today at 5:00 PM; Boss (Incoming) - Yesterday at 10:00 AM; Unknown Number (Missed) - Last Monday at 4:00 PM."], "query": "Call back Unknown Number.", "rewrited_query": "Call back Unknown Number.", "answer": {"plan": "dial", "arguments": {"phone_number": "Unknown Number"}}, "unique_idx": "dial-984-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Connect me to +39-06-12345678, please. -> Connecting you to +39-06-12345678.", "turn 2: Can I see the call log to confirm that? -> Here's your call log: +39-06-12345678 (Outgoing) - Today, 10:30 AM."], "query": "Call that number again.", "rewrited_query": "Call +39-06-12345678 again.", "answer": {"plan": "dial", "arguments": {"phone_number": "+39-06-12345678"}}, "unique_idx": "dial-985-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: 请拨打电话 555-0035. -> 正在拨打 555-0035.", "turn 2: Please show my recent calls. -> Okay, here's your recent call history: 555-0035 (Outgoing) - Today at 2:48 PM; John Doe +1-555-1234 (Incoming) - Yesterday at 6:12 PM."], "query": "Call 555-0035 back.", "rewrited_query": "Call 555-0035 back.", "answer": {"plan": "dial", "arguments": {"phone_number": "555-0035"}}, "unique_idx": "dial-992-ACTION_VIEW_CALL_LOG-1-dial-1"}
{"conversation_history": ["turn 1: Hey, can you send an email to alice@example.com regarding the quarterly meeting updates? -> No problem, I've prepared an email to alice@example.com with the subject 'quarterly meeting updates'. Ready to send!", "turn 2: Can you view sent emails? -> Okay, I see you sent an email to alice@example.com with the subject 'quarterly meeting updates'."], "query": "Could you send her the meeting minutes as well?", "rewrited_query": "Could you send alice@example.com the meeting minutes as well?", "answer": {"plan": "send_email", "arguments": {"to": "alice@example.com", "body": "the meeting minutes as well"}}, "unique_idx": "send_email-1218-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Compose a quick email to bob@company.com and mention that I'll call him later. -> Sure, I've drafted an email to bob@company.com saying 'I'll call him later'. Go ahead and send it?", "turn 2: Did the email to bob@company.com go through? View sent emails. -> Yes, the email to bob@company.com stating 'I'll call him later' was sent successfully."], "query": "Can you send him the meeting link now?", "rewrited_query": "Can you send bob@company.com the meeting link now?", "answer": {"plan": "send_email", "arguments": {"to": "bob@company.com", "body": "the meeting link now"}}, "unique_idx": "send_email-1219-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Draft an email to carol123@mail.com with the subject 'Report Submission' and attach the file report.pdf. -> Okay, email to carol123@mail.com with subject 'Report Submission' and attached file report.pdf is ready to go!", "turn 2: View sent emails -> Confirmed. The email to carol123@mail.com with the subject 'Report Submission' and attached file report.pdf has been sent."], "query": "Email her to confirm receipt.", "rewrited_query": "Email carol123@mail.com to confirm receipt.", "answer": {"plan": "send_email", "arguments": {"to": "carol123@mail.com", "body": "Confirm receipt."}}, "unique_idx": "send_email-1220-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Please send an email to kate@domain.com informing her about the policy updates. -> Alright, an email 'informing her about the policy updates' will be sent to kate@domain.com.", "turn 2: Can I see the email I just sent to kate@domain.com informing her about the policy updates? -> Yep, the email informing kate@domain.com about the policy updates is in your sent mail."], "query": "Send her a reminder to acknowledge the updates by Friday.", "rewrited_query": "Send kate@domain.com a reminder to acknowledge the updates by Friday.", "answer": {"plan": "send_email", "arguments": {"to": "kate@domain.com", "body": "Reminder to acknowledge the updates by Friday."}}, "unique_idx": "send_email-1228-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Email brian@university.edu with the subject 'Assignment Submission' and include a message that I'm submitting my assignment before the deadline. -> Email sent to brian@university.edu with the subject 'Assignment Submission'.", "turn 2: Can you show me the sent emails? -> I found the email to brian@university.edu with the subject 'Assignment Submission' in your sent items."], "query": "Send him my gratitude for the course.", "rewrited_query": "Send brian@university.edu my gratitude for the course.", "answer": {"plan": "send_email", "arguments": {"to": "brian@university.edu", "body": "My gratitude for the course."}}, "unique_idx": "send_email-1248-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Could you send an email to emily@designstudio.com and attach design_sketches.pdf? -> Okay, emailing emily@designstudio.com with the attachment design_sketches.pdf.", "turn 2: Can you show me my sent mail? -> I see the email you sent to emily@designstudio.com with the attachment design_sketches.pdf."], "query": "Send her a follow-up asking for her feedback.", "rewrited_query": "Send emily@designstudio.com a follow-up asking for her feedback.", "answer": {"plan": "send_email", "arguments": {"to": "emily@designstudio.com", "body": "Follow-up asking for her feedback."}}, "unique_idx": "send_email-1249-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Kindly send a quick email to henry@logistics.org stating 'Shipment delayed due to weather conditions'. -> No problem, sending the email to henry@logistics.org now with the message 'Shipment delayed due to weather conditions'.", "turn 2: Let me see the emails I've sent. -> Okay, I see the email to henry@logistics.org stating 'Shipment delayed due to weather conditions' in your sent items."], "query": "Email him an ETA for the shipment.", "rewrited_query": "Email henry@logistics.org an ETA for the shipment.", "answer": {"plan": "send_email", "arguments": {"to": "henry@logistics.org", "body": "an ETA for the shipment"}}, "unique_idx": "send_email-1250-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: I need to notify nina@hrservices.net about the upcoming interview schedule by email. -> Emailing nina@hrservices.net with details about the upcoming interview schedule.", "turn 2: Can you show me my outbox? -> I'm displaying your sent emails. The most recent one is to nina@hrservices.net regarding the upcoming interview schedule."], "query": "Email her the candidate profiles.", "rewrited_query": "Email nina@hrservices.net the candidate profiles.", "answer": {"plan": "send_email", "arguments": {"to": "nina@hrservices.net", "body": "the candidate profiles"}}, "unique_idx": "send_email-1251-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Draft a message to operations@factory.com mentioning details about the machinery upgrade. -> Drafting and sending the message about the machinery upgrade details to operations@factory.com.", "turn 2: Show sent messages. -> Here are your sent messages. The latest one is to operations@factory.com about the machinery upgrade details."], "query": "Send them the updated timeline.", "rewrited_query": "Send operations@factory.com the updated timeline.", "answer": {"plan": "send_email", "arguments": {"to": "operations@factory.com", "body": "the updated timeline"}}, "unique_idx": "send_email-1252-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Send an email to zara@fashion.com with the subject 'New Collection Preview' and note that the collection photos are attached. -> Email sent to zara@fashion.com. Subject: 'New Collection Preview'. Body: 'The collection photos are attached.'", "turn 2: View my sent email folder. -> Your sent folder includes the email to zara@fashion.com with the subject 'New Collection Preview', mentioning the attached collection photos."], "query": "Send her details on wholesale pricing for the new collection.", "rewrited_query": "Send zara@fashion.com details on wholesale pricing for the new collection.", "answer": {"plan": "send_email", "arguments": {"to": "zara@fashion.com", "body": "details on wholesale pricing for the new collection"}}, "unique_idx": "send_email-1253-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Hey, can you send an email to alice@example.com regarding the quarterly meeting updates? -> No problem, I've prepared an email to alice@example.com with the subject 'quarterly meeting updates'. Ready to send!", "turn 2: Can you view sent emails? -> Okay, I see you sent an email to alice@example.com with the subject 'quarterly meeting updates'."], "query": "Send a text to her saying 'Please confirm you received the email regarding quarterly meeting updates.'", "rewrited_query": "Send a text to alice@example.com saying 'Please confirm you received the email regarding quarterly meeting updates.'", "answer": {"plan": "send_message", "arguments": {"to": "alice@example.com", "message": "Please confirm you received the email regarding quarterly meeting updates."}}, "unique_idx": "send_email-1218-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Compose a quick email to bob@company.com and mention that I'll call him later. -> Sure, I've drafted an email to bob@company.com saying 'I'll call him later'. Go ahead and send it?", "turn 2: Did the email to bob@company.com go through? View sent emails. -> Yes, the email to bob@company.com stating 'I'll call him later' was sent successfully."], "query": "Text him 'Let me know when you're free for a call'.", "rewrited_query": "Text bob@company.com 'Let me know when you're free for a call'.", "answer": {"plan": "send_message", "arguments": {"to": "bob@company.com", "message": "Let me know when you're free for a call."}}, "unique_idx": "send_email-1219-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Draft an email to carol123@mail.com with the subject 'Report Submission' and attach the file report.pdf. -> Okay, email to carol123@mail.com with subject 'Report Submission' and attached file report.pdf is ready to go!", "turn 2: View sent emails -> Confirmed. The email to carol123@mail.com with the subject 'Report Submission' and attached file report.pdf has been sent."], "query": "Send a text to her asking if she received the report.", "rewrited_query": "Send a text to carol123@mail.com asking if she received the report.", "answer": {"plan": "send_message", "arguments": {"to": "carol123@mail.com", "message": "asking if she received the report."}}, "unique_idx": "send_email-1220-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Please send an email to kate@domain.com informing her about the policy updates. -> Alright, an email 'informing her about the policy updates' will be sent to kate@domain.com.", "turn 2: Can I see the email I just sent to kate@domain.com informing her about the policy updates? -> Yep, the email informing kate@domain.com about the policy updates is in your sent mail."], "query": "Send a message to her asking if she had a chance to look at the policy updates.", "rewrited_query": "Send a message to kate@domain.com asking if she had a chance to look at the policy updates.", "answer": {"plan": "send_message", "arguments": {"to": "kate@domain.com", "message": "asking if she had a chance to look at the policy updates."}}, "unique_idx": "send_email-1228-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Email brian@university.edu with the subject 'Assignment Submission' and include a message that I'm submitting my assignment before the deadline. -> Email sent to brian@university.edu with the subject 'Assignment Submission'.", "turn 2: Can you show me the sent emails? -> I found the email to brian@university.edu with the subject 'Assignment Submission' in your sent items."], "query": "Can you send him a text saying 'Let me know if you have received my assignment submission email'?", "rewrited_query": "Can you send brian@university.edu a text saying 'Let me know if you have received my assignment submission email'?", "answer": {"plan": "send_message", "arguments": {"to": "brian@university.edu", "message": "Let me know if you have received my assignment submission email"}}, "unique_idx": "send_email-1248-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Could you send an email to emily@designstudio.com and attach design_sketches.pdf? -> Okay, emailing emily@designstudio.com with the attachment design_sketches.pdf.", "turn 2: Can you show me my sent mail? -> I see the email you sent to emily@designstudio.com with the attachment design_sketches.pdf."], "query": "Send a text to her 'Let me know your thoughts on the attached design sketches'.", "rewrited_query": "Send a text to emily@designstudio.com 'Let me know your thoughts on the attached design sketches'.", "answer": {"plan": "send_message", "arguments": {"to": "emily@designstudio.com", "message": "Let me know your thoughts on the attached design sketches."}}, "unique_idx": "send_email-1249-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly send a quick email to henry@logistics.org stating 'Shipment delayed due to weather conditions'. -> No problem, sending the email to henry@logistics.org now with the message 'Shipment delayed due to weather conditions'.", "turn 2: Let me see the emails I've sent. -> Okay, I see the email to henry@logistics.org stating 'Shipment delayed due to weather conditions' in your sent items."], "query": "Send a text to him saying 'Please acknowledge receipt of the shipment delay notification.'", "rewrited_query": "Send a text to henry@logistics.org saying 'Please acknowledge receipt of the shipment delay notification.'", "answer": {"plan": "send_message", "arguments": {"to": "henry@logistics.org", "message": "Please acknowledge receipt of the shipment delay notification."}}, "unique_idx": "send_email-1250-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: I need to notify nina@hrservices.net about the upcoming interview schedule by email. -> Emailing nina@hrservices.net with details about the upcoming interview schedule.", "turn 2: Can you show me my outbox? -> I'm displaying your sent emails. The most recent one is to nina@hrservices.net regarding the upcoming interview schedule."], "query": "Send a text to her to confirm she received the interview schedule.", "rewrited_query": "Send a text to nina@hrservices.net to confirm she received the interview schedule.", "answer": {"plan": "send_message", "arguments": {"to": "nina@hrservices.net", "message": "to confirm she received the interview schedule."}}, "unique_idx": "send_email-1251-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Draft a message to operations@factory.com mentioning details about the machinery upgrade. -> Drafting and sending the message about the machinery upgrade details to operations@factory.com.", "turn 2: Show sent messages. -> Here are your sent messages. The latest one is to operations@factory.com about the machinery upgrade details."], "query": "Send a text to them asking if they received the email regarding the machinery upgrade.", "rewrited_query": "Send a text to operations@factory.com asking if they received the email regarding the machinery upgrade.", "answer": {"plan": "send_message", "arguments": {"to": "operations@factory.com", "message": "asking if they received the email regarding the machinery upgrade."}}, "unique_idx": "send_email-1252-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Send an email to zara@fashion.com with the subject 'New Collection Preview' and note that the collection photos are attached. -> Email sent to zara@fashion.com. Subject: 'New Collection Preview'. Body: 'The collection photos are attached.'", "turn 2: View my sent email folder. -> Your sent folder includes the email to zara@fashion.com with the subject 'New Collection Preview', mentioning the attached collection photos."], "query": "Send a text to her asking if she had a chance to review the new collection photos.", "rewrited_query": "Send a text to zara@fashion.com asking if she had a chance to review the new collection photos.", "answer": {"plan": "send_message", "arguments": {"to": "zara@fashion.com", "message": "asking if she had a chance to review the new collection photos."}}, "unique_idx": "send_email-1253-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Compose a message for jack@biotech.org that reads 'The experiment results are promising'. -> Composing and sending the message 'The experiment results are promising' to jack@biotech.org.", "turn 2: Can I see the emails that I just sent? -> Here's that email: to jack@biotech.org - 'The experiment results are promising'."], "query": "Forward that email to my boss at work.", "rewrited_query": "Forward the email to jack@biotech.org - 'The experiment results are promising' to my boss at work.", "answer": {"plan": "send_email", "arguments": {"to": "jack@biotech.org", "subject": "The experiment results are promising"}}, "unique_idx": "send_email-1254-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Email oliver@research.org an urgent notice: 'Data collection halted due to sensor failure'. -> Sending urgent notice to oliver@research.org: 'Data collection halted due to sensor failure'.", "turn 2: Display my sent emails. -> Here's the list of your sent emails: to oliver@research.org - 'Data collection halted due to sensor failure'."], "query": "Can you send it again?", "rewrited_query": "Can you send the email to oliver@research.org - 'Data collection halted due to sensor failure' again?", "answer": {"plan": "send_email", "arguments": {"to": "oliver@research.org", "subject": "Data collection halted due to sensor failure"}}, "unique_idx": "send_email-1257-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Construct an email to felix@logistics.com with the subject 'Shipping Delay' and mention that dispatch is delayed due to weather. -> Creating an email to felix@logistics.com with the subject 'Shipping Delay' and the message: Dispatch is delayed due to weather conditions. Sending now!", "turn 2: Can you pull up the last few emails I sent? -> No problem! Your most recent sent email is to felix@logistics.com regarding 'Shipping Delay'."], "query": "Send him a follow-up email.", "rewrited_query": "Send felix@logistics.com a follow-up email.", "answer": {"plan": "send_email", "arguments": {"to": "felix@logistics.com", "body": "follow-up email"}}, "unique_idx": "send_email-1261-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Compose a message for jack@biotech.org that reads 'The experiment results are promising'. -> Composing and sending the message 'The experiment results are promising' to jack@biotech.org.", "turn 2: Can I see the emails that I just sent? -> Here's that email: to jack@biotech.org - 'The experiment results are promising'."], "query": "Send him a text saying 'Got your email! Thanks!'", "rewrited_query": "Send jack@biotech.org a text saying 'Got your email! Thanks!'", "answer": {"plan": "send_message", "arguments": {"to": "jack@biotech.org", "message": "Got your email! Thanks!"}}, "unique_idx": "send_email-1254-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Reach out to sydney@travel.net via email and mention that my itinerary has changed. -> I'm sending an email to sydney@travel.net to let them know your itinerary has changed.", "turn 2: Show my sent items. -> Here are your recent sent emails: To sydney@travel.net regarding your itinerary change."], "query": "Can you text her 'Please confirm you received my email.'", "rewrited_query": "Can you text sydney@travel.net 'Please confirm you received my email.'", "answer": {"plan": "send_message", "arguments": {"to": "sydney@travel.net", "message": "Please confirm you received my email."}}, "unique_idx": "send_email-1255-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: I need to inform tim@education.edu that the exam has been postponed. Please use the subject 'Exam Date Change'. -> Emailing tim@education.edu with subject 'Exam Date Change' to inform them that the exam has been postponed.", "turn 2: Can I see the emails that have been sent? -> OK, showing your sent emails. The most recent one is: to tim@education.edu - 'Exam Date Change'."], "query": "Send a text to him saying 'Please acknowledge the email regarding the exam date change.'", "rewrited_query": "Send a text to tim@education.edu saying 'Please acknowledge the email regarding the exam date change.'", "answer": {"plan": "send_message", "arguments": {"to": "tim@education.edu", "message": "Please acknowledge the email regarding the exam date change."}}, "unique_idx": "send_email-1256-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Email oliver@research.org an urgent notice: 'Data collection halted due to sensor failure'. -> Sending urgent notice to oliver@research.org: 'Data collection halted due to sensor failure'.", "turn 2: Display my sent emails. -> Here's the list of your sent emails: to oliver@research.org - 'Data collection halted due to sensor failure'."], "query": "Send him a text message saying 'Please confirm receipt of the urgent email.'", "rewrited_query": "Send oliver@research.org a text message saying 'Please confirm receipt of the urgent email.'", "answer": {"plan": "send_message", "arguments": {"to": "oliver@research.org", "message": "Please confirm receipt of the urgent email."}}, "unique_idx": "send_email-1257-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Could you please send an email to grace@foundation.org saying 'Your proposal has been accepted'? -> Okay, I'll send an email to grace@foundation.org with the message 'Your proposal has been accepted'.", "turn 2: Could you show me the sent emails? -> Sure, displaying your sent emails. I see one to grace@foundation.org that says 'Your proposal has been accepted'."], "query": "Send her a text saying 'Congratulations again!'", "rewrited_query": "Send grace@foundation.org a text saying 'Congratulations again!'", "answer": {"plan": "send_message", "arguments": {"to": "grace@foundation.org", "message": "Congratulations again!"}}, "unique_idx": "send_email-1258-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: I want to send a notification email to sam@accounting.com about the updated expense report. Use 'Expense Report Update' as the subject. -> No problem! I will send an email to sam@accounting.com with the subject 'Expense Report Update' and the body 'Updated expense report information'.", "turn 2: Can I view the sent emails? -> Here are your sent emails: to sam@accounting.com - 'Expense Report Update'."], "query": "Text him 'Please review the updated expense report.'", "rewrited_query": "Text sam@accounting.com 'Please review the updated expense report.'", "answer": {"plan": "send_message", "arguments": {"to": "sam@accounting.com", "message": "Please review the updated expense report."}}, "unique_idx": "send_email-1259-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Please email helen@construction.biz stating that the blueprint revisions have been finalized. -> Sure thing, emailing helen@construction.biz now with the message: Blueprint revisions have been finalized.", "turn 2: Show me what's in my sent items. -> Alright, in your sent items, I see: to helen@construction.biz - 'Blueprint revisions have been finalized'."], "query": "Send a text to her saying 'Please confirm you received the blueprint revisions email.'", "rewrited_query": "Send a text to helen@construction.biz saying 'Please confirm you received the blueprint revisions email.'", "answer": {"plan": "send_message", "arguments": {"to": "helen@construction.biz", "message": "Please confirm you received the blueprint revisions email."}}, "unique_idx": "send_email-1260-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Construct an email to felix@logistics.com with the subject 'Shipping Delay' and mention that dispatch is delayed due to weather. -> Creating an email to felix@logistics.com with the subject 'Shipping Delay' and the message: Dispatch is delayed due to weather conditions. Sending now!", "turn 2: Can you pull up the last few emails I sent? -> No problem! Your most recent sent email is to felix@logistics.com regarding 'Shipping Delay'."], "query": "Send a text to him saying 'Kindly check your email regarding the shipping delay.'", "rewrited_query": "Send a text to felix@logistics.com saying 'Kindly check your email regarding the shipping delay.'", "answer": {"plan": "send_message", "arguments": {"to": "felix@logistics.com", "message": "Kindly check your email regarding the shipping delay."}}, "unique_idx": "send_email-1261-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Send out an email to karen@realestate.org that reads 'The property details have been updated' and attach property_details.pdf. -> Emailing karen@realestate.org with 'The property details have been updated' and attaching property_details.pdf. Sending it now!", "turn 2: Let me see the sent emails. -> Okay, I'm showing your sent emails. You sent one to karen@realestate.org with the subject 'The property details have been updated'."], "query": "Text her 'Did you get the updated property details?'", "rewrited_query": "Text karen@realestate.org 'Did you get the updated property details?'", "answer": {"plan": "send_message", "arguments": {"to": "karen@realestate.org", "message": "Did you get the updated property details?"}}, "unique_idx": "send_email-1262-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Could you launch an email to nick@software.dev informing him about the software bug discovered during testing? -> Drafting an email to nick@software.dev with the message: There is a software bug discovered during testing. Sending it out.", "turn 2: Please show the list of sent emails. -> Here's the list: to nick@software.dev about the software bug discovered during testing."], "query": "Text him 'Can you take a look at the bug I emailed about?'", "rewrited_query": "Text nick@software.dev 'Can you take a look at the bug I emailed about?'", "answer": {"plan": "send_message", "arguments": {"to": "nick@software.dev", "message": "Can you take a look at the bug I emailed about?"}}, "unique_idx": "send_email-1263-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Alert david@security.net by email that unusual activity has been detected onsite. -> Sending an alert email to david@security.net regarding the unusual activity detected onsite.", "turn 2: What's in my sent folder? -> Okay, here's what's in your sent folder: To david@security.net - 'Unusual activity detected onsite'."], "query": "Send him the incident report as well.", "rewrited_query": "Send david@security.net the incident report as well.", "answer": {"plan": "send_email", "arguments": {"to": "david@security.net", "body": "the incident report"}}, "unique_idx": "send_email-1265-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Compose an email to eileen@conference.org with the subject 'Keynote Update' and inform her that the keynote speaker has changed. -> Composing an email to eileen@conference.org with the subject 'Keynote Update' and informing her about the speaker change.", "turn 2: Show me the sent email log. -> Sure, here's your sent email log: The latest email sent was to eileen@conference.org - 'Keynote Update'."], "query": "Send her the speaker's bio as an attachment too.", "rewrited_query": "Send eileen@conference.org the speaker's bio as an attachment too.", "answer": {"plan": "send_email", "arguments": {"to": "eileen@conference.org", "attachments": ["speaker's bio"]}}, "unique_idx": "send_email-1266-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Please prepare an email for charles@startuphub.com with the message 'Looking forward to our meeting tomorrow.' -> Preparing the email for charles@startuphub.com with the message: Looking forward to our meeting tomorrow.", "turn 2: Can you show me the emails I've sent? -> Displaying sent emails: The most recent one is to charles@startuphub.com, subject line is unavailable since only message was added."], "query": "Forward him the presentation slides.", "rewrited_query": "Forward charles@startuphub.com the presentation slides.", "answer": {"plan": "send_email", "arguments": {"to": "charles@startuphub.com", "attachments": ["presentation slides"]}}, "unique_idx": "send_email-1267-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Send an email to amanda@financecorp.com regarding the quarterly earnings with the subject 'Earnings Report' and note that the figures are attached. -> Email sent to amanda@financecorp.com with the subject 'Earnings Report' and the message 'Figures are attached.'", "turn 2: Can you show my sent emails? -> Here are your sent emails: The latest email was sent to amanda@financecorp.com - 'Earnings Report'."], "query": "Send her an update on those figures.", "rewrited_query": "Send amanda@financecorp.com an update on those figures.", "answer": {"plan": "send_email", "arguments": {"to": "amanda@financecorp.com", "body": "an update on those figures"}}, "unique_idx": "send_email-1268-ACTION_VIEW_SENT_EMAILS-1-send_email-1"}
{"conversation_history": ["turn 1: Alert david@security.net by email that unusual activity has been detected onsite. -> Sending an alert email to david@security.net regarding the unusual activity detected onsite.", "turn 2: What's in my sent folder? -> Okay, here's what's in your sent folder: To david@security.net - 'Unusual activity detected onsite'."], "query": "Text him 'Please confirm you received the email about the unusual activity.'", "rewrited_query": "Text david@security.net 'Please confirm you received the email about the unusual activity.'", "answer": {"plan": "send_message", "arguments": {"to": "david@security.net", "message": "Please confirm you received the email about the unusual activity."}}, "unique_idx": "send_email-1265-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Compose an email to eileen@conference.org with the subject 'Keynote Update' and inform her that the keynote speaker has changed. -> Composing an email to eileen@conference.org with the subject 'Keynote Update' and informing her about the speaker change.", "turn 2: Show me the sent email log. -> Sure, here's your sent email log: The latest email sent was to eileen@conference.org - 'Keynote Update'."], "query": "Send her a text saying 'Please acknowledge receipt of the keynote update email.'", "rewrited_query": "Send eileen@conference.org a text saying 'Please acknowledge receipt of the keynote update email.'", "answer": {"plan": "send_message", "arguments": {"to": "eileen@conference.org", "message": "Please acknowledge receipt of the keynote update email."}}, "unique_idx": "send_email-1266-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Please prepare an email for charles@startuphub.com with the message 'Looking forward to our meeting tomorrow.' -> Preparing the email for charles@startuphub.com with the message: Looking forward to our meeting tomorrow.", "turn 2: Can you show me the emails I've sent? -> Displaying sent emails: The most recent one is to charles@startuphub.com, subject line is unavailable since only message was added."], "query": "Send him a text: 'Checking in about tomorrow's meeting.'", "rewrited_query": "Send charles@startuphub.com a text: 'Checking in about tomorrow's meeting.'", "answer": {"plan": "send_message", "arguments": {"to": "charles@startuphub.com", "message": "Checking in about tomorrow's meeting."}}, "unique_idx": "send_email-1267-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: Send an email to amanda@financecorp.com regarding the quarterly earnings with the subject 'Earnings Report' and note that the figures are attached. -> Email sent to amanda@financecorp.com with the subject 'Earnings Report' and the message 'Figures are attached.'", "turn 2: Can you show my sent emails? -> Here are your sent emails: The latest email was sent to amanda@financecorp.com - 'Earnings Report'."], "query": "Text her 'Did you get the earnings report email with the attached figures?'", "rewrited_query": "Text amanda@financecorp.com 'Did you get the earnings report email with the attached figures?'", "answer": {"plan": "send_message", "arguments": {"to": "amanda@financecorp.com", "message": "Did you get the earnings report email with the attached figures?"}}, "unique_idx": "send_email-1268-ACTION_VIEW_SENT_EMAILS-1-send_message-1"}
{"conversation_history": ["turn 1: I need to notify +1987654321 that the package has been delivered. -> Okay, I've sent the message 'the package has been delivered.' to +1987654321.", "turn 2: Could you display my outbox? -> Displaying your outbox now. The latest sent message is: +1987654321 - 'the package has been delivered.'"], "query": "Please call that number for me.", "rewrited_query": "Please call +1987654321 number for me.", "answer": {"plan": "dial", "arguments": {"phone_number": "+1987654321"}}, "unique_idx": "send_message-1275-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Could you text Sarah to let her know I'll be late for dinner? -> Notifying Sarah now. Message sent!", "turn 2: Let me see the sent messages. -> Certainly! The most recent sent message is to Sarah: 'I'll be late for dinner.'"], "query": "Can you call her?", "rewrited_query": "Can you call Sarah?", "answer": {"plan": "dial", "arguments": {"phone_number": "Sarah"}}, "unique_idx": "send_message-1276-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Send an SMS to +14155552671 saying 'Happy Birthday!' -> SMS sent to +14155552671 with 'Happy Birthday!'", "turn 2: What was the last message I sent? -> The last message you sent was to +14155552671, and it said 'Happy Birthday!'"], "query": "Call the number now.", "rewrited_query": "Call +14155552671 number now.", "answer": {"plan": "dial", "arguments": {"phone_number": "+14155552671"}}, "unique_idx": "send_message-1277-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Kindly send a message to Mom that says 'I love you!'. -> Sending 'I love you!' to Mom.", "turn 2: List the messages I've recently sent. -> Here's a list of your recently sent messages: Mom - 'I love you!'"], "query": "Please dial Mom.", "rewrited_query": "Please dial Mom.", "answer": {"plan": "dial", "arguments": {"phone_number": "Mom"}}, "unique_idx": "send_message-1278-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Send a text message with an attachment. It should go to +442071838750 with the message 'Check out this cool image', and attach the image located at http://example.com/image.jpg. -> Sending the message 'Check out this cool image' with the attached image to +442071838750.", "turn 2: Show me the sent message to +442071838750 -> Okay, displaying the sent message to +442071838750. The message reads: 'Check out this cool image' with an attached image at http://example.com/image.jpg."], "query": "Call that number.", "rewrited_query": "Call +442071838750 number.", "answer": {"plan": "dial", "arguments": {"phone_number": "+442071838750"}}, "unique_idx": "send_message-1279-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Send a quick SMS to the service desk at +1002003000 saying 'I need assistance with my account'. -> Message sent to +1002003000: I need assistance with my account.", "turn 2: What's in my sent items? -> In your sent items, the most recent one is to +1002003000: 'I need assistance with my account.'"], "query": "Could you call them?", "rewrited_query": "Could you call +1002003000?", "answer": {"plan": "dial", "arguments": {"phone_number": "+1002003000"}}, "unique_idx": "send_message-1281-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Send a text to +1234567890 with the message 'Hello, how are you?' -> Message sent to +1234567890.", "turn 2: Can you show me my sent messages? -> Okay, I'm showing you your sent messages. The most recent one is to +1234567890: 'Hello, how are you?'"], "query": "Send another one to that number saying 'I'm doing great, thanks!'", "rewrited_query": "Send another one to +1234567890 saying 'I'm doing great, thanks!'", "answer": {"plan": "send_message", "arguments": {"to": "+1234567890", "message": "I'm doing great, thanks!"}}, "unique_idx": "send_message-1273-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Please send the following SMS to John Doe: 'Don't forget our appointment tomorrow at 10 AM.' -> Text message dispatched to John Doe.", "turn 2: Can I see the messages I've sent? -> Here are your sent messages. You recently sent 'Don't forget our appointment tomorrow at 10 AM.' to John Doe."], "query": "Send him another one saying 'Please confirm.'", "rewrited_query": "Send John Doe another one saying 'Please confirm.'", "answer": {"plan": "send_message", "arguments": {"to": "John Doe", "message": "Please confirm."}}, "unique_idx": "send_message-1274-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: I need to notify +1987654321 that the package has been delivered. -> Okay, I've sent the message 'the package has been delivered.' to +1987654321.", "turn 2: Could you display my outbox? -> Displaying your outbox now. The latest sent message is: +1987654321 - 'the package has been delivered.'"], "query": "Send another message to that number asking 'Did you receive it?'", "rewrited_query": "Send another message to +1987654321 asking 'Did you receive it?'", "answer": {"plan": "send_message", "arguments": {"to": "+1987654321", "message": "Did you receive it?"}}, "unique_idx": "send_message-1275-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Could you text Sarah to let her know I'll be late for dinner? -> Notifying Sarah now. Message sent!", "turn 2: Let me see the sent messages. -> Certainly! The most recent sent message is to Sarah: 'I'll be late for dinner.'"], "query": "Send her a follow-up: 'I'll be there in 20 minutes.'", "rewrited_query": "Send Sarah a follow-up: 'I'll be there in 20 minutes.'", "answer": {"plan": "send_message", "arguments": {"to": "Sarah", "message": "I'll be there in 20 minutes."}}, "unique_idx": "send_message-1276-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send an SMS to +14155552671 saying 'Happy Birthday!' -> SMS sent to +14155552671 with 'Happy Birthday!'", "turn 2: What was the last message I sent? -> The last message you sent was to +14155552671, and it said 'Happy Birthday!'"], "query": "Send that number another text saying 'Hope you have a great day!'", "rewrited_query": "Send +14155552671 another text saying 'Hope you have a great day!'", "answer": {"plan": "send_message", "arguments": {"to": "+14155552671", "message": "Hope you have a great day!"}}, "unique_idx": "send_message-1277-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Kindly send a message to Mom that says 'I love you!'. -> Sending 'I love you!' to Mom.", "turn 2: List the messages I've recently sent. -> Here's a list of your recently sent messages: Mom - 'I love you!'"], "query": "Send her another one saying 'Can you pick up milk?'", "rewrited_query": "Send Mom another one saying 'Can you pick up milk?'", "answer": {"plan": "send_message", "arguments": {"to": "Mom", "message": "Can you pick up milk?"}}, "unique_idx": "send_message-1278-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a text message with an attachment. It should go to +442071838750 with the message 'Check out this cool image', and attach the image located at http://example.com/image.jpg. -> Sending the message 'Check out this cool image' with the attached image to +442071838750.", "turn 2: Show me the sent message to +442071838750 -> Okay, displaying the sent message to +442071838750. The message reads: 'Check out this cool image' with an attached image at http://example.com/image.jpg."], "query": "Send another message to that number asking 'Did you see it?'", "rewrited_query": "Send another message to +442071838750 asking 'Did you see it?'", "answer": {"plan": "send_message", "arguments": {"to": "+442071838750", "message": "Did you see it?"}}, "unique_idx": "send_message-1279-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Could you please send a message to Emily? The SMS should state 'Here's the document you asked for' and include the file at http://files.com/doc.pdf. -> The message 'Here's the document you asked for' including the file at http://files.com/doc.pdf has been sent to Emily.", "turn 2: Can you confirm that the SMS was sent? -> Yes, I can confirm the SMS was sent. The message 'Here's the document you asked for' with the file http://files.com/doc.pdf was sent to Emily."], "query": "Send her another message saying 'Let me know if you have any questions.'", "rewrited_query": "Send Emily another message saying 'Let me know if you have any questions.'", "answer": {"plan": "send_message", "arguments": {"to": "Emily", "message": "Let me know if you have any questions."}}, "unique_idx": "send_message-1280-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a quick SMS to the service desk at +1002003000 saying 'I need assistance with my account'. -> Message sent to +1002003000: I need assistance with my account.", "turn 2: What's in my sent items? -> In your sent items, the most recent one is to +1002003000: 'I need assistance with my account.'"], "query": "Send them another one saying 'I'm still waiting for help.'", "rewrited_query": "Send +1002003000 another one saying 'I'm still waiting for help.'", "answer": {"plan": "send_message", "arguments": {"to": "+1002003000", "message": "I'm still waiting for help."}}, "unique_idx": "send_message-1281-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: I want to message my friend Lisa via SMS asking 'Are you available for a call later?' -> Sending 'Are you available for a call later?' to Lisa.", "turn 2: Can you read out the last text I sent? -> The last text you sent was to Lisa: 'Are you available for a call later?'"], "query": "Send her 'I can call in 30 min'", "rewrited_query": "Send Lisa 'I can call in 30 min'", "answer": {"plan": "send_message", "arguments": {"to": "Lisa", "message": "I can call in 30 min"}}, "unique_idx": "send_message-1282-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a quick SMS to +18881234567 saying 'Be there in 5 minutes'. -> SMS sent to +18881234567: 'Be there in 5 minutes'.", "turn 2: Show my sent messages, please. -> Here's what you've sent: +18881234567 - 'Be there in 5 minutes'."], "query": "Dial that number", "rewrited_query": "Dial +18881234567 number", "answer": {"plan": "dial", "arguments": {"phone_number": "+18881234567"}}, "unique_idx": "send_message-1294-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Can you SMS to +4915791234567 'Meeting has been rescheduled to 3 PM' urgently? -> Urgently sent SMS: 'Meeting has been rescheduled to 3 PM' to +4915791234567.", "turn 2: Let me see my sent messages. -> Here are your sent messages: +4915791234567 - 'Meeting has been rescheduled to 3 PM'."], "query": "Can you call that number?", "rewrited_query": "Can you call +4915791234567 number?", "answer": {"plan": "dial", "arguments": {"phone_number": "+4915791234567"}}, "unique_idx": "send_message-1297-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Send an SMS to the reception at +447911123456 with the note 'Visitor arriving now'. -> SMS sent to reception at +447911123456: 'Visitor arriving now'.", "turn 2: Can you list the texts I sent? -> Here's a list of your sent messages: Reception +447911123456 - 'Visitor arriving now'."], "query": "Dial the reception", "rewrited_query": "Dial +447911123456", "answer": {"plan": "dial", "arguments": {"phone_number": "+447911123456"}}, "unique_idx": "send_message-1300-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Message the support team at +18005551234 with 'System outage reported, please investigate'. -> Message sent to support team at +18005551234: 'System outage reported, please investigate'.", "turn 2: What are the last SMS messages I sent? -> Your last sent SMS message was to the support team at +18005551234: 'System outage reported, please investigate'."], "query": "Please dial that number for me", "rewrited_query": "Please dial +18005551234 for me", "answer": {"plan": "dial", "arguments": {"phone_number": "+18005551234"}}, "unique_idx": "send_message-1302-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Could you send a text message to Cousin Kevin asking 'Will you join us for dinner tonight?' -> Text sent to Kevin: 'Will you join us for dinner tonight?'", "turn 2: Can I see the texts I've sent? -> Here are your sent messages: Kevin - 'Will you join us for dinner tonight?'"], "query": "Send him 'I'll make sure to make your favorite dish tonight.'", "rewrited_query": "Send Kevin 'I'll make sure to make your favorite dish tonight.'", "answer": {"plan": "send_message", "arguments": {"to": "Kevin", "message": "I'll make sure to make your favorite dish tonight."}}, "unique_idx": "send_message-1293-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a quick SMS to +18881234567 saying 'Be there in 5 minutes'. -> SMS sent to +18881234567: 'Be there in 5 minutes'.", "turn 2: Show my sent messages, please. -> Here's what you've sent: +18881234567 - 'Be there in 5 minutes'."], "query": "Text them 'On my way!'", "rewrited_query": "Text +18881234567 'On my way!'", "answer": {"plan": "send_message", "arguments": {"to": "+18881234567", "message": "On my way!"}}, "unique_idx": "send_message-1294-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Message Dr. Smith at +12125550123 to inform him that 'The test results are available.' -> Sent message to Dr. Smith at +12125550123: 'The test results are available.'", "turn 2: Could you list my recent texts? -> Okay, displaying recent sent messages: Dr. Smith +12125550123 - 'The test results are available.'"], "query": "Send him 'Can we discuss it tomorrow?'", "rewrited_query": "Send Dr. Smith 'Can we discuss it tomorrow?'", "answer": {"plan": "send_message", "arguments": {"to": "Dr. Smith", "message": "Can we discuss it tomorrow?"}}, "unique_idx": "send_message-1295-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a text to Emily: 'Don't forget to submit the report by EOD'. -> Okay, I've sent 'Don't forget to submit the report by EOD' to Emily.", "turn 2: Can you show me the messages I just sent? -> Showing your recently sent messages: Emily - 'Don't forget to submit the report by EOD'."], "query": "Send her 'Thanks, will do!'", "rewrited_query": "Send Emily 'Thanks, will do!'", "answer": {"plan": "send_message", "arguments": {"to": "Emily", "message": "Thanks, will do!"}}, "unique_idx": "send_message-1296-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Can you SMS to +4915791234567 'Meeting has been rescheduled to 3 PM' urgently? -> Urgently sent SMS: 'Meeting has been rescheduled to 3 PM' to +4915791234567.", "turn 2: Let me see my sent messages. -> Here are your sent messages: +4915791234567 - 'Meeting has been rescheduled to 3 PM'."], "query": "Send them 'Is that OK for you?'", "rewrited_query": "Send +4915791234567 'Is that OK for you?'", "answer": {"plan": "send_message", "arguments": {"to": "+4915791234567", "message": "Is that OK for you?"}}, "unique_idx": "send_message-1297-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: I need to send a text message to Bob with 'Let me know when you're free for coffee'. -> Sending 'Let me know when you're free for coffee' to Bob now.", "turn 2: What are my last sent text messages? -> Your last sent message was to Bob: 'Let me know when you're free for coffee'."], "query": "Send him 'How about tomorrow?'", "rewrited_query": "Send Bob 'How about tomorrow?'", "answer": {"plan": "send_message", "arguments": {"to": "Bob", "message": "How about tomorrow?"}}, "unique_idx": "send_message-1298-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Please text my partner Jessica: 'I'll be home late tonight', thanks. -> No problem, I've texted Jessica: 'I'll be home late tonight'.", "turn 2: Can I view my sent messages? -> Displaying your sent messages: Jessica - 'I'll be home late tonight'."], "query": "Send her 'Love you!'", "rewrited_query": "Send Jessica 'Love you!'", "answer": {"plan": "send_message", "arguments": {"to": "Jessica", "message": "Love you!"}}, "unique_idx": "send_message-1299-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send an SMS to the reception at +447911123456 with the note 'Visitor arriving now'. -> SMS sent to reception at +447911123456: 'Visitor arriving now'.", "turn 2: Can you list the texts I sent? -> Here's a list of your sent messages: Reception +447911123456 - 'Visitor arriving now'."], "query": "Send them 'They are waiting in the lobby.'", "rewrited_query": "Send Reception +447911123456 'They are waiting in the lobby.'", "answer": {"plan": "send_message", "arguments": {"to": "+447911123456", "message": "They are waiting in the lobby."}}, "unique_idx": "send_message-1300-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Could you text my brother, Mike, the message 'Don't forget to call Mom'? -> Texting Mike: 'Don't forget to call Mom'.", "turn 2: Show me my recently sent SMS messages. -> Here are your recent SMS messages: Mike - 'Don't forget to call Mom'."], "query": "Send him 'Thanks for reminding me!'", "rewrited_query": "Send Mike 'Thanks for reminding me!'", "answer": {"plan": "send_message", "arguments": {"to": "Mike", "message": "Thanks for reminding me!"}}, "unique_idx": "send_message-1301-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Message the support team at +18005551234 with 'System outage reported, please investigate'. -> Message sent to support team at +18005551234: 'System outage reported, please investigate'.", "turn 2: What are the last SMS messages I sent? -> Your last sent SMS message was to the support team at +18005551234: 'System outage reported, please investigate'."], "query": "Send them 'Any updates on this?'", "rewrited_query": "Send the support team at +18005551234 'Any updates on this?'", "answer": {"plan": "send_message", "arguments": {"to": "+18005551234", "message": "Any updates on this?"}}, "unique_idx": "send_message-1302-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a text notification to Customer Service at +1230984567: 'I need help with my order'. -> Notification sent to +1230984567 with the message: I need help with my order.", "turn 2: Could you show me my sent messages? -> Here's what you've sent: Customer Service +1230984567 - 'I need help with my order'."], "query": "Call them now.", "rewrited_query": "Call Customer Service +1230984567 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "+1230984567"}}, "unique_idx": "send_message-1303-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Could you send an SMS to +81312345678 with the message 'The event schedule is attached' along with its PDF at https://docs.example.com/event.pdf? -> Sent SMS to +81312345678: 'The event schedule is attached' with the PDF from https://docs.example.com/event.pdf.", "turn 2: Can you show me the text messages that were sent? -> Showing sent messages: +81312345678 - 'The event schedule is attached' (PDF: https://docs.example.com/event.pdf)."], "query": "Call that number.", "rewrited_query": "Call +81312345678.", "answer": {"plan": "dial", "arguments": {"phone_number": "+81312345678"}}, "unique_idx": "send_message-1309-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Send a text message to +61234567890 saying 'Reminder: your appointment is tomorrow' and add this reminder image: http://reminders.example.org/appointment.jpg. -> A text message has been dispatched to +61234567890 with 'Reminder: your appointment is tomorrow', and the image from http://reminders.example.org/appointment.jpg is attached.", "turn 2: Display the recently sent messages. -> Okay, displaying recent sent messages: +61234567890 - 'Reminder: your appointment is tomorrow' (image: http://reminders.example.org/appointment.jpg)."], "query": "I'd like to call that number now.", "rewrited_query": "I'd like to call +61234567890 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "+61234567890"}}, "unique_idx": "send_message-1312-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Send a text notification to Customer Service at +1230984567: 'I need help with my order'. -> Notification sent to +1230984567 with the message: I need help with my order.", "turn 2: Could you show me my sent messages? -> Here's what you've sent: Customer Service +1230984567 - 'I need help with my order'."], "query": "Send another message to them: 'Thanks for your help!'", "rewrited_query": "Send another message to Customer Service +1230984567: 'Thanks for your help!'", "answer": {"plan": "send_message", "arguments": {"to": "+1230984567", "message": "Thanks for your help!"}}, "unique_idx": "send_message-1303-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Could you SMS my manager Erica saying 'I'll be working remotely today'? -> Text dispatched to Erica: I'll be working remotely today.", "turn 2: Can I see my recently sent texts? -> Okay, here's your sent message: Erica - 'I'll be working remotely today'."], "query": "Send her 'Let me know if you need anything else.'", "rewrited_query": "Send Erica 'Let me know if you need anything else.'", "answer": {"plan": "send_message", "arguments": {"to": "Erica", "message": "Let me know if you need anything else."}}, "unique_idx": "send_message-1304-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a text to Deputy John with the info: 'Report to base at 0600 hours'. -> Message sent to John: Report to base at 0600 hours.", "turn 2: Let me see the sent messages, please. -> Here are the sent messages: Deputy John - 'Report to base at 0600 hours'."], "query": "Also send him 'Acknowledge receipt of this message.'", "rewrited_query": "Also send Deputy John 'Acknowledge receipt of this message.'", "answer": {"plan": "send_message", "arguments": {"to": "Deputy John", "message": "Acknowledge receipt of this message."}}, "unique_idx": "send_message-1305-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Please message my friend Sara: 'Let's catch up over coffee this weekend'. -> Alright, Sara has received your message: Let's catch up over coffee this weekend.", "turn 2: Can you pull up my sent message history? -> Displaying sent message history: Sara - 'Let's catch up over coffee this weekend'."], "query": "Send her 'How about Saturday?'", "rewrited_query": "Send Sara 'How about Saturday?'", "answer": {"plan": "send_message", "arguments": {"to": "Sara", "message": "How about Saturday?"}}, "unique_idx": "send_message-1306-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a heartwarming SMS to Grandma: 'Love you always'. -> A text has been sent to Grandma saying, 'Love you always'.", "turn 2: Can I check the list of text messages I've sent? -> Here's the list of sent text messages: Grandma - 'Love you always'."], "query": "Send her 'I'll call you later.'", "rewrited_query": "Send Grandma 'I'll call you later.'", "answer": {"plan": "send_message", "arguments": {"to": "Grandma", "message": "I'll call you later."}}, "unique_idx": "send_message-1307-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Text Alan with the note 'Here's the contract' and attach the document from http://files.example.com/contract.pdf. -> Message with attachment sent to Alan: Here's the contract. The attached file is located at http://files.example.com/contract.pdf.", "turn 2: Display the outbox, please. -> Here's what's in your outbox: Alan - 'Here's the contract' (attached file: http://files.example.com/contract.pdf)."], "query": "Send him 'Let me know if you have any questions.'", "rewrited_query": "Send Alan 'Let me know if you have any questions.'", "answer": {"plan": "send_message", "arguments": {"to": "Alan", "message": "Let me know if you have any questions."}}, "unique_idx": "send_message-1308-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Could you send an SMS to +81312345678 with the message 'The event schedule is attached' along with its PDF at https://docs.example.com/event.pdf? -> Sent SMS to +81312345678: 'The event schedule is attached' with the PDF from https://docs.example.com/event.pdf.", "turn 2: Can you show me the text messages that were sent? -> Showing sent messages: +81312345678 - 'The event schedule is attached' (PDF: https://docs.example.com/event.pdf)."], "query": "Send them 'Please confirm receipt.'", "rewrited_query": "Send +81312345678 'Please confirm receipt.'", "answer": {"plan": "send_message", "arguments": {"to": "+81312345678", "message": "Please confirm receipt."}}, "unique_idx": "send_message-1309-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a message to Liam: 'Party at my place this Friday!' along with the image at http://images.example.com/invite.jpg. -> I've sent the message 'Party at my place this Friday!' to Liam, and attached the image from http://images.example.com/invite.jpg.", "turn 2: Can I see the details of the text messages I just sent? -> Here are the details: Liam - 'Party at my place this Friday!' (Image: http://images.example.com/invite.jpg)."], "query": "Send him 'Bring your own drinks!'", "rewrited_query": "Send Liam 'Bring your own drinks!'", "answer": {"plan": "send_message", "arguments": {"to": "Liam", "message": "Bring your own drinks!"}}, "unique_idx": "send_message-1310-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Text my friend Zoe with 'Looking forward to our trip next month' and include the itinerary image located at https://example.com/itinerary.png. -> Sent the text 'Looking forward to our trip next month' to Zoe, with the itinerary image from https://example.com/itinerary.png.", "turn 2: Show me the messages I've sent. -> Here's your sent message history: Zoe - 'Looking forward to our trip next month' (itinerary image: https://example.com/itinerary.png)."], "query": "Send her 'Have you packed yet?'", "rewrited_query": "Send Zoe 'Have you packed yet?'", "answer": {"plan": "send_message", "arguments": {"to": "Zoe", "message": "Have you packed yet?"}}, "unique_idx": "send_message-1311-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a text message to +61234567890 saying 'Reminder: your appointment is tomorrow' and add this reminder image: http://reminders.example.org/appointment.jpg. -> A text message has been dispatched to +61234567890 with 'Reminder: your appointment is tomorrow', and the image from http://reminders.example.org/appointment.jpg is attached.", "turn 2: Display the recently sent messages. -> Okay, displaying recent sent messages: +61234567890 - 'Reminder: your appointment is tomorrow' (image: http://reminders.example.org/appointment.jpg)."], "query": "Send them 'Please confirm if you can make it.'", "rewrited_query": "Send +61234567890 'Please confirm if you can make it.'", "answer": {"plan": "send_message", "arguments": {"to": "+61234567890", "message": "Please confirm if you can make it."}}, "unique_idx": "send_message-1312-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Text the school office at +1233211234: 'I'll be absent due to illness today'. -> Message sent to +1233211234: 'I'll be absent due to illness today'.", "turn 2: Show me the sent message log. -> Here's your sent message log: School office +1233211234 - \"I'll be absent due to illness today\"."], "query": "Call that number now.", "rewrited_query": "Call +1233211234 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "+1233211234"}}, "unique_idx": "send_message-1314-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Can you message the taxi service at +441234567890 to say 'I'm outside waiting now'? -> Sending 'I'm outside waiting now' to +441234567890.", "turn 2: What are my most recent sent SMS? -> Your most recent sent SMS: Taxi service +441234567890 - 'I'm outside waiting now'."], "query": "Dial that number.", "rewrited_query": "Dial +441234567890.", "answer": {"plan": "dial", "arguments": {"phone_number": "+441234567890"}}, "unique_idx": "send_message-1316-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Please send a quick SMS to center reception +11234567890 saying 'Visitor has arrived' immediately. -> Texted 'Visitor has arrived' to +11234567890.", "turn 2: Let me see the text messages I've just sent. -> The text you just sent: center reception +11234567890 - 'Visitor has arrived'."], "query": "Ring that number.", "rewrited_query": "Ring +11234567890.", "answer": {"plan": "dial", "arguments": {"phone_number": "+11234567890"}}, "unique_idx": "send_message-1319-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Could you text our IT department at +1000999888 to alert them 'Server downtime in progress'? -> Text sent to +1000999888 with the message: Server downtime in progress.", "turn 2: Can I see my sent messages? -> Yes, you sent a message to IT department at +1000999888: 'Server downtime in progress'."], "query": "Call that IT department now.", "rewrited_query": "Call +1000999888 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "+1000999888"}}, "unique_idx": "send_message-1323-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Text the school office at +1233211234: 'I'll be absent due to illness today'. -> Message sent to +1233211234: 'I'll be absent due to illness today'.", "turn 2: Show me the sent message log. -> Here's your sent message log: School office +1233211234 - \"I'll be absent due to illness today\"."], "query": "Send them 'Please confirm receipt of this message.'", "rewrited_query": "Send School office +1233211234 'Please confirm receipt of this message.'", "answer": {"plan": "send_message", "arguments": {"to": "School office +1233211234", "message": "Please confirm receipt of this message."}}, "unique_idx": "send_message-1314-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Can you message the taxi service at +441234567890 to say 'I'm outside waiting now'? -> Sending 'I'm outside waiting now' to +441234567890.", "turn 2: What are my most recent sent SMS? -> Your most recent sent SMS: Taxi service +441234567890 - 'I'm outside waiting now'."], "query": "Send them 'I will be waiting in a black car.'", "rewrited_query": "Send Taxi service +441234567890 'I will be waiting in a black car.'", "answer": {"plan": "send_message", "arguments": {"to": "Taxi service +441234567890", "message": "I will be waiting in a black car."}}, "unique_idx": "send_message-1316-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Please text my best friend Mark with 'Let's meet at the park in 15 minutes'. -> Alright, texting Mark: 'Let's meet at the park in 15 minutes'.", "turn 2: List my sent texts. -> OK, here's your list of sent texts: Mark - 'Let's meet at the park in 15 minutes'."], "query": "Send him 'I am bringing a frisbee.'", "rewrited_query": "Send Mark 'I am bringing a frisbee.'", "answer": {"plan": "send_message", "arguments": {"to": "Mark", "message": "I am bringing a frisbee."}}, "unique_idx": "send_message-1317-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send an SMS to Emily at +972545678912 stating 'Your order has been shipped'. -> Message sent to Emily at +972545678912: 'Your order has been shipped'.", "turn 2: Check the last messages I sent, please. -> The last message you sent was to Emily at +972545678912: 'Your order has been shipped'."], "query": "Send her 'You will receive it within 3 business days.'", "rewrited_query": "Send Emily at +972545678912 'You will receive it within 3 business days.'", "answer": {"plan": "send_message", "arguments": {"to": "Emily at +972545678912", "message": "You will receive it within 3 business days."}}, "unique_idx": "send_message-1318-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Please send a quick SMS to center reception +11234567890 saying 'Visitor has arrived' immediately. -> Texted 'Visitor has arrived' to +11234567890.", "turn 2: Let me see the text messages I've just sent. -> The text you just sent: center reception +11234567890 - 'Visitor has arrived'."], "query": "Send them 'Please direct them to suite 101.'", "rewrited_query": "Send center reception +11234567890 'Please direct them to suite 101.'", "answer": {"plan": "send_message", "arguments": {"to": "center reception +11234567890", "message": "Please direct them to suite 101."}}, "unique_idx": "send_message-1319-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Text Professor Lee at +821012345678 to inform him 'The seminar is canceled today'. -> Notifying Professor Lee at +821012345678: 'The seminar is canceled today'.", "turn 2: Can you show my sent messages? -> Here are your sent messages: Professor Lee +821012345678 - 'The seminar is canceled today'."], "query": "Please text him 'I apologize for any inconvenience.'", "rewrited_query": "Please text Professor Lee at +821012345678 'I apologize for any inconvenience.'", "answer": {"plan": "send_message", "arguments": {"to": "+821012345678", "message": "I apologize for any inconvenience."}}, "unique_idx": "send_message-1320-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Can you send an SMS to Jenny saying 'I'll pick you up at 7 PM'? -> Messaging Jenny: 'I'll pick you up at 7 PM'.", "turn 2: Could you retrieve my sent messages? -> I found one sent message: To Jenny - 'I'll pick you up at 7 PM'."], "query": "Send her 'Running 5 minutes late.'", "rewrited_query": "Send Jenny 'Running 5 minutes late.'", "answer": {"plan": "send_message", "arguments": {"to": "Jenny", "message": "Running 5 minutes late."}}, "unique_idx": "send_message-1321-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Please send a message to my friend Sam: 'Congratulations on your promotion!' -> Sent 'Congratulations on your promotion!' to Sam.", "turn 2: Show me the messages I just sent out. -> The message you sent out was to Sam: 'Congratulations on your promotion!'."], "query": "Send him 'Let’s celebrate soon!'", "rewrited_query": "Send Sam 'Let’s celebrate soon!'", "answer": {"plan": "send_message", "arguments": {"to": "Sam", "message": "Let’s celebrate soon!"}}, "unique_idx": "send_message-1322-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Could you text our IT department at +1000999888 to alert them 'Server downtime in progress'? -> Text sent to +1000999888 with the message: Server downtime in progress.", "turn 2: Can I see my sent messages? -> Yes, you sent a message to IT department at +1000999888: 'Server downtime in progress'."], "query": "Text them 'Estimated recovery time is 2 hours.'", "rewrited_query": "Text IT department at +1000999888 'Estimated recovery time is 2 hours.'", "answer": {"plan": "send_message", "arguments": {"to": "+1000999888", "message": "Estimated recovery time is 2 hours."}}, "unique_idx": "send_message-1323-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send an SMS to coordinator Lily with the note 'Workshop details have been emailed'. -> Message delivered to Lily: Workshop details have been emailed.", "turn 2: What messages have I sent recently? -> Recently sent to coordinator Lily: 'Workshop details have been emailed'."], "query": "Send her 'Please confirm if you have received it.'", "rewrited_query": "Send coordinator Lily 'Please confirm if you have received it.'", "answer": {"plan": "send_message", "arguments": {"to": "Lily", "message": "Please confirm if you have received it."}}, "unique_idx": "send_message-1324-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Text Professor Lee at +821012345678 to inform him 'The seminar is canceled today'. -> Notifying Professor Lee at +821012345678: 'The seminar is canceled today'.", "turn 2: Can you show my sent messages? -> Here are your sent messages: Professor Lee +821012345678 - 'The seminar is canceled today'."], "query": "Ring Professor Lee.", "rewrited_query": "Ring Professor Lee +821012345678.", "answer": {"plan": "dial", "arguments": {"phone_number": "+821012345678"}}, "unique_idx": "send_message-1320-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Message the delivery guy at +3311223344: 'Please leave the package at the front door if no one answers'. -> Okay, I've sent 'Please leave the package at the front door if no one answers' to +3311223344.", "turn 2: Could you show me my last sent SMS? -> Sure, displaying your sent messages. To +3311223344: 'Please leave the package at the front door if no one answers'."], "query": "Call that number now.", "rewrited_query": "Call +3311223344 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "+3311223344"}}, "unique_idx": "send_message-1325-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
{"conversation_history": ["turn 1: Message the delivery guy at +3311223344: 'Please leave the package at the front door if no one answers'. -> Okay, I've sent 'Please leave the package at the front door if no one answers' to +3311223344.", "turn 2: Could you show me my last sent SMS? -> Sure, displaying your sent messages. To +3311223344: 'Please leave the package at the front door if no one answers'."], "query": "Send him 'Got it, thanks!'", "rewrited_query": "Send +3311223344 'Got it, thanks!'", "answer": {"plan": "send_message", "arguments": {"to": "+3311223344", "message": "Got it, thanks!"}}, "unique_idx": "send_message-1325-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Could you please text Tracy, stating 'The meeting has been moved to Room 101'? -> Noted. Texting Tracy now: The meeting has been moved to Room 101.", "turn 2: Can you list my sent SMS messages? -> Okay, here's a list of your recent sent messages. To Tracy: 'The meeting has been moved to Room 101'."], "query": "Send her 'I'm on my way.'", "rewrited_query": "Send Tracy 'I'm on my way.'", "answer": {"plan": "send_message", "arguments": {"to": "Tracy", "message": "I'm on my way."}}, "unique_idx": "send_message-1326-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: Send a text message to +491512345678 with 'Reminder: project deadline is tomorrow' and attach a related image from http://example.org/reminder.png. -> Sending message 'Reminder: project deadline is tomorrow' with attachment from http://example.org/reminder.png to +491512345678.", "turn 2: Let me view my sent messages, please. -> No problem! Here are your sent messages: +491512345678 - 'Reminder: project deadline is tomorrow' (attachment included)."], "query": "Send it again but without the attachment.", "rewrited_query": "Send a text message to +491512345678 with 'Reminder: project deadline is tomorrow' again but without the attachment.", "answer": {"plan": "send_message", "arguments": {"to": "+491512345678", "message": "Reminder: project deadline is tomorrow"}}, "unique_idx": "send_message-1327-ACTION_VIEW_SENT_MESSAGES-1-send_message-1"}
{"conversation_history": ["turn 1: I would like to see the detailed schedule for the event at content://calender/event/40. Open it for me. -> Sure, showing you the schedule for the event at content://calender/event/40.", "turn 2: I want to see a summary of my sent SMS and MMS messages, complete with recipient details and a short preview of each. -> Sure, displaying your recent sent messages along with recipient details and message previews."], "query": "Send a message to David: 'Are we still meeting today?'", "rewrited_query": "Send a message to David: 'Are we still meeting today?'", "answer": {"plan": "send_message", "arguments": {"to": "David", "message": "Are we still meeting today?"}}, "unique_idx": "ACTION_VIEW_EVENT-1889-ACTION_VIEW_SENT_MESSAGES-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Would you please power up the camera for a still photo session? -> Firing up the still image camera now!", "turn 2: List out my recent outgoing messages, showing both who I sent them to and a fragment of the text. -> Here's a summary of your recently sent texts, showing recipients and message snippets."], "query": "Send my wife 'I'm running late, see you in 30 minutes'.", "rewrited_query": "Send my wife 'I'm running late, see you in 30 minutes'.", "answer": {"plan": "send_message", "arguments": {"to": "my wife", "message": "I'm running late, see you in 30 minutes"}}, "unique_idx": "INTENT_ACTION_STILL_IMAGE_CAMERA-861-ACTION_VIEW_SENT_MESSAGES-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I’d appreciate it if you could display my recently accessed apps list. -> No problem! Your recent apps are: YouTube, Gmail, Camera, and Clock.", "turn 2: Could you provide an overview of the texts I have sent, including the recipients' details and a snippet of each? -> Displaying an overview of your sent text messages, including recipient details and message snippets."], "query": "Send a message to Alex, saying 'Can you please send me the report?'", "rewrited_query": "Send a message to Alex, saying 'Can you please send me the report?'", "answer": {"plan": "send_message", "arguments": {"to": "Alex", "message": "Can you please send me the report?"}}, "unique_idx": "ACTION_VIEW_RECENT_APPS-2322-ACTION_VIEW_SENT_MESSAGES-1_NR-send_message-1"}
{"conversation_history": ["turn 1: I want to speak with someone on 555-0039, please dial the number. -> Ok, dialing 555-0039 now.", "turn 2: I need a list of my sent text logs with the names of the recipients and some part of the message content. -> OK, providing the history of your sent texts with recipient names and message previews."], "query": "Send to my brother: 'I'll pick you up at 8.'", "rewrited_query": "Send to my brother: 'I'll pick you up at 8.'", "answer": {"plan": "send_message", "arguments": {"to": "my brother", "message": "I'll pick you up at 8."}}, "unique_idx": "dial-996-ACTION_VIEW_SENT_MESSAGES-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Please obtain the phone details using the URI: content://records/phone/private/468. -> Accessing phone details from content://records/phone/private/468.", "turn 2: Show me my history for sent texts. I want to see both who received them and a snippet from each message. -> Alright, showing your sent SMS history, including recipients and message snippets."], "query": "Send my friend John a quick message 'Call me when you get a chance'.", "rewrited_query": "Send my friend John a quick message 'Call me when you get a chance'.", "answer": {"plan": "send_message", "arguments": {"to": "my friend John", "message": "Call me when you get a chance."}}, "unique_idx": "get_contact_info_from_uri-1105-ACTION_VIEW_SENT_MESSAGES-1_NR-send_message-1"}
{"conversation_history": ["turn 1: Send a text message to +491512345678 with 'Reminder: project deadline is tomorrow' and attach a related image from http://example.org/reminder.png. -> Sending message 'Reminder: project deadline is tomorrow' with attachment from http://example.org/reminder.png to +491512345678.", "turn 2: Let me view my sent messages, please. -> No problem! Here are your sent messages: +491512345678 - 'Reminder: project deadline is tomorrow' (attachment included)."], "query": "Call that number now.", "rewrited_query": "Call +491512345678 now.", "answer": {"plan": "dial", "arguments": {"phone_number": "+491512345678"}}, "unique_idx": "send_message-1327-ACTION_VIEW_SENT_MESSAGES-1-dial-1"}
